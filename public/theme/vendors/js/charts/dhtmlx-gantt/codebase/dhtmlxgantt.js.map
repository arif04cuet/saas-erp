{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./sources/utils/utils.js","webpack:///./sources/utils/dom_helpers.js","webpack:///./sources/utils/extends.js","webpack:///./sources/utils/helpers.js","webpack:///./sources/utils/eventable.js","webpack:///./sources/core/lightbox/controls/base_control.js","webpack:///./sources/core/ui/grid/editors/editors/base.js","webpack:///./sources/core/ui/layout/cell.js","webpack:///./sources/core/lightbox/controls/select_control.js","webpack:///./sources/core/ui/grid/tasks_grid_dnd_marker_helpers/drop_target.js","webpack:///./sources/core/ui/mouse_event_container.js","webpack:///./sources/core/ui/timeline/timeline.js","webpack:///./sources/utils/env.js","webpack:///./sources/locale/locale.js","webpack:///./sources/core/worktime/calendar_arguments_helper.js","webpack:///./sources/utils/task_tree_helpers.js","webpack:///./sources/core/gantt_data_range.js","webpack:///./sources/core/datastore/power_array.js","webpack:///./sources/core/datastore/datastore.js","webpack:///./sources/core/ui/render/task_bar_render.js","webpack:///./sources/core/ui/grid/grid.js","webpack:///./sources/core/ui/row_position_mixin.js","webpack:///./sources/core/ui/timeline/scales.js","webpack:///./sources/core/ui/layout/layout.js","webpack:///./sources/utils/timeout.js","webpack:///./sources/core/destructor.js","webpack:///./sources/core/common/assert.js","webpack:///./sources/core/gantt_core.js","webpack:///./sources/core/touch.js","webpack:///./sources/css/skins/contrast_white.js","webpack:///./sources/css/skins/contrast_black.js","webpack:///./sources/css/skins/material.js","webpack:///./sources/css/skins/broadway.js","webpack:///./sources/css/skins/terrace.js","webpack:///./sources/css/skins/meadow.js","webpack:///./sources/css/skins/skyblue.js","webpack:///./sources/core/skin.js","webpack:///./sources/core/cached_functions.js","webpack:///./sources/core/data_task_types.gpl.js","webpack:///./sources/core/lightbox_optional_time.js","webpack:///./sources/core/lightbox/controls/parent_control.js","webpack:///./sources/core/lightbox/controls/duration_control.js","webpack:///./sources/core/lightbox/controls/radio_control.js","webpack:///./sources/core/lightbox/controls/checkbox_control.js","webpack:///./sources/utils/html_helpers.js","webpack:///./sources/core/lightbox/controls/time_control.js","webpack:///./sources/core/lightbox/controls/textarea_control.js","webpack:///./sources/core/lightbox/controls/template_control.js","webpack:///./sources/core/lightbox/index.js","webpack:///./sources/core/data.js","webpack:///./sources/core/facades/worktime_calendars.js","webpack:///./sources/core/worktime/strategy/no_work_time.js","webpack:///./sources/core/worktime/time_calculator.js","webpack:///./sources/core/worktime/strategy/calendar_workunit_cache.js","webpack:///./sources/core/worktime/strategy/calendar_strategy.js","webpack:///./sources/core/worktime/calendar_manager.js","webpack:///./sources/core/worktime/work_time.js","webpack:///./sources/core/load.js","webpack:///./sources/core/tasks.js","webpack:///./sources/core/wai_aria.js","webpack:///./sources/core/grid_column_api.gpl.js","webpack:///./sources/core/dynamic_loading.gpl.js","webpack:///./sources/core/plugins/auto_task_types.js","webpack:///./sources/core/plugins/new_task_placeholder.js","webpack:///./sources/core/plugins/resources.js","webpack:///./sources/core/plugins/dhtmlx_hooks.js","webpack:///./sources/core/plugins/jquery_hooks.js","webpack:///./sources/core/plugins/wbs.js","webpack:///./sources/core/plugins/batch_update.js","webpack:///./sources/core/plugins/autoscroll.js","webpack:///./sources/core/plugins/index.js","webpack:///./sources/core/dataprocessor/dataprocessor.js","webpack:///./sources/core/dataprocessor/live_update_hooks.js","webpack:///./sources/core/dataprocessor/hooks.js","webpack:///./sources/core/datastore/datastore_render.js","webpack:///./sources/core/datastore/select.js","webpack:///./sources/core/datastore/treedatastore.js","webpack:///./sources/core/facades/datastore_links.js","webpack:///./sources/core/facades/datastore_tasks.js","webpack:///./sources/core/facades/datastore.js","webpack:///./sources/core/datastore/datastore_hooks.js","webpack:///./sources/core/facades/layout.js","webpack:///./sources/core/data_task_layers.gpl.js","webpack:///./sources/core/ui/main_layout_initializer.js","webpack:///./sources/core/ui/timeline/links_dnd.js","webpack:///./sources/core/ui/timeline/tasks_dnd.js","webpack:///./sources/core/ui/timeline/main_timeline_initializer.js","webpack:///./sources/core/ui/grid/tasks_grid_dnd_marker_helpers/highlight.js","webpack:///./sources/core/ui/grid/tasks_grid_dnd_marker_helpers/multi_level.js","webpack:///./sources/core/ui/grid/tasks_grid_dnd_marker_helpers/locked_level.js","webpack:///./sources/core/ui/grid/tasks_grid_dnd_marker.js","webpack:///./sources/core/ui/grid/tasks_grid_dnd.js","webpack:///./sources/core/ui/grid/main_grid_initializer.js","webpack:///./sources/core/ui/render/task_grid_line_render.js","webpack:///./sources/core/ui/render/link_render.js","webpack:///./sources/core/ui/render/task_bg_render.js","webpack:///./sources/core/ui/render/task_split_render.js","webpack:///./sources/core/ui/grid/editors/editors/predecessor.js","webpack:///./sources/core/ui/grid/editors/editors/date.js","webpack:///./sources/core/ui/grid/editors/editors/select.js","webpack:///./sources/core/ui/grid/editors/editors/number.js","webpack:///./sources/core/ui/grid/editors/editors/text.js","webpack:///./sources/core/ui/grid/editors/keyboard_mappings/keyboard_navigation.js","webpack:///./sources/core/ui/grid/editors/keyboard_mappings/default.js","webpack:///./sources/core/ui/grid/editors/keyboard_mappings.js","webpack:///./sources/core/ui/grid/editors/controller.js","webpack:///./sources/core/ui/grid/grid_resize.gpl.js","webpack:///./sources/core/ui/timeline/tasks_canvas_render.gpl.js","webpack:///./sources/core/ui/layout/scrollbar_cell.js","webpack:///./sources/core/ui/layout/resizer_cell.gpl.js","webpack:///./sources/core/ui/layout/view_cell.js","webpack:///./sources/core/ui/layout/view_layout.js","webpack:///./sources/core/ui/render/render_factory.js","webpack:///./sources/core/ui/render/layer_engine.js","webpack:///./sources/core/ui/gantt_layers.js","webpack:///./sources/core/ui/mouse.js","webpack:///./sources/core/ui/configurable.js","webpack:///./sources/core/ui/ui_factory.js","webpack:///./sources/core/ui/index.js","webpack:///./sources/core/message.js","webpack:///./sources/utils/dom_event_scope.js","webpack:///./sources/core/common/state.js","webpack:///./sources/core/common/templates.js","webpack:///./sources/core/common/dnd.js","webpack:///./sources/core/common/date.js","webpack:///./sources/core/common/ajax.js","webpack:///./sources/core/common/config.js","webpack:///./sources/core/common/services.js","webpack:///./sources/core/common/import.js","webpack:///./sources/constants/index.js","webpack:///./sources/core/gantt.js","webpack:///./sources/core/deprecated_warnings.js","webpack:///./sources/dhtmlxgantt.gpl.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","seed","helpers","copy","result","isDate","Date","isArray","Array","length","isStringObject","String","isNumberObject","Number","isBooleanObject","Boolean","apply","defined","obj","mixin","target","source","force","f","undefined","uid","valueOf","functor","arguments","event","el","handler","capture","addEventListener","attachEvent","eventRemove","removeEventListener","detachEvent","elementPosition","elem","top","left","right","bottom","getBoundingClientRect","box","body","document","docElem","documentElement","parentNode","scrollTop","window","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","offsetWidth","offsetHeight","parseInt","offsetTop","offsetLeft","offsetParent","y","Math","round","x","width","height","isVisible","node","display","visibility","getComputedStyle","style","currentStyle","hasNonNegativeTabIndex","isNaN","getAttribute","hasHref","a","area","nodeName","loLowerCase","isEnabled","input","select","textarea","button","toLowerCase","hasAttribute","getClassName","className","baseVal","indexOf","_trimString","_slave","createElement","getTargetNode","e","tagName","srcElement","str","trim","this","replace","getNodePosition","getFocusableNodes","root","nodes","querySelectorAll","join","nodesArray","slice","splice","getScrollSize","div","cssText","appendChild","clientWidth","removeChild","addClassName","removeClassName","split","regEx","RegExp","insertNode","newone","innerHTML","child","firstChild","removeNode","getChildNodes","css","ch","childNodes","len","out","push","toNode","getElementById","querySelector","locateClassName","classname","strict","trg","ind","charAt","locateAttribute","attribute","getRelativeEventPosition","ev","clientX","clientY","isChildOf","parent","hasClass","element","classList","contains","test","b","__","constructor","units","second","minute","hour","day","week","month","quarter","year","arrayFilter","arr","callback","filter","getSecondsInUnit","unit","forEach","workArray","arrayMap","map","resArray","arrayFind","find","arrayDifference","item","arraySome","hashToArray","hash","sortArrayOfHash","field","desc","compare","sort","throttle","timeout","wait","setTimeout","pop","getFullYear","getMonth","getDate","Function","toString","delay","timer","$cancelTimeout","$pending","clearTimeout","$execute","EventHost","_connected","_silent_mode","_silentStart","_silentEnd","createEventStorage","dhx_catch","z","res","zr","addEvent","removeEvent","id","eventHost","catcher","callObj","attachAll","callEvent","arg0","handlerName","concat","checkEvent","list","detachAllEvents","dummy","console","log","BaseControl","render","set_value","get_value","focus","gantt","BaseEditor","show","column","config","placeholder","hide","get_input","is_changed","currentValue","is_valid","save","utils","eventable","domHelpers","Cell","factory","$container","$parent","$config","headerHeight","$gantt","$domEvents","_createDomEventScope","$id","$name","$factory","destructor","$view","$services","getService","detach","_headerClickHandler","detachAll","cell","scrollTo","clear","getNode","padding","resize","final","$preResize","topCont","topSize","getSize","minWidth","maxWidth","minHeight","maxHeight","setSize","_hide","index","cellIndex","moveView","hidden","$toHTML","content","header","raw","html","canCollapse","$fill","init","self","toggle","delegate","collapsed","size","gravity","getContentSize","$lastSize","contentX","contentY","_getBorderSizes","borders","horizontal","vertical","_currentBorders","_borders","_sizeHeader","_sizeContent","_setBorders","view","cssHash","xLayout","floor","transform","__extends","htmlHelpers","_super","SelectControl","sns","getHtmlSelect","options","_dhx_onchange","onchange","_focus","createDropTargetObject","targetParent","targetIndex","targetId","nextSibling","prevSibling","nextSiblingTarget","dndTaskId","targetTaskId","store","getParent","getBranchIndex","prevSiblingTarget","firstChildTarget","lastChildTarget","children","getChildren","events","mouseEvents","h","ScaleHelper","topPositionMixin","canvasRender","Timeline","$scaleHelper","_findBinary","array","prev","low","high","container","$task","$task_scale","$task_data","$task_bg","$task_links","$task_bars","_tasks","col_width","full_width","trace_x","rendered","$getConfig","attr","linksAttr","bindLinks","item_attribute","link_attribute","layers","_createLayerConfig","tasks","linkLayers","links","_attachLayers","dataHeight","max","scale_height","refresh","backgroundImage","smart_rendering","rowStore","row_height","countVisible","scale","data_els","contentHeight","contentWidth","scrollHeight","scrollWidth","_refreshScales","smart_scales","scales","_scales","_getScaleChunkHtml","taskFilter","expose","renderer","$ui","taskBar","taskSplitBar","append","taskBg","static_background","link","_taskLayers","_linkLayers","getDatastore","taskRenderer","getDataRender","createDataRender","defaultContainer","taskLayers","layer","host","bar_layer","addLayer","_taskRenderer","getLayer","_initStaticBackgroundRender","linkStore","linkRenderer","linkLayer","_linkRenderer","staticRender","_staticBgHandler","getScale","_clearLayers","removeLayer","_render_tasks_scales","scales_html","outer_width","state","getState","_getScales","availWidth","autosize","autosize_min_width","cfgs","prepareConfigs","min_column_width","min_date","max_date","rtl","cfg","fromPos","toPos","templates","scale_row_class","cssClass","tplClass","_prepareScaleHtml","globalConfig","globalTemplates","cells","date","template","date_to_str","startIndex","endIndex","count","inherit_scale_class","scale_cell_class","cssclass","_waiAria","getTimelineCellAttr","dateFromPos","summ","part","_getColumnDuration","posFromDate","columnIndexByDate","assert","wholeCells","partCell","pos","min","days","trace_x_ascending","ignores","ignore_x","day_ind","transition","trace_index_transition","getItemPosition","task","start_date","end_date","xLeft","xRight","getItemTop","getItemHeight","task_height","offset","task_height_offset","primaryScale","subscales","sortScales","add","step","env","isIE","navigator","userAgent","isIE6","XMLHttpRequest","isIE7","isIE8","isOpera","isChrome","isKHTML","isFF","isIPad","search","isEdge","locale","month_full","month_short","day_full","day_short","labels","new_task","icon_save","icon_cancel","icon_details","icon_edit","icon_delete","confirm_closing","confirm_deleting","section_description","section_time","section_type","column_wbs","column_text","column_start_date","column_duration","column_add","confirm_link_deleting","link_start","link_end","type_task","type_project","type_milestone","minutes","hours","weeks","months","years","message_ok","message_cancel","IsWorkTimeArgument","calendar","ClosestWorkTimeArgument","dir","CalculateEndDateArgument","duration","GetDurationArgument","start","end","getWorkHoursArguments","setWorkTimeArguments","unsetWorkTimeArguments","isWorkTimeArguments","processedConfig","duration_unit","getClosestWorkTimeArguments","arg","_getStartEndConfig","param","argumentType","duration_step","getDurationArguments","hasDurationArguments","calculateEndDateArguments","copyLinkIdsArray","linkIds","targetHash","isLinkExists","getLink","copyLinkIds","$source","$target","getSubtreeLinks","rootId","isTaskExists","getTask","eachTask","getSubtreeTasks","_init_tasks_range","scale_unit","scale_offset_minimal","helper","_scale_range_unit","range","start_interval","resolveConfigRange","getSubtaskDates","dateRangeResolver","calculateEndDate","_min_date","_max_date","fit_tasks","old_min","old_max","_adjust_scales","$powerArray","$create","$removeAt","$remove","$find","$insertAt","data","$each","master","$map","$filter","powerArray","DataStore","pull","$initItem","initItem","visibleOrder","fullOrder","_skip_refresh","_filterRule","_searchVisibleOrder","_parseInner","loaded","parse","getItem","_updateOrder","code","updateItem","_removeItemInner","removeItem","_addItemInner","exists","silent","order","data_size","getVisibleItems","getIndexRange","addItem","_changeIdInner","oldId","newId","changeId","_moveInner","sindex","tindex","getIdByIndex","move","clearAll","arraysEqual","arr1","arr2","quick","args","oldOrder","serialize","eachItem","rule","filteredOrder","from","to","Infinity","ret","getItems","getIndexById","_getNullIfUndefined","getFirst","getLast","getNext","getPrev","_task_default_render","_isAllowedUnscheduledTask","$getTemplates","taskType","getTaskType","type","padd","types","milestone","link_line_width","setAttribute","show_progress","done","progress","pr","progressColor","backgroundColor","opacity","progress_text","position","wrapper","drag_progress","isReadonly","drag","markerPos","_render_task_progress","task_text","_render_task_content","textColor","color","basic","itemId","project","isSummaryTask","isSplitTask","select_task","selected_task","drag_id","drag_mode","touch_drag","link_source_id","link_target_id","highlight_critical_path","isCriticalTask","link_landing_area","from_id","from_start","link_from_start","to_start","link_to_start","allowDrag","isLinkAllowed","dragClass","_combine_item_class","task_class","styles","side","_get_link_crossing_css","_render_side_content","leftside_text","_render_leftside_content","rightside_text","_render_rightside_content","setTaskBarAttr","drag_resize","_render_pair","drag_links","show_links","outer","inner","showLinkPoints","touch","text","cond","leftside","start_to_start","finish_to_start","finish_to_finish","_get_conditions","ln","tp","type_renderers","defaultRenderer","gridResize","Grid","$state","gridAriaAttr","gridAttrString","gridDataAriaAttr","gridDataAttrString","$grid","gridScaleRowAttrString","$grid_scale","$grid_data","resizer","_renderHeaderResizers","doOnRender","_mouseDelegates","_addLayers","_initEvents","_validateColumnWidth","numericWidth","outerWidth","columns","getGridColumns","innerWidth","scrollable","_setColumnsWidth","grid_width","_getGridWidth","_initSmartRenderingPlaceholder","_calculateGridWidth","_renderGridHeader","getColumnIndex","getColumn","gridLine","_refreshPlaceholderOnStoreUpdate","scrollY","scroll","getView","getScrollState","scrollSize","$rowsPlaceholder","close","open","_getColumnWidth","min_width","min_grid_column_width","new_width","max_width","_getGridWidthLimits","min_limit","max_limit","newWidth","start_index","columns_width","final_width","extra_width","start_width","col","share","iterator","curExtra","_getColsTotalWidth","cols_width","v","parseFloat","unknown","gridWidth","autofit","diff","delta","changed","_setContentSize","reverse","lineHeigth","last","colWidth","_sort","direction","grid_header_class","label","gridScaleCellAttrString","lineHeight","getRowTop","task_id","dateHelper","services","getSum","sizes","setSumWidth","sum_width","parts","adjustSize","splitSize","full","cellSize","initTemplate","date_scale","min_coll_width","container_width","minDate","maxDate","heights","configs","main_scale","initScaleConfig","processIgnores","initColSizes","limitVisibleRange","unshift","alineScaleColumns","reverseScale","setPosSettings","indexes","trace_indexes","_ignore_time_config","skip_off_time","skip","probe","isWorkTime","display_count","min_col_width","line_height","cont_width","column_count","eachColumn","iterateScales","lower_scale","upper_scale","upper_dates","lower_dates","prevUpper","up","target_index","upper_start","upper_end","lower_start","lower_end","targetWidth","curr","tzOffset","getTimezoneOffset","_correct_dst_change","dates","lastDate","outDate","shared","Layout","_this","$root","_parseConfig","$cells","_resizeScrollbars","scrollbars","scrollbar","scrollChanged","visibleScrollbars","hiddenSrollbars","showScrollbar","hideScrollbar","shouldHide","shouldShow","visibleGroups","group","_syncCellSizes","groupName","newSize","groups","_eachChild","_syncGroupSize","_xLayout","getNextSibling","ownSize","resizeSibling","getPrevSibling","siblingSize","totalGravity","totalSize","k","mainGrid","$content","startStage","mainCall","_resizeInProgress","contentViews","getCellsByType","setContentSize","_getAutosizeMode","isChild","cellId","sub","alert","insertBefore","rows","cols","views","initUI","getCells","_cleanElSize","_getBoxStyles","computed","properties","boxSizing","clientHeight","MozBoxSizing","horPaddings","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","vertPaddings","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","borderBox","innerHeight","outerHeight","boxSizes","contentSizes","_sizes","margin","_calcFreeSpace","_free","_gravity","_calcSize","_configureBorders","borderClass","lastVisibleIndex","lastCell","borderColorClass","_updateCellVisibility","oldVisibleCells","_visibleCells","firstCall","visibleCells","cellView","marginSide","dx","dy","updPerSecond","_on_timeout","ceil","_eventRemoveAll","$layout","resetLightbox","_dp","check","message","show_errors","expire","calculateScaleRange","scroll_size","_reinit","_update_flags","initTemplates","_clearTaskLayers","_clearLinkLayers","reset","layout","createView","storeNames","refreshData","resizeDelay","getPropertyValue","resizeWatcher","tabIndex","contentWindow","addResizeListener","$mouseEvents","$click","buttons","edit","showLightbox","delete","question","title","confirm_deleting_title","_dhtmlx_confirm","$new","deleteTask","hideLightbox","posX","_getHorizontalScrollbar","codeScrollLeft","visible_date","task_scroll_offset","preserve_scroll","new_pos","showDate","setSizes","locate","targetAttribute","task_attribute","_locate_css","_locateHTML","getTaskRowNode","els","changeLightboxType","getLightboxType","_silent_redraw_lightbox","_get_link_type","start_to_finish","prevOffset","time_unit","offsetChanged","$data","tasksStore","_isSplitItem","_is_icon_open_click","getTaskDND","_tasks_dnd","touch_feedback","touch_feedback_duration","_prevent_touch_scroll","_touch_feedback","vibrate","touchEventsSupported","createEvent","_touch_events","touches","pageX","pageY","pointerEnabled","pointerType","msPointerEnabled","MSPOINTER_TYPE_MOUSE","touchHandlers","names","accessor","ignore","scroll_state","dblclicktime","action_mode","scroll_mode","action_start","long_tap_timer","current_target","start_drag","on_mouse_move","preventDefault","cancelBubble","abs","_touch_scroll_active","new_scroll_state","block_action","taskId","on_mouse_down","renders","_getTaskLayers","isTaskVisible","cloneNode","cloneTaskRendered","_start_dnd","_touch_drag","refreshTask","on_mouse_up","now","onDoubleClick","skins","link_arrow_size","lightbox_additional_height","_second_column_width","_third_column_width","material","_redefine_lightbox_buttons","buttons_left","buttons_right","getTaskNode","indx","broadway","_lightbox_template","_config_buttons_left","_config_buttons_right","gantt_delete_btn","gantt_save_btn","terrace","meadow","skyblue","_get_skin","skin","getElementsByTagName","href","match","skinset","_configure","resetSkin","activate","_cached_functions","update_if_changed","active","cache","critical_path_mode","wrap_methods","methods","_prefetch_originals","prefetch","methodname","original","optimizer","argumentsArray","get_arguments_hash","cached_values","has_cached_value","get_cached_value","cache_value","arguments_hash","is_date","getUTCDate","values","stringify_argument","deactivate","setup","override_gantt","gantt_methods","optimize_render","deactivTimeout","_extend_to_optional","lightbox_block","optional_time","section","mapping","_resolve_default_mapping","disable","val","enable","disabled","update_block","_lightbox_id","previousSibling","button_text","resizeLightbox","button_click","_get_typed_lightbox_config","form_blocks","duration_optional","time_optional","time","ParentControl","_display","item_id","getTaskByTime","allow_root","root_id","root_label","_filter","map_to","tmpDom","newOptions","onselect","replaceChild","DurationControl","_getStartDate","_time_format_order","_getDuration","getTimePicker","singleDate","single_date","readonly","lightboxDurationInputAttrString","duration_val","inps","btns","endspan","_calc_date","task_date","_change_duration","onclick","onkeydown","charCode","keyCode","which","constants","KEY_CODES","DOWN","UP","calculateDuration","_fill_lightbox_select","startDate","endDate","RadioControl","radio","default_value","checked","CheckboxControl","checkboxes","entry","attributes","_attributes","getHtmlOption","_getHtmlContainer","getHtmlButton","getHtmlDiv","getHtmlLabel","getHtmlInput","_getHtmlAttributes","tag","TimeControl","auto_end_date","_update_lightbox_select","selects","needSetTime","_getDate","mapOffset","_get_timepicker_step","_getEndDate","TextareaControl","_get_input","TemplateControl","ResourcesControl","getHtmlButtons","floatRight","_migrate_buttons","lightboxButtonAttrString","getHtmlTimePickerOptions","settings","start_year","end_year","tdate","timeFormat","year_range","first","_time_values","time_picker","setTime","getHours","getMinutes","_lightbox_methods","registerProvider","lightbox","getLightbox","_center_lightbox","showCover","_fill_lightbox","lightboxVisibleAttr","round_dnd_dates","timeline","_is_chart_visible","time_step","getLabel","sections","j","updateCollection","list_name","collection","serverList","_lightbox_type","lightboxDiv","fullWidth","classNames","_lightbox","_is_lightbox_timepicker","wide_form","lightboxAttr","drag_lightbox","onmousedown","_ready_to_dnd","onselectstart","cursor","_init_dnd_events","_render_sections","labelBlock","inputBlock","inputId","bindLabelsToInputs","_init_lightbox_events","block","con","scroll_top","scroll_left","view_height","_cover","_document_height","_scroll_height","lightbox_events","_save_lightbox","gantt_cancel_btn","_cancel_lightbox","src","sec","buttonTarget","SPACE","shiftKey","click","keys","edit_save","edit_cancel","getLightboxValues","addTask","updateTask","lightboxHiddenAttr","hideCover","_custom_lightbox","_set_lightbox_values","lightboxHeader","lightbox_header","task_time","substr","getLightboxSection","getValue","setValue","get_template_control","control","get_select_control","get_textarea_control","get_time_control","_move_while_dnd","_finish_dnd","_dnd_start_lb","gantt_unselectable","lb","_lb_start","ariaAttrs","date_part","time_format","getTimeFormat","limit_time_select","first_hour","last_hour","setHours","lightboxSelectAttrString","checkbox","resources","ok","opts","confirm","type_value","oldType","formData","updTask","isUnscheduledTask","unscheduled","show_unscheduled","taskStart","taskEnd","getGlobalTaskIndex","_defaultTaskDate","parent_id","getTaskByIndex","_set_default_task_timing","createTask","setParent","$open","details_on_create","selectTask","showTask","oldid","newid","unselect","getSelectedId","_get_task_timing_mode","task_type","$no_start","$no_end","$rendered_type","_init_task_timing","task_mode","dirty","resetProjectDates","taskMode","_assign_project_dates","getSubtaskDuration","taskTiming","_update_parents","pid","has_changed","oldStart","oldEnd","roundDate","upper","lower","colIndex","steps","correctTaskWorkTime","work_time","correct_work_time","getClosestWorkTime","calendarManager","timeCalculator","getWorkHours","setWorkTime","unsetWorkTime","_hasDuration","hasDuration","createCalendar","addCalendar","getCalendar","getCalendars","getTaskCalendar","deleteCalendar","CalendarDisabledTimeStrategy","argumentsHelper","_calculateDuration","fixedUnits","createArgumentsHelper","NoWorkTimeCalendar","TimeCalculator","$disabledCalendar","_getCalendar","manager","WorkUnitsCache","_cache","getTime","put","Cache","CalendarWorkTimeStrategy","_workingUnitsCache","_getUnitOrder","_timestamp","timestamp","UTC","_checkIfWorkingUnit","_isWorkTime","_is_work_day","_getWorkHours","_is_work_hour","_internDatesPull","_nextDate","_getWorkUnitsBetweenGeneric","stepStart","stepEnd","next","checkFirst","checkLast","isLastStep","_getHoursPerDay","_getWorkHoursForRange","_getWorkUnitsBetweenHours","firstDayStart","firstDayEnd","day_start","lastDayStart","lastDayEnd","startPart","endPart","hourRange","worktime","_setCalendar","_tryChangeCalendarSettings","payload","backup","JSON","stringify","_isEmptyCalendar","datesArray","isFullWeekSet","checkFullArray","getDay","reset_calendar","is_work_unit","mult","_calculateEndDate","added","_getClosestWorkTime","future_target","prev_target","tick","both_directins","inc","unitOrder","biggerTimeUnit","biggerTimeUnitSettings","CalendarWorktimeStrategy","CalendarManager","_calendars","_getDayHoursForMultiple","calendars","currPos","reduce","acc","mergeCalendars","newCalendar","_convertWorktimeSettings","parentCalendar","defaults","fulltime","apiCore","createDefaultCalendars","calendar_property","resource_calendars","resource","calendarId","worktimes","restoreConfigCalendars","global","worktimeFacadeFactory","facade","load","url","_load_url","cl","_load_type","ajax","on_load","xmlDoc","responseText","resp","_process_loading","collections","_load_collections","linksStore","initial_scroll","firstTask","collections_loaded","option","option_key","$ignore","json","dhx_security","security_key","serializeTask","_copyObject","serializeLink","_copyLink","xml_format","rawLinks","getLinks","xml","_xmlNodeToJSON","attrs_only","nodeType","nodeValue","_getCollections","loader","xpath","itms","attrs","_getXML","toptag","getXMLTopNode","xmltop","skey","evs","oldxml","startdate","est","enddate","predecessortasks","editable_property","readonly_property","htmlTags","extraSpaces","stripHTMLLite","htmlText","singleQuotes","escapeQuotes","getAttributeString","dateString","aria-label","_taskCommonAttr","tooltip_text","$dataprocessor_class","isSelectedTask","drag_move","taskRowAttr","order_branch","$level","hasChild","linkAttr","linkTypes","toStart","fromStart","drag_link","gridSeparatorAttr","buttonName","role","tabindex","headerText","time_option","aria-valuemin","multiselect","gridCellAttrString","textValue","gridAddButtonAttrString","messageButtonAttrString","buttonLabel","messageInfoAttr","messageModalAttr","quickInfoAttr","quickInfoHeaderAttrString","quickInfoHeader","quickInfoButtonAttrString","tooltipAttr","tooltipVisibleAttr","tooltipHiddenAttr","wai_aria_attributes","getGridColumn","callIfEnabled","auto_types","updateParents","childId","batchUpdate","checkParent","targetType","getTaskTypeToUpdate","updateTaskType","setTaskType","delTaskParent","allTypes","hasChildren","originalRowDndParent","originalMoveTaskParent","isParsingDone","updateAfterRemoveChild","sid","placeholder_task","insertPlaceholder","placeholders","getTaskBy","afterEdit","newTask","dataProcessor","_silencedPlaceholder","setUpdated","ready","action","commands","command","entity","createResourceMethods","resourceTaskCache","propertyName","propertyValue","filterResourceTasks","getResourceTasks","resourceIds","cacheKey","resourceHash","resourceValue","resource_id","getResourceLoad","resourceProperty","$role","timegrid","currDate","timetable","resource_render_empty_cells","calculateResourceLoad","renderBar","level","renderConnection","prevLevel","nextLevel","selectAssignments","resourceId","resource_property","owners","renderLine","resource_cell_class","resource_cell_value","row","renderHistogram","capacityMatrix","maxCapacity","capacity","histogram_cell_class","histogram_cell_label","fill","histogram_cell_allocated","histogram_cell_capacity","capacityElement","colStart","colEnd","bar","connection","renderHistogramLine","filterTasks","getResourceAssignments","assignments","resourceRow","resourceHistogram","resource_store","dhtmlx","attaches","attachGantt","cmp","attachObject","dataType","dataObj","that","vs","av","grid","border","gridId","gridObj","dhtmlXCellObject","jQuery","$","fn","dhx_gantt","each","newgantt","Gantt","getGanttInstance","error","wbs","_needRecalc","_isRecalcNeeded","_isGroupSort","_groups","is_active","_getWBSCode","_calcWBS","$virtual","$wbs","_setWBSCode","getWBSCode","getByWBSCode","currentNode","_isFirst","_prevSibling","_wbs","_parent","createWbs","resetCache","getTaskByWBSCode","createMethod","isActive","disableMethod","methodName","dummyMethod","restoreMethod","restoreMethods","batchUpdatePayload","batch_update","noRedraw","dp_mode","call_dp","updateMode","setUpdateMode","resetProjects","refreshLink","methodsHash","setGanttMode","sendData","scrollRange","scrollStep","scrollDelay","scrollSpeed","interval","isMove","delayTimeout","startPos","started","eventPos","isScrollState","dragMarker","isResize","isLink","defineDelayTimeout","speed","autoscroll_speed","setInterval","autoscroll_delay","defineScrollInterval","clearInterval","autoscrollInterval","isScroll","autoscroll","posY","need_scroll","scrollState","currentScrollTop","scrollOuterHeight","inner_height","scrollInnerHeight","currentScrollLeft","scrollOuterWidth","inner_width","scrollInnerWidth","autoscroll_step","boxSize","startCoord","serverProcessorURL","serverProcessor","action_param","updatedRows","autoUpdate","_tMode","_headers","_payload","post_delim","_waitMode","_in_progress","_invalid","mandatoryFields","messages","updated","inserted","deleted","invalid","invalid_cell","enableUTFencoding","setTransactionMode","total","headers","_tSend","_endnm","_serialize_as_json","escape","_utf","encodeURIComponent","setDataColumns","_columns","getSyncState","enableDataNames","enablePartialDataSend","_changed","dnd","rowId","findRow","existing","getUserData","set_invalid","setUserData","is_invalid","_clearUpdateFlag","markRow","_methods","details","checkBeforeUpdate","mytype","_h2","editStop","sendAllData","_beforeSendData","_getRowData","_sendData","_serializeAsJSON","serialize_one","stack","pref","serialized","_applyPayload","urlSeparator","a1","queryParams","ids","afterUpdate","a3","_user","a4","method","query","_forEachUpdatedRow","valid","_getAllData","stop","has_one","setVerificator","verifFunction","clearVerificator","pattern","defineAction","_uActions","afterUpdateCallback","tid","btag","marker","correct","soid","finalizeUpdate","cleanUpdate","atag","anObj","_dp_init","setOnAfterUpdate","enableDebug","setOnBeforeUpdateHandler","func","setAutoUpdate","user","_need_update","_update_busy","xml_node","afterAutoUpdate","fullSync","loadUpdate","getUpdates","_v","_a","version","vers","upds","status","updateCallback","upd","objData","xml_date","insertCallback","isExist","addLink","deleteCallback","deleteLink","dataprocessor","liveUpdateHooks","oldAfterUpdate","dataProcessorHandlers","dp","_serverProcessor","modes","_ganttMode","newState","reqUrl","filePath","_change_id","changeLinkId","changeTaskId","_row_style","row_id","_delete_task","_sendTaskOrder","$drop_target","clientSideDelete","clientOnly","treeHelper","cascadeDelete","cascade_delete","dpMode","cascade","itemLinks","getTaskLinks","updateLink","substring","detachDataProcessor","userdata","bindDataStore","itemRepainter","getLayers","render_item","renderers","render_items","skipRepaint","change_id","refreshId","selectedId","deleteItem","subItem","TreeDataStore","_branches","$parentProperty","parentProperty","$getRootId","$openInitially","openInitially","eachParent","_buildTree","_add_branch","calculateItemLevel","_move_branch","$rendered_parent","_replace_branch_child","_traverseBranches","branch","items","source_pid","tbranch","parentId","getSiblings","siblings","_setParentInner","new_pid","startItem","parentsHash","Error","added_already","old_parent","new_parent","old_id","new_id","newbranch","criteria","original_criteria","temp","getLinkCount","getTaskCount","getVisibleTaskCount","getTaskIndex","startTask","calculateTaskLevel","moveTask","createTasksFacade","createLinksFacade","createDatastoreSelect","datastoreRender","getDatastores","createDatastoreFacade","createDatastore","$StoreType","open_tree_initially","setService","storeList","stores","refresh_links","linkId","_clear_data","unselectTask","facadeFactory","parseDate","checkLinkedTaskVisibility","sync_link","sourceTask","targetTask","sync_link_delete","sync_links","mapEvents","conf","mapFrom","mapTo","sourceEvent","targetEvent","$index","oldState","sourceVisible","targetVisible","deletedLinks","onItemLoading","onBeforeAdd","onAfterAdd","onBeforeUpdate","onAfterUpdate","onBeforeDelete","onAfterDelete","onIdChange","onBeforeItemMove","onAfterItemMove","onFilterItem","onItemOpen","onItemClose","onBeforeSelect","onAfterSelect","onAfterUnselect","getTimeline","getGrid","getVerticalScrollbar","getHorizontalScrollbar","DEFAULT_VALUE","tryCall","fallback","getTaskTop","getTaskPosition","getTaskHeight","roundTaskDates","getLinkNode","oldH","oldV","newV","newH","date_x","scroll_to","_scroll_state","x_pos","y_pos","x_inner","y_inner","scrollVer","scrollHor","horState","visible","verState","addTaskLayer","addLinkLayer","initializer","_legacyGridResizerClass","resizers","gridResizer","onCreated","mainTimeline","show_chart","showGrid","show_grid","colsWidth","grid_limits","original_grid_width","skinSettings","_initScrollStateEvents","_getVerticalScrollbar","oldPos","newPos","$scroll_ver","$scroll_hor","_findGridResizer","gridFirst","_getSiblings","_behind","_front","onInitialized","resizeInfo","initialWidth","prevCellWidth","nextCellWidth","viewCell","limits","newBehindSize","newFrontSize","oldBackSize","oldFrontSize","newBackSize","oldSize","onDestroyed","initLinksDND","_link_landing","_link_target_task","_link_target_task_start","_link_source_task","_link_source_task_start","getDndState","DnD","sensitivity","updates_per_second","getLinePos","shift","isStart","taskPos","xEnd","yEnd","milestoneWidth","origWidth","sqrt","getVisibleMilestoneWidth","getMilestonePosition","isMilestone","updateMarkedHtml","drag_link_class","resetDndState","coordinateCircleQuarter","sX","eX","sY","eY","_dir_start","dd","getPosition","advanceMarker","landing","prevTarget","prevLanding","prevToStart","targ","_dir_end","targetChanged","s_x","s_y","e_x","e_y","_direction","getDirectionLine","link_direction_class","dist","pow","tan","angle","atan","PI","sin","cos","ieTransform","shiftLeft","shiftTop","showDirectingLine","createLinkDND","createTaskDND","extend","round_task_dates","dragMultiple","_events","before_start","before_finish","after_finish","_handlers","_domEvents","clear_drag_state","set_actions","drag_from_start","stage","_move","_resize","_resize_progress","attach","start_x","start_y","coords_x","_drag_task_coords","min_duration","diffValue","_find_max_shift","dragItems","correctShift","minX","maxX","maxShift","minShift","new_start","new_end","obj_s_x","obj_e_x","_mouse_position_change","_is_number","isFinite","_update_on_move","_update_item_on_move","curr_date","drag_project","initialDrag","childDrag","_get_drag_mode","_fix_dnd_scale_time","fixStart","fixEnd","_fix_working_times","_finalize_mouse_up","_fireEvent","_dhx_changed","dragProperty","params","trigger","drag_state","taskDnD","linkDnD","_linksDnD","_tasksDnD","_attachDomEvents","_attachStateProvider","extendDom","_clearDomEvents","_clearStateProvider","_delete_link_handler","link_description","coll","coll_date","scale_step","unregisterProvider","gridToPageCoordinates","gridPos","removeLineHighlight","markerLine","highlightPosition","ePos","gridHeight","getTaskMarkerPosition","pointerEvents","markerFolder","highlightFolder","linePos","indentNode","indent","itemTop","itemHeight","childCount","getLineMarkerPosition","highlightRow","dropTarget","relTargetPos","eventTop","findClosesTarget","allowedLevel","targetLevel","findTargetAbove","findTargetBelow","rootLevel","current","getLockedLevelTarget","getMultiLevelTarget","higlighter","dnd_sensitivity","hideQuickInfo","_hideQuickInfo","initial_open_state","outerHTML","drop_target","$transparent","getDropPosition","getTargetTaskId","lockLevel","order_branch_free","getStore","lastTaskOfLevel","last_item","_getGridPos","_getTargetY","_getTaskByY","dropIndex","targetY","over","nextId","prevId","rowDnd","rowDndMarker","extendGantt","ext","inlineEditors","_inlineEditors","createEditors","initEvents","clearEvents","scroll_on_click","sorting_method","callHandler","totalWidth","aria","date_grid","tree","grid_indent","grid_open","grid_folder","grid_blank","grid_file","align","grid_row_class","css_template","drawer","current_pos","dirs","down","path","point","get_lines","dots","line_to","get_path","line","_get_line","get_wrapper_sizes","wrapper_size","link_wrapper_width","get_line_sizes","line_size","marginTop","marginLeft","render_line","innerPos","get_direction","vect","path_builder","point_to","get_points","pt","get_endpoint","xy","shiftX","lineType","get_line_type","forward","sign","milestoneHeight","lines","cssTemplate","link_class","isCriticalLink","endpoint","line_width","_render_link_arrow","borderColor","show_task_cells","task_cell_class","odd","task_row_class","defaultRender","sub_tasks","PredecessorEditor","parseInputString","predecessors","delimiter","formatPredecessors","pred","getLinksDiff","predecessorCodes","selectedLinks","predecessor","lag","getSelectedLinks","existingLinksSearch","linksToAdd","linkKey","linksToDelete","remove","editor","linksDiff","autoSchedule","inputPredecessors","taskPredecessors","html5DateFormat","dateToStr","strToDate","DateEditor","str_to_date","parsed","SelectEditor","optionsHtml","NumberEditor","TextEditor","controller","onBlurDelay","keyNav","keyboardNavigation","activeCell","locateCell","columnName","editorState","getEditorConfig","startEdit","hasEditor","keyboard","preventKeyNav","ENTER","ctrlKey","metaKey","ESC","LEFT","RIGHT","editorType","DELETE","TAB","editPrevCell","editNextCell","modifiers","anyModifier","alt","ctrl","meta","getCommandHandler","onShow","onHide","destroy","keyboard_navigation","defaultPrevented","shouldPrevent","defaultMapping","keyNavMappings","setMapping","getMapping","keyboard_navigation_cells","getKeyboardMapping","textEditorFactory","numberEditorFactory","selectEditorFactory","dateEditorFactory","predecessorEditorFactory","initConfigs","editor_types","number","keyboardMapping","eventBus","inlineEditController","_createPlaceholder","_getEditorPosition","handlers","_itemId","_columnName","_editor","_editorType","_placeholder","editorConfig","_getItemValue","isChanged","newValue","oldValue","_findEditableCell","nextIndex","nextColumn","getNextCell","getFirstCell","getLastCell","canChangeRow","moveRow","editNextRow","editPrevRow","handlerId","ScrollbarCell","_scrollHorizontalHandler","_scrollVerticalHandler","_outerScrollVerticalHandler","_outerScrollHorizontalHandler","_mouseWheelHandler","_isHorizontal","scrollPosition","_isVertical","_initVertical","_initHorizontal","_initMouseWheel","_initLinkedViews","_getRootParent","_eachView","eachCell","_getLinkedViews","scrollX","_updateLinkedViews","scrollHorizontally","_scrolling","scrollVertically","_wheel_time","_oldLeft","_getScrollSize","outerSize","isHorizontal","linked","scrollProperty","innerSizeProperty","outerProperty","_getScrollOffset","cellScrollSize","nonScrollableSize","outerScroll","innerScroll","scrollSizes","_setScrollSize","toggleVisibility","_getScaleOffset","parentLayout","_oldTop","_checkWheelTarget","targetNode","connectedViews","ff","wx","deltaX","wheelDeltaX","wy","deltaY","wheelDelta","oldLeft","detail","oldTop","ViewCell","childConfig","$initialized","unload","outerX","outerY","childSize","ViewLayout","$cell","byMaxSize","otherCell","task_area_pulls","task_area_renderers","getRenderer","layer_attribute","dom","remove_item","clear_container","buffer","createDocumentFragment","vis","replace_item","newNode","restore","clearRenderers","renderFactoryProvider","mergeFilters","filter_methods","filter_method","renderFactory","createGroup","get_container","rel_root","defaultFilters","renderGroup","tempCollection","filters","_add","pending","topmost","rel","eachLayer","createLayerFactory","previusSiblingContainer","defaultContainerSibling","removeTaskLayer","_getLinkLayers","removeLinkLayer","createMouseHandler","eventHandlers","doubleclick","contextMenu","addEventTarget","onClick","findEventHandlers","callEventHandlers","onContextMenu","returnValue","delegateHandlers","handlerResult","details_on_dblclick","onMouseMove","_last_move_event","domEvents","eventName","elementHandlers","ViewSettings","extendSettings","parentSettings","own","parentView","parentConfig","parentTemplates","configurable","createFactory","createdViews","creator","configure","registerView","viewConstructor","uiFactory","createLayers","Resizer","Scrollbar","ResourceGrid","ResourceTimeline","ResourceHistogram","gridEditorsFactory","renderTaskBar","renderSplitTaskBar","renderTaskBg","renderLink","gridRenderer","mainGridInitializer","mainTimelineInitializer","mainLayoutInitializer","attachInitializer","layersEngine","layersApi","layersService","boxAttribute","_dhx_msg_cfg","usercall","modalBox","modal_key","messageBox","modality","cover","buttonAriaAttrs","getFirstDefined","_createBox","cancel","contentId","btn","_boxStructure","alertPopup","confirmPopup","boxPopup","box_params","focusable","timers","info","hideAll","popups","modalbox","createScope","stateProviders","internal","provider","regTemplates","initial","template_name","server_utc","api_date","task_unscheduled_time","grid_date_format","tooltip_date_format","copyDomEvent","altKey","_obj","_settings","inputMethods","getInputMethods","_drag_start_timer","clearDragTimer","original_target","dragStart","traceDragEvents","domElement","inputMethod","mousemove","dragMove","dragScroll","limited_mousemove","mouseup","dragEnd","checkPositionChange","diff_x","diff_y","initDnDMarker","backupEventTarget","domEvent","getEvent","backup_element","elementFromPoint","month_short_hash","month_full_hash","old","hour_start","time_part","week_start","start_on_monday","month_start","setDate","quarter_start","res_month","setMonth","year_start","setMinutes","minute_start","getSeconds","setSeconds","getMilliseconds","setMilliseconds","_add_days","ndate","setYear","add_quarter","to_fixed","num","format","utc","getISOWeek","getWeek","splt","mask","_getWeekNumber","isoWeek","nday","first_thursday","year_number","ordinal_date","getUTCISOWeek","convert_to_utc","getUTCFullYear","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","DOMParser","parseFromString","ActiveXObject","async","loadXML","tagname","xhr","responseXML","xpathExp","docObj","selectNodes","ownerDocument","evaluate","XPathResult","ANY_TYPE","iterateNext","_call","onLoad","getSync","postData","del","post","postSync","getLong","postLong","longParams","isQt","onreadystatechange","readyState","setRequestHeader","toUpperCase","send","branch_loading","branch_loading_property","show_loading","dhx_save_btn","dhx_cancel_btn","dhx_delete_btn","project_sections","milestone_sections","grid_resizer_column_attribute","grid_resizer_attribute","keep_grid_width","grid_resize","prevent_default_scroll","service","$inject","templatesLoader","stateService","uiApi","createLayoutFacade","warnings","base"],"mappings":"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","file":"dhtmlxgantt.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/codebase/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 134);\n","var helpers = require(\"./helpers\");\n\nfunction copy(object) {\n\tvar i, result; // iterator, types array, result\n\n\tif (object && typeof object == \"object\") {\n\n\t\tswitch (true){\n\t\t\tcase (helpers.isDate(object)):\n\t\t\t\tresult = new Date(object);\n\t\t\t\tbreak;\n\t\t\tcase (helpers.isArray(object)):\n\t\t\t\tresult = new Array(object.length);\n\t\t\t\tfor(i = 0; i < object.length; i++){\n\t\t\t\t\tresult[i] = copy(object[i]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase (helpers.isStringObject(object)):\n\t\t\t\tresult = new String(object);\n\t\t\t\tbreak;\n\t\t\tcase (helpers.isNumberObject(object)):\n\t\t\t\tresult = new Number(object);\n\t\t\t\tbreak;\n\t\t\tcase (helpers.isBooleanObject(object)):\n\t\t\t\tresult = new Boolean(object);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tresult = {};\n\t\t\t\tfor (i in object) {\n\t\t\t\t\tif (Object.prototype.hasOwnProperty.apply(object, [i]))\n\t\t\t\t\t\tresult[i] = copy(object[i]);\n\t\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn result || object;\n}\n\nfunction mixin (target, source, force){\n\tfor (var f in source)\n\t\tif (((target[f] === undefined) || force)) target[f]=source[f];\n\treturn target;\n}\n\nfunction defined(obj) {\n\treturn typeof(obj) != \"undefined\";\n}\n\nvar seed;\nfunction uid() {\n\tif (!seed)\n\t\tseed = (new Date()).valueOf();\n\n\tseed++;\n\treturn seed;\n}\n\n//creates function with specified \"this\" pointer\nfunction bind(functor, object){\n\tif(functor.bind)\n\t\treturn functor.bind(object);\n\telse\n\t\treturn function(){ return functor.apply(object,arguments); };\n}\n\nfunction event(el, event, handler, capture){\n\tif (el.addEventListener)\n\t\tel.addEventListener(event, handler, capture === undefined ? false : capture);\n\n\telse if (el.attachEvent)\n\t\tel.attachEvent(\"on\"+event, handler);\n}\n\nfunction eventRemove(el, event, handler, capture){\n\tif (el.removeEventListener)\n\t\tel.removeEventListener(event, handler, capture === undefined ? false : capture);\n\n\telse if (el.detachEvent)\n\t\tel.detachEvent(\"on\"+event, handler);\n}\n\n\nmodule.exports = {\n\tcopy: copy,\n\tdefined: defined,\n\tmixin: mixin,\n\tuid: uid,\n\tbind: bind,\n\tevent: event,\n\teventRemove: eventRemove\n};","//returns position of html element on the page\nfunction elementPosition(elem) {\n\tvar top=0, left=0, right=0, bottom=0;\n\tif (elem.getBoundingClientRect) { //HTML5 method\n\t\tvar box = elem.getBoundingClientRect();\n\t\tvar body = document.body;\n\t\tvar docElem = (document.documentElement ||\n\t\t\tdocument.body.parentNode ||\n\t\t\tdocument.body);\n\n\t\tvar scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n\t\tvar scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n\t\tvar clientTop = docElem.clientTop || body.clientTop || 0;\n\t\tvar clientLeft = docElem.clientLeft || body.clientLeft || 0;\n\t\ttop  = box.top +  scrollTop - clientTop;\n\t\tleft = box.left + scrollLeft - clientLeft;\n\n\t\tright = document.body.offsetWidth - box.right;\n\t\tbottom = document.body.offsetHeight - box.bottom;\n\t} else { //fallback to naive approach\n\t\twhile(elem) {\n\t\t\ttop = top + parseInt(elem.offsetTop,10);\n\t\t\tleft = left + parseInt(elem.offsetLeft,10);\n\t\t\telem = elem.offsetParent;\n\t\t}\n\n\t\tright = document.body.offsetWidth - elem.offsetWidth - left;\n\t\tbottom = document.body.offsetHeight - elem.offsetHeight - top;\n\t}\n\treturn { y: Math.round(top), x: Math.round(left), width:elem.offsetWidth, height:elem.offsetHeight, right: Math.round(right), bottom: Math.round(bottom) };\n}\n\nfunction isVisible(node){\n\tvar display = false,\n\t\tvisibility = false;\n\tif(window.getComputedStyle){\n\t\tvar style = window.getComputedStyle(node, null);\n\t\tdisplay = style[\"display\"];\n\t\tvisibility = style[\"visibility\"];\n\t}else if(node.currentStyle){\n\t\tdisplay = node.currentStyle[\"display\"];\n\t\tvisibility = node.currentStyle[\"visibility\"];\n\t}\n\treturn (display != \"none\" && visibility != \"hidden\");\n}\n\nfunction hasNonNegativeTabIndex(node){\n\treturn !isNaN(node.getAttribute(\"tabindex\")) && (node.getAttribute(\"tabindex\")*1 >= 0);\n}\n\nfunction hasHref(node){\n\tvar canHaveHref = {\"a\": true, \"area\": true};\n\tif(canHaveHref[node.nodeName.loLowerCase()]){\n\t\treturn !!node.getAttribute(\"href\");\n\t}\n\treturn true;\n}\n\nfunction isEnabled(node){\n\tvar canDisable = {\"input\":true, \"select\":true, \"textarea\":true, \"button\":true, \"object\":true};\n\tif(canDisable[node.nodeName.toLowerCase()]){\n\t\treturn !node.hasAttribute(\"disabled\");\n\t}\n\n\treturn true;\n}\n\nfunction getFocusableNodes(root){\n\tvar nodes = root.querySelectorAll([\n\t\t\"a[href]\",\n\t\t\"area[href]\",\n\t\t\"input\",\n\t\t\"select\",\n\t\t\"textarea\",\n\t\t\"button\",\n\t\t\"iframe\",\n\t\t\"object\",\n\t\t\"embed\",\n\t\t\"[tabindex]\",\n\t\t\"[contenteditable]\"\n\t].join(\", \"));\n\n\tvar nodesArray = Array.prototype.slice.call(nodes, 0);\n\tfor(var i = 0; i < nodesArray.length; i++){\n\t\tvar node = nodesArray[i];\n\t\tvar isValid = (hasNonNegativeTabIndex(node)  || isEnabled(node) || hasHref(node)) && isVisible(node);\n\t\tif(!isValid){\n\t\t\tnodesArray.splice(i, 1);\n\t\t\ti--;\n\t\t}\n\t}\n\treturn nodesArray;\n}\n\nfunction getScrollSize(){\n\tvar div = document.createElement(\"div\");\n\tdiv.style.cssText=\"visibility:hidden;position:absolute;left:-1000px;width:100px;padding:0px;margin:0px;height:110px;min-height:100px;overflow-y:scroll;\";\n\n\tdocument.body.appendChild(div);\n\tvar width = div.offsetWidth-div.clientWidth;\n\tdocument.body.removeChild(div);\n\n\treturn width;\n}\n\nfunction getClassName(node){\n\tif(!node) return \"\";\n\n\tvar className = node.className || \"\";\n\tif(className.baseVal)//'className' exist but not a string - IE svg element in DOM\n\t\tclassName = className.baseVal;\n\n\tif(!className.indexOf)\n\t\tclassName = \"\";\n\n\treturn _trimString(className);\n}\n\nfunction addClassName(node, className){\n\tif (className && node.className.indexOf(className) === -1) {\n\t\tnode.className += \" \" + className;\n\t}\n}\n\nfunction removeClassName(node, name) {\n\tname = name.split(\" \");\n\tfor (var i = 0; i < name.length; i++) {\n\t\tvar regEx = new RegExp(\"\\\\s?\\\\b\" + name[i] + \"\\\\b(?![-_.])\", \"\");\n\t\tnode.className = node.className.replace(regEx, \"\");\n\t}\n}\n\nfunction hasClass(element, className){\n\tif ('classList' in element) {\n\t\treturn element.classList.contains(className);\n\t} else { \n\t\treturn new RegExp(\"\\\\b\" + className + \"\\\\b\").test(element.className);\n\t}\n}\n\nfunction toNode(node) {\n\tif (typeof node === \"string\") {\n\t\treturn (document.getElementById(node) || document.querySelector(node) || document.body);\n\t}\n\treturn node || document.body;\n}\n\nvar _slave = document.createElement(\"div\");\nfunction insert(node, newone) {\n\t_slave.innerHTML = newone;\n\tvar child = _slave.firstChild;\n\tnode.appendChild(child);\n\treturn child;\n}\n\nfunction remove(node) {\n\tif (node && node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\nfunction getChildren(node, css) {\n\tvar ch = node.childNodes;\n\tvar len = ch.length;\n\tvar out = [];\n\tfor (var i = 0; i < len; i++) {\n\t\tvar obj = ch[i];\n\t\tif (obj.className && obj.className.indexOf(css) !== -1) {\n\t\t\tout.push(obj);\n\t\t}\n\t}\n\treturn out;\n}\n\nfunction getTargetNode(e){\n\tvar trg;\n\tif (e.tagName)\n\t\ttrg = e;\n\telse {\n\t\te=e||window.event;\n\t\ttrg=e.target||e.srcElement;\n\t}\n\treturn trg;\n}\n\nfunction locateAttribute(e, attribute) {\n\tif(!attribute) return;\n\n\tvar trg = getTargetNode(e);\n\n\twhile (trg){\n\t\tif (trg.getAttribute){\t//text nodes has not getAttribute\n\t\t\tvar test = trg.getAttribute(attribute);\n\t\t\tif (test) return trg;\n\t\t}\n\t\ttrg=trg.parentNode;\n\t}\n\treturn null;\n}\n\nfunction _trimString(str){\n\tvar func = String.prototype.trim || function(){ return this.replace(/^\\s+|\\s+$/g, \"\"); };\n\treturn func.apply(str);\n}\n\nfunction locateClassName(e, classname, strict){\n\tvar trg = getTargetNode(e);\n\tvar css = \"\";\n\n\tif(strict === undefined)\n\t\tstrict = true;\n\n\twhile (trg){\n\t\tcss = getClassName(trg);\n\t\tif(css){\n\t\t\tvar ind = css.indexOf(classname);\n\t\t\tif (ind >= 0){\n\t\t\t\tif (!strict)\n\t\t\t\t\treturn trg;\n\n\t\t\t\t//check that we have exact match\n\t\t\t\tvar left = (ind === 0) || (!_trimString(css.charAt(ind - 1)));\n\t\t\t\tvar right = ((ind + classname.length >= css.length)) || (!_trimString(css.charAt(ind + classname.length)));\n\n\t\t\t\tif (left && right)\n\t\t\t\t\treturn trg;\n\t\t\t}\n\t\t}\n\t\ttrg=trg.parentNode;\n\t}\n\treturn null;\n}\n\n/*\nevent position relatively to DOM element\n */\nfunction getRelativeEventPosition(ev, node){\n\tvar d = document.documentElement;\n\tvar box = elementPosition(node);\n\n\treturn {\n\t\tx: ev.clientX + d.scrollLeft - d.clientLeft - box.x + node.scrollLeft,\n\t\ty: ev.clientY + d.scrollTop - d.clientTop - box.y + node.scrollTop\n\t};\n}\n\n\nfunction isChildOf(child, parent){\n\tif(!child || !parent){\n\t\treturn false;\n\t}\n\n\twhile(child && child != parent) {\n\t\tchild = child.parentNode;\n\t}\n\n\treturn child === parent;\n}\n\nmodule.exports = {\n\tgetNodePosition: elementPosition,\n\tgetFocusableNodes: getFocusableNodes,\n\tgetScrollSize: getScrollSize,\n\tgetClassName: getClassName,\n\taddClassName: addClassName,\n\tremoveClassName: removeClassName,\n\tinsertNode: insert,\n\tremoveNode: remove,\n\tgetChildNodes: getChildren,\n\ttoNode: toNode,\n\tlocateClassName:locateClassName,\n\tlocateAttribute: locateAttribute,\n\tgetTargetNode: getTargetNode,\n\tgetRelativeEventPosition: getRelativeEventPosition,\n\tisChildOf: isChildOf,\n\thasClass: hasClass\n};","module.exports = function (d, b) {\n\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\tfunction __() { this.constructor = d; }\n\td.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};","var units = {\n\t\"second\": 1,\n\t\"minute\": 60,\n\t\"hour\": 60 * 60,\n\t\"day\": 60 * 60 * 24,\n\t\"week\": 60 * 60 * 24 * 7,\n\t\"month\": 60 * 60 * 24 * 30,\n\t\"quarter\": 60 * 60 * 24 * 30 * 3,\n\t\"year\": 60 * 60 * 24 * 365\n};\nfunction getSecondsInUnit(unit){\n\treturn units[unit] || units.hour;\n}\n\nfunction forEach(arr, callback) {\n\tif (arr.forEach) {\n\t\tarr.forEach(callback);\n\t} else {\n\t\tvar workArray = arr.slice();\n\t\tfor (var i = 0; i < workArray.length; i++) {\n\t\t\tcallback(workArray[i], i);\n\t\t}\n\t}\n}\n\nfunction arrayMap(arr, callback) {\n\tif (arr.map) {\n\t\treturn arr.map(callback);\n\t} else {\n\t\tvar workArray = arr.slice();\n\t\tvar resArray = [];\n\n\t\tfor (var i = 0; i < workArray.length; i++) {\n\t\t\tresArray.push(callback(workArray[i], i));\n\t\t}\n\t\treturn resArray;\n\t}\n}\n\n\nfunction arrayFind(arr, callback) {\n\tif (arr.find) {\n\t\treturn arr.find(callback);\n\t} else {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (callback(arr[i], i)) {\n\t\t\t\treturn arr[i];\n\t\t\t}\n\t\t}\n\t}\n}\n\n// iframe-safe array type check instead of using instanceof\nfunction isArray(obj){\n\tif(Array.isArray){\n\t\treturn Array.isArray(obj);\n\t}else{\n\t\t// close enough\n\t\treturn (obj && obj.length !== undefined && obj.pop && obj.push);\n\t}\n}\n\n// non-primitive string object, e.g. new String(\"abc\")\nfunction isStringObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function String() { [native code] }\";\n}\n\n// non-primitive number object, e.g. new Number(5)\nfunction isNumberObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function Number() { [native code] }\";\n}\n\n// non-primitive number object, e.g. new Boolean(true)\nfunction isBooleanObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function Boolean() { [native code] }\";\n}\n\nfunction isDate(obj) {\n\tif (obj && typeof obj === \"object\") {\n\t\treturn !!(obj.getFullYear && obj.getMonth && obj.getDate);\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction arrayFilter(arr, callback) {\n\tvar result = [];\n\n\tif (arr.filter) {\n\t\treturn arr.filter(callback);\n\t} else {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (callback(arr[i], i)) {\n\t\t\t\tresult[result.length] = arr[i];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nfunction hashToArray(hash) {\n\tvar result = [];\n\n\tfor (var key in hash) {\n\t\tif (hash.hasOwnProperty(key)) {\n\t\t\tresult.push(hash[key]);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction arraySome(arr, callback) {\n\tif (arr.length === 0) return false;\n\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (callback(arr[i], i, arr)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction arrayDifference(arr, callback) {\n\treturn arrayFilter(arr, function(item, i) {\n\t\treturn !callback(item, i);\n\t});\n}\n\nfunction throttle (callback, timeout) {\n\tvar wait = false;\n\n\treturn function () {\n\t\tif (!wait) {\n\t\t\tcallback.apply(null, arguments);\n\t\t\twait = true;\n\t\t\tsetTimeout(function () {\n\t\t\t\twait = false;\n\t\t\t}, timeout);\n\t\t}\n\t};\n}\n\nfunction delay (callback, timeout){\n\tvar timer;\n\t\n\n\tvar result = function() {\n\t\tresult.$cancelTimeout();\n\t\tcallback.$pending = true;\n\t\ttimer = setTimeout(function(){\n\t\t\tcallback();\n\t\t\tresult.$pending = false;\n\t\t}, timeout);\n\t};\n\t\n\tresult.$pending = false;\n\tresult.$cancelTimeout = function(){\n\t\tclearTimeout(timer);\n\t\tcallback.$pending = false;\n\t};\n\tresult.$execute = function(){\n\t\tcallback();\n\t\tcallback.$cancelTimeout();\n\t};\n\n\treturn result;\n}\n\nfunction sortArrayOfHash(arr, field, desc) {\n\tvar compare = function(a, b) {\n\t\treturn a < b;\n\t};\n\n\tarr.sort(function(a, b) {\n\t\tif (a[field] === b[field]) return 0;\n\t\t\n\t\treturn desc ? compare(a[field], b[field]) : compare(b[field], a[field]);\n\t});\n}\n\nmodule.exports = {\n\tgetSecondsInUnit: getSecondsInUnit,\n\tforEach: forEach,\n\tarrayMap: arrayMap,\n\tarrayFind: arrayFind,\n\tarrayFilter: arrayFilter,\n\tarrayDifference: arrayDifference,\n\tarraySome: arraySome,\n\thashToArray: hashToArray,\n\tsortArrayOfHash: sortArrayOfHash,\n\tthrottle: throttle,\n\tisArray: isArray,\n\tisDate: isDate,\n\tisStringObject: isStringObject,\n\tisNumberObject: isNumberObject,\n\tisBooleanObject: isBooleanObject,\n\tdelay: delay\n};","var EventHost = function(){\n\tthis._connected = [];\n\tthis._silent_mode = false;\n};\n\nEventHost.prototype = {\n\t_silentStart: function() {\n\t\tthis._silent_mode = true;\n\t},\n\t_silentEnd: function() {\n\t\tthis._silent_mode = false;\n\t}\n};\n\nvar\tcreateEventStorage = function(obj) {\n\tvar dhx_catch = [];\n\tvar z = function(){\n\t\tvar res = true;\n\t\tfor (var i = 0; i < dhx_catch.length; i++){\n\t\t\tif (dhx_catch[i]){\n\t\t\t\tvar zr = dhx_catch[i].apply(obj, arguments);\n\t\t\t\tres=res&&zr;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t};\n\tz.addEvent=function(ev){\n\t\tif (typeof (ev) == \"function\")\n\t\t\treturn dhx_catch.push(ev)-1;\n\t\treturn false;\n\t};\n\tz.removeEvent=function(id){\n\t\tdhx_catch[id]=null;\n\t};\n\treturn z;\n};\n\nfunction makeEventable(obj){\n\n\tvar eventHost = new EventHost();\n\tobj.attachEvent=function(name, catcher, callObj){\n\t\tname='ev_'+name.toLowerCase();\n\t\tif (!eventHost[name])\n\t\t\teventHost[name] = createEventStorage(callObj||this);\n\n\t\treturn(name+':'+eventHost[name].addEvent(catcher)); //return ID (event name & event ID)\n\t};\n\tobj.attachAll = function(callback, callObj){\n\t\tthis.attachEvent('listen_all', callback, callObj);\n\t};\n\n\tobj.callEvent=function(name, arg0, callObj){\n\t\tif (eventHost._silent_mode) return true;\n\n\t\tvar handlerName = 'ev_'+name.toLowerCase();\n\n\t\tif (eventHost['ev_listen_all']){\n\t\t\teventHost['ev_listen_all'].apply(callObj || this, [name].concat(arg0));\n\t\t}\n\n\t\tif (eventHost[handlerName])\n\t\t\treturn eventHost[handlerName].apply(callObj || this, arg0);\n\t\treturn true;\n\t};\n\tobj.checkEvent=function(name){\n\t\treturn (!!eventHost['ev_'+name.toLowerCase()]);\n\t};\n\tobj.detachEvent=function(id){\n\t\tif (id){\n\t\t\tvar list = id.split(':');           //get EventName and ID\n\t\t\teventHost[list[0]].removeEvent(list[1]); //remove event\n\t\t}\n\t};\n\tobj.detachAllEvents = function(){\n\t\tfor (var name in eventHost){\n\t\t\tif (name.indexOf(\"ev_\") === 0)\n\t\t\t\tdelete eventHost[name];\n\t\t}\n\t};\n\n}\n\nmodule.exports = makeEventable;","function dummy() {\n\t// eslint-disable-next-line\n\tconsole.log(\"Method is not implemented.\"); \n}\nfunction BaseControl() {\n}\n\n// base methods will be runned in gantt context\nBaseControl.prototype.render = dummy; // arguments: sns\nBaseControl.prototype.set_value = dummy; // arguments: node, value, ev, sns(config)\nBaseControl.prototype.get_value = dummy; // arguments node, ev, sns(config)\nBaseControl.prototype.focus = dummy; // arguments: node\n\nmodule.exports = function(gantt) { // we could send current instance of gantt to module\n\treturn BaseControl;\n};","module.exports = function (gantt) {\n\n\tvar BaseEditor = function () {\n\t};\n\n\tBaseEditor.prototype = {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t},\n\t\thide: function () {\n\t\t},\n\t\tset_value: function (value, id, column, node) {\n\t\t\tthis.get_input(node).value = value;\n\t\t},\n\t\tget_value: function (id, column, node) {\n\t\t\treturn this.get_input(node).value || \"\";\n\t\t},\n\t\tis_changed: function (value, id, column, node) {\n\t\t\tvar currentValue = this.get_value(id, column, node);\n\t\t\tif (currentValue && value && currentValue.valueOf && value.valueOf) {\n\t\t\t\treturn currentValue.valueOf() != value.valueOf();\n\t\t\t} else {\n\t\t\t\treturn currentValue != value;\n\t\t\t}\n\t\t},\n\t\tis_valid: function (value, id, column, node) {\n\t\t\treturn true;\n\t\t},\n\n\t\tsave: function (id, column, node) {\n\n\t\t},\n\t\tget_input: function (node) {\n\t\t\treturn node.querySelector(\"input\");\n\t\t},\n\t\tfocus: function (node) {\n\t\t\tvar input = this.get_input(node);\n\t\t\tif (!input) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (input.focus) {\n\t\t\t\tinput.focus();\n\t\t\t}\n\n\t\t\tif (input.select) {\n\t\t\t\tinput.select();\n\t\t\t}\n\t\t}\n\t};\n\treturn BaseEditor;\n};","var utils = require(\"../../../utils/utils\"),\n\teventable = require(\"../../../utils/eventable\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\");\n\nvar Cell = (function () {\n\t\"use strict\";\n\n\tfunction Cell(parent, config, factory, gantt) {\n\t\tif (parent) {\n\t\t\tthis.$container = domHelpers.toNode(parent);\n\t\t\tthis.$parent = parent;\n\t\t}\n\t\t// save config\n\t\tthis.$config = utils.mixin(config, {\n\t\t\theaderHeight: 33\n\t\t});\n\t\tthis.$gantt = gantt;\n\t\tthis.$domEvents = gantt._createDomEventScope();\n\t\t// set id\n\t\tthis.$id = config.id || \"c\" + utils.uid();\n\n\t\tthis.$name = \"cell\";\n\t\tthis.$factory = factory;\n\n\t\teventable(this);\n\n\t}\n\n\tCell.prototype.destructor = function () {\n\t\tthis.$parent = this.$container = this.$view = null;\n\t\tvar mouse = this.$gantt.$services.getService(\"mouseEvents\");\n\t\tmouse.detach(\"click\", \"gantt_header_arrow\", this._headerClickHandler);\n\t\tthis.$domEvents.detachAll();\n\t\tthis.callEvent(\"onDestroy\", []);\n\t\tthis.detachAllEvents();\n\t};\n\tCell.prototype.cell = function (id) {\n\t\treturn null;\n\t};\n\n\tCell.prototype.scrollTo = function(left, top){\n\n\t\tif (left*1 == left){\n\t\t\tthis.$view.scrollLeft = left;\n\t\t}\n\t\tif(top*1 == top){\n\t\t\tthis.$view.scrollTop = top;\n\t\t}\n\t};\n\n\tCell.prototype.clear = function(){\n\t\tthis.getNode().innerHTML = \"\";\n\t\tthis.getNode().className = \"gantt_layout_content\";\n\t\tthis.getNode().style.padding = \"0\";\n\t};\n\n\tCell.prototype.resize = function (final) {\n\t\tif (this.$parent) {\n\t\t\treturn this.$parent.resize(final);\n\t\t}\n\n\t\tif(final === false){\n\t\t\tthis.$preResize = true;\n\t\t}\n\n\t\tvar topCont = this.$container;\n\t\tvar x = topCont.offsetWidth;\n\t\tvar y = topCont.offsetHeight;\n\t\tvar topSize = this.getSize();\n\t\tif (topCont === document.body) {\n\t\t\tx = document.body.offsetWidth;\n\t\t\ty = document.body.offsetHeight;\n\t\t}\n\t\tif (x < topSize.minWidth) {\n\t\t\tx = topSize.minWidth;\n\t\t}\n\t\tif (x > topSize.maxWidth) {\n\t\t\tx = topSize.maxWidth;\n\t\t}\n\t\tif (y < topSize.minHeight) {\n\t\t\ty = topSize.minHeight;\n\t\t}\n\t\tif (y > topSize.maxHeight) {\n\t\t\ty = topSize.maxHeight;\n\t\t}\n\t\tthis.setSize(x, y);\n\n\t\tif(!this.$preResize){\n\t\t//\tself.callEvent(\"onResize\", [x, y]);\n\t\t}\n\t\tthis.$preResize = false;\n\t};\n\n\tCell.prototype.hide = function () {\n\t\tthis._hide(true);\n\t\tthis.resize();\n\t};\n\tCell.prototype.show = function (force) {\n\t\tthis._hide(false);\n\t\tif (force && this.$parent) {\n\t\t\tthis.$parent.show();\n\t\t}\n\t\tthis.resize();\n\t};\n\tCell.prototype._hide = function (mode) {\n\t\tif (mode === true && this.$view.parentNode) {\n\t\t\tthis.$view.parentNode.removeChild(this.$view);\n\t\t}\n\t\telse if (mode === false && !this.$view.parentNode) {\n\t\t\tvar index = this.$parent.cellIndex(this.$id);\n\t\t\tthis.$parent.moveView(this, index);\n\t\t}\n\t\tthis.$config.hidden = mode;\n\t};\n\tCell.prototype.$toHTML = function (content, css) {\n\t\tif (content === void 0) { content = \"\"; }\n\t\tcss = [(css || \"\"), (this.$config.css || \"\")].join(\" \");\n\t\tvar obj = this.$config;\n\t\tvar header = \"\";\n\t\tif (obj.raw) {\n\t\t\tcontent = typeof obj.raw === \"string\" ? obj.raw : \"\";\n\t\t}\n\t\telse {\n\t\t\tif (!content) {\n\t\t\t\tcontent = \"<div class='gantt_layout_content' \"+(css ? \" class='\"+css+\"' \" : \"\")+\" >\" + (obj.html || \"\") + \"</div>\";\n\t\t\t}\n\t\t\tif (obj.header) {\n\t\t\t\tvar collapseIcon = obj.canCollapse ? \"<div class='gantt_layout_header_arrow'></div>\" : \"\";\n\t\t\t\theader = \"<div class='gantt_layout_header'>\" + collapseIcon + \"<div class='gantt_layout_header_content'>\" + obj.header + \"</div></div>\";\n\t\t\t}\n\t\t}\n\t\treturn \"<div class='gantt_layout_cell \" + css + \"' data-cell-id='\" + this.$id + \"'>\" + header + content + \"</div>\";\n\t};\n\tCell.prototype.$fill = function (node, parent) {\n\t\tthis.$view = node;\n\t\tthis.$parent = parent;\n\t\tthis.init();\n\t};\n\tCell.prototype.getNode = function () {\n\t\treturn (this.$view.querySelector(\"gantt_layout_cell\") || this.$view);\n\t};\n\tCell.prototype.init = function () {\n\t\t// [NOT-GOOD] code is executed for each component, while it still has only one handler, it is no good\n\n\t\tvar self = this;\n\n\t\tthis._headerClickHandler = function(e){\n\t\t\tvar cellId = domHelpers.locateAttribute(e, \"data-cell-id\");\n\t\t\tif(cellId == self.$id){\n\t\t\t\tself.toggle();\n\t\t\t}\n\t\t};\n\n\t\tvar mouse = this.$gantt.$services.getService(\"mouseEvents\");\n\t\tmouse.delegate(\"click\", \"gantt_header_arrow\", this._headerClickHandler);\n\n\t\tthis.callEvent(\"onReady\", []);\n\t};\n\tCell.prototype.toggle = function () {\n\t\tthis.$config.collapsed = !this.$config.collapsed;\n\t\tthis.resize();\n\t};\n\tCell.prototype.getSize = function () {\n\t\tvar size = {\n\t\t\theight: this.$config.height || 0,\n\t\t\twidth: this.$config.width || 0,\n\t\t\tgravity: this.$config.gravity || 1,\n\t\t\tminHeight: this.$config.minHeight || 0,\n\t\t\tminWidth: this.$config.minWidth || 0,\n\t\t\tmaxHeight: this.$config.maxHeight || 100000,\n\t\t\tmaxWidth: this.$config.maxWidth || 100000\n\t\t};\n\t\tif (this.$config.collapsed) {\n\t\t\tvar mode = this.$config.mode === \"x\";\n\t\t\tsize[mode ? \"width\" : \"height\"] = size[mode ? \"maxWidth\" : \"maxHeight\"] = this.$config.headerHeight;\n\t\t}\n\t\treturn size;\n\t};\n\n\tCell.prototype.getContentSize = function(){\n\n\t\tvar width = this.$lastSize.contentX;\n\t\tif(width !== width*1){\n\t\t\twidth = this.$lastSize.width;\n\t\t}\n\n\t\tvar height = this.$lastSize.contentY;\n\t\tif(height !== height*1){\n\t\t\theight = this.$lastSize.height;\n\t\t}\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t};\n\n\tCell.prototype._getBorderSizes = function(){\n\t\tvar borders = {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0,\n\t\t\thorizontal: 0,\n\t\t\tvertical: 0\n\t\t};\n\t\tif(this._currentBorders){\n\t\t\tif(this._currentBorders[this._borders.left]){\n\t\t\t\tborders.left = 1;\n\t\t\t\tborders.horizontal++;\n\t\t\t}\n\n\t\t\tif(this._currentBorders[this._borders.right]){\n\t\t\t\tborders.right = 1;\n\t\t\t\tborders.horizontal++;\n\t\t\t}\n\n\t\t\tif(this._currentBorders[this._borders.top]){\n\t\t\t\tborders.top = 1;\n\t\t\t\tborders.vertical++;\n\t\t\t}\n\n\t\t\tif(this._currentBorders[this._borders.bottom]){\n\t\t\t\tborders.bottom = 1;\n\t\t\t\tborders.vertical++;\n\t\t\t}\n\t\t}\n\n\t\treturn borders;\n\n\t};\n\n\tCell.prototype.setSize = function (x, y) {\n\t\tthis.$view.style.width = x + \"px\";\n\t\tthis.$view.style.height = y + \"px\";\n\n\t\tvar borders = this._getBorderSizes();\n\t\tvar contentY = y - borders.vertical;\n\t\tvar contentX = x - borders.horizontal;\n\n\t\tthis.$lastSize = { x: x, y: y, contentX: contentX, contentY: contentY };\n\t\tif (this.$config.header) {\n\t\t\tthis._sizeHeader();\n\t\t}else{\n\t\t\tthis._sizeContent();\n\t\t}\n\t};\n\n\tCell.prototype._borders = {\n\t\t\"left\":\"gantt_layout_cell_border_left\",\n\t\t\"right\":\"gantt_layout_cell_border_right\",\n\t\t\"top\":\"gantt_layout_cell_border_top\",\n\t\t\"bottom\":\"gantt_layout_cell_border_bottom\"\n\t};\n\n\tCell.prototype._setBorders = function(css, view){\n\t\tif(!view) {\n\t\t\tview = this;\n\t\t}\n\t\tvar node = view.$view;\n\n\t\tfor( var i in this._borders){\n\t\t\tdomHelpers.removeClassName(node, this._borders[i]);\n\t\t}\n\n\t\tif(typeof css == \"string\"){\n\t\t\tcss = [css];\n\t\t}\n\n\t\tvar cssHash = {};\n\n\t\tfor(var i = 0; i < css.length; i++){\n\t\t\tdomHelpers.addClassName(node, css[i]);\n\t\t\tcssHash[css[i]] = true;\n\t\t}\n\n\t\tview._currentBorders = cssHash;\n\t};\n\n\n\tCell.prototype._sizeContent = function(){\n\t\tvar content = this.$view.childNodes[0];\n\t\tif(content && content.className == \"gantt_layout_content\"){\n\t\t\tcontent.style.height = this.$lastSize.contentY + \"px\";\n\t\t}\n\t};\n\n\tCell.prototype._sizeHeader = function () {\n\t\tvar size = this.$lastSize;\n\t\tsize.contentY -= this.$config.headerHeight;\n\t\tvar header = this.$view.childNodes[0];\n\t\tvar content = this.$view.childNodes[1];\n\t\tvar xLayout = this.$config.mode === \"x\";\n\t\tif (this.$config.collapsed) {\n\t\t\tcontent.style.display = \"none\";\n\t\t\tif (xLayout) {\n\t\t\t\theader.className = \"gantt_layout_header collapsed_x\";\n\t\t\t\theader.style.width = size.y + \"px\";\n\t\t\t\tvar d = Math.floor(size.y / 2 - size.x / 2);\n\t\t\t\theader.style.transform = \"rotate(90deg) translate(\" + d + \"px, \" + d + \"px)\";\n\t\t\t\tcontent.style.display = \"none\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\theader.className = \"gantt_layout_header collapsed_y\";\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (xLayout) {\n\t\t\t\theader.className = \"gantt_layout_header\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\theader.className = \"gantt_layout_header vertical\";\n\t\t\t}\n\t\t\theader.style.width = 'auto';\n\t\t\theader.style.transform = '';\n\t\t\tcontent.style.display = \"\";\n\t\t\tcontent.style.height = size.contentY + \"px\";\n\t\t}\n\t\theader.style.height = this.$config.headerHeight + \"px\";\n\t};\n\treturn Cell;\n}());\n\nmodule.exports = Cell;\n","var __extends = require(\"../../../utils/extends\");\nvar htmlHelpers = require(\"../../../utils/html_helpers\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction SelectControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\t\n\t\treturn self; \n\t}\n\t\n\t__extends(SelectControl, _super);\n\t\n\tSelectControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"23\") + \"px\";\n\t\tvar html = \"<div class='gantt_cal_ltext' style='height:\" + height + \";'>\";\n\n\t\thtml += htmlHelpers.getHtmlSelect(sns.options, [{ key: \"style\", value: \"width:100%;\" }]);\n\t\thtml += \"</div>\";\n\t\treturn html;\n\t};\n\n\tSelectControl.prototype.set_value = function(node, value, ev, sns) {\n\t\tvar select = node.firstChild;\n\t\tif (!select._dhx_onchange && sns.onchange) {\n\t\t\tselect.onchange = sns.onchange;\n\t\t\tselect._dhx_onchange = true;\n\t\t}\n\t\tif (typeof value === \"undefined\")\n\t\t\tvalue = (select.options[0] || {}).value;\n\t\tselect.value = value || \"\";\n\t};\n\t\n\tSelectControl.prototype.get_value = function(node) {\n\t\treturn node.firstChild.value;\n\t};\n\t\n\tSelectControl.prototype.focus = function(node) {\n\t\tvar a = node.firstChild;\n\t\tgantt._focus(a, true);\n\t};\n\t\n\treturn SelectControl;\n};","/**\n * The state object for order branch drag and drop\n */\n\nvar utils = require(\"../../../../utils/utils\");\n\nmodule.exports = {\n\tcreateDropTargetObject: function createDropTargetObject(parent) {\n\t\tvar res = {\n\t\t\ttargetParent: null,\n\t\t\ttargetIndex: 0,\n\t\t\ttargetId: null,\n\t\t\tchild: false,\n\t\t\tnextSibling: false,\n\t\t\tprevSibling: false\n\t\t};\n\n\t\tif (parent) {\n\t\t\tutils.mixin(res, parent, true);\n\t\t}\n\t\treturn res;\n\t},\n\tnextSiblingTarget: function nextSiblingTarget(dndTaskId, targetTaskId, store) {\n\t\tvar result = this.createDropTargetObject();\n\t\tresult.targetId = targetTaskId;\n\t\tresult.nextSibling = true;\n\t\tresult.targetParent = store.getParent(result.targetId);\n\t\tresult.targetIndex = store.getBranchIndex(result.targetId);\n\t\tif(store.getParent(dndTaskId) == result.targetParent && result.targetIndex < store.getBranchIndex(dndTaskId)){\n\t\t\tresult.targetIndex += 1;\n\t\t}\n\t\treturn result;\n\t},\n\tprevSiblingTarget: function prevSiblingTarget(dndTaskId, targetTaskId, store) {\n\t\tvar result = this.createDropTargetObject();\n\t\tresult.targetId = targetTaskId;\n\t\tresult.prevSibling = true;\n\t\tresult.targetParent = store.getParent(result.targetId);\n\t\tresult.targetIndex = store.getBranchIndex(result.targetId);\n\t\tif(store.getParent(dndTaskId) == result.targetParent && result.targetIndex > store.getBranchIndex(dndTaskId)){\n\t\t\tresult.targetIndex -= 1;\n\t\t}\n\t\treturn result;\n\t},\n\tfirstChildTarget: function firstChildTarget(dndTaskId, targetTaskId, store) {\n\t\tvar result = this.createDropTargetObject();\n\t\tresult.targetId = targetTaskId;\n\t\tresult.targetParent = result.targetId;\n\t\tresult.targetIndex = 0;\n\t\tresult.child = true;\n\t\treturn result;\n\t},\n\tlastChildTarget: function lastChildTarget(dndTaskId, targetTaskId, store) {\n\t\tvar children = store.getChildren(targetTaskId);\n\t\tvar result = this.createDropTargetObject();\n\t\tresult.targetId = children[children.length - 1];\n\t\tresult.targetParent = targetTaskId;\n\t\tresult.targetIndex = children.length;\n\t\tresult.nextSibling = true;\n\t\treturn result;\n\t}\n};","function create(gantt){\n\tvar events = [];\n\n\treturn {\n\t\tdelegate:function(event, className, handler, root) {\n\t\t\tevents.push([event, className, handler, root]);\n\n\t\t\tvar helper = gantt.$services.getService(\"mouseEvents\");\n\t\t\thelper.delegate(event, className, handler, root);\n\t\t},\n\t\tdestructor: function(){\n\t\t\tvar mouseEvents = gantt.$services.getService(\"mouseEvents\");\n\t\t\tfor(var i = 0; i < events.length; i++){\n\t\t\t\tvar h = events[i];\n\t\t\t\tmouseEvents.detach(h[0], h[1], h[2], h[3]);\n\t\t\t}\n\t\t\tevents = [];\n\t\t}\n\t};\n}\n\nmodule.exports = create;","var ScaleHelper = require(\"./scales_ignore\");\nvar eventable = require(\"../../../utils/eventable\");\nvar utils = require(\"../../../utils/utils\");\nvar topPositionMixin = require(\"../row_position_mixin\");\nvar canvasRender = require(\"./tasks_canvas_render\");\n\nvar Timeline = function(parent, config, factory, gantt){\n\tthis.$config = utils.mixin({}, config || {});\n\tthis.$scaleHelper = new ScaleHelper(gantt);\n\tthis.$gantt = gantt;\n\teventable(this);\n};\n\nTimeline.prototype = {\n\tinit: function(container){\n\t\tcontainer.innerHTML += \"<div class='gantt_task' style='width:inherit;height:inherit;'></div>\";\n\t\tthis.$task = container.childNodes[0];\n\n\t\tthis.$task.innerHTML = \"<div class='gantt_task_scale'></div><div class='gantt_data_area'></div>\";\n\t\tthis.$task_scale = this.$task.childNodes[0];\n\n\t\tthis.$task_data = this.$task.childNodes[1];\n\t\tthis.$task_data.innerHTML = \"<div class='gantt_task_bg'></div><div class='gantt_links_area'></div><div class='gantt_bars_area'></div>\";\n\t\tthis.$task_bg = this.$task_data.childNodes[0];\n\t\tthis.$task_links = this.$task_data.childNodes[1];\n\t\tthis.$task_bars = this.$task_data.childNodes[2];\n\n\t\tthis._tasks = {\n\t\t\tcol_width: 0,\n\t\t\twidth: [], // width of each column\n\t\t\tfull_width: 0, // width of all columns\n\t\t\ttrace_x: [],\n\t\t\trendered: {}\n\t\t};\n\n\t\tvar config = this.$getConfig();\n\t\tvar attr = config[this.$config.bind + \"_attribute\"];\n\t\tvar linksAttr = config[this.$config.bindLinks + \"_attribute\"];\n\t\tif(!attr && this.$config.bind){\n\t\t\tattr = this.$config.bind + \"_id\";\n\t\t}\n\t\tif(!linksAttr && this.$config.bindLinks){\n\t\t\tlinksAttr = this.$config.bindLinks + \"_id\";\n\t\t}\n\t\tthis.$config.item_attribute = attr || null;\n\t\tthis.$config.link_attribute = linksAttr || null;\n\n\t\tvar layers = this._createLayerConfig();\n\t\tif(!this.$config.layers){\n\t\t\tthis.$config.layers = layers.tasks;\n\t\t}\n\t\tif(!this.$config.linkLayers){\n\t\t\tthis.$config.linkLayers = layers.links;\n\t\t}\n\n\t\tthis._attachLayers(this.$gantt);\n\t\tthis.callEvent(\"onReady\", []);\n\t\t//this.refresh();\n\t},\n\n\tsetSize: function(width, height){\n\t\tvar config = this.$getConfig();\n\n\t\tif(width*1 === width){\n\t\t\tthis.$config.width = width;\n\t\t}\n\t\tif(height*1 === height){\n\n\t\t\tthis.$config.height = height;\n\t\t\tvar dataHeight = Math.max(this.$config.height - config.scale_height);\n\t\t\tthis.$task_data.style.height = dataHeight + 'px';\n\t\t}\n\n\t\tthis.refresh();\n\t\tthis.$task_bg.style.backgroundImage = \"\";\n\n\t\tif(config.smart_rendering && this.$config.rowStore){\n\t\t\tvar store = this.$config.rowStore;\n\t\t\tthis.$task_bg.style.height = config.row_height * store.countVisible() +\"px\";\n\t\t}else{\n\t\t\tthis.$task_bg.style.height = \"\";\n\t\t}\n\n\t\tvar scale = this._tasks;\n\t\t//timeline area layers\n\t\tvar data_els = this.$task_data.childNodes;\n\t\tfor(var i= 0, len = data_els.length; i < len; i++){\n\t\t\tvar el = data_els[i];\n\t\t\tif(el.hasAttribute(\"data-layer\") && el.style)\n\t\t\t\tel.style.width = scale.full_width + \"px\";\n\t\t}\n\t},\n\n\tisVisible: function(){\n\t\tif(this.$parent && this.$parent.$config){\n\t\t\treturn !this.$parent.$config.hidden;\n\t\t}else{\n\t\t\treturn this.$task.offsetWidth;\n\t\t}\n\t},\n\n\tgetSize: function(){\n\t\tvar config = this.$getConfig();\n\t\tvar store = this.$config.rowStore;\n\n\t\tvar contentHeight = store ? config.row_height * store.countVisible() : 0,\n\t\t\tcontentWidth = this._tasks.full_width;\n\n\t\treturn {\n\t\t\tx: this.$config.width,\n\t\t\ty: this.$config.height,\n\t\t\tcontentX: this.isVisible() ? contentWidth : 0,\n\t\t\tcontentY: this.isVisible() ? (config.scale_height + contentHeight) : 0,\n\t\t\tscrollHeight: this.isVisible() ? contentHeight : 0,\n\t\t\tscrollWidth: this.isVisible() ? contentWidth : 0\n\t\t};\n\t},\n\n\tscrollTo: function(left, top){\n\t\tif(!this.isVisible())\n\t\t\treturn;\n\n\t\tif(top*1 === top){\n\t\t\tthis.$config.scrollTop = top;\n\t\t\tthis.$task_data.scrollTop = this.$config.scrollTop;\n\t\t}\n\t\tif (left*1 === left){\n\t\t\tthis.$task.scrollLeft = left;\n\t\t\tthis.$config.scrollLeft = this.$task.scrollLeft;\n\t\t\tthis._refreshScales();\n\t\t}\n\t},\n\n\t_refreshScales: function _refreshScales() {\n\t\tif(!this.isVisible())\n\t\t\treturn;\n\n\t\tvar config = this.$getConfig();\n\t\tif (!config.smart_scales) return;\n\n\t\tvar x = this.$config.scrollLeft;\n\t\tvar width = this.$config.width;\n\n\t\tvar scales = this._scales;\n\t\tthis.$task_scale.innerHTML = this._getScaleChunkHtml(scales, x, x + width);\n\t},\n\t_createLayerConfig: function(){\n\t\tvar self = this;\n\t\tvar taskFilter = function(){\n\t\t\treturn self.isVisible();\n\t\t};\n\n\t\tvar taskLayers = [\n\t\t\t{\n\t\t\t\texpose: true,\n\t\t\t\trenderer: this.$gantt.$ui.layers.taskBar,\n\t\t\t\tcontainer: this.$task_bars,\n\t\t\t\tfilter: [taskFilter]\n\t\t\t},\n\t\t\t{\n\t\t\t\trenderer: this.$gantt.$ui.layers.taskSplitBar,\n\t\t\t\tfilter: [taskFilter],\n\t\t\t\tcontainer: this.$task_bars,\n\t\t\t\tappend: true\n\t\t\t},\n\t\t\t{\n\t\t\t\trenderer: this.$gantt.$ui.layers.taskBg,\n\t\t\t\tcontainer: this.$task_bg,\n\t\t\t\tfilter: [\n\t\t\t\t\tfunction(){\n\t\t\t\t\t\treturn !self.$getConfig().static_background;\n\t\t\t\t\t},\n\t\t\t\t\ttaskFilter\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\n\t\tvar linkLayers = [\n\t\t\t{\n\t\t\t\texpose: true,\n\t\t\t\trenderer: this.$gantt.$ui.layers.link,\n\t\t\t\tcontainer: this.$task_links,\n\t\t\t\tfilter: [taskFilter]\n\t\t\t}\n\t\t];\n\n\t\treturn {\n\t\t\ttasks: taskLayers,\n\t\t\tlinks: linkLayers\n\t\t};\n\n\t},\n\n\t_attachLayers: function(gantt){\n\t\tthis._taskLayers = [];\n\t\tthis._linkLayers = [];\n\n\t\tvar self = this;\n\n\t\tvar layers = this.$gantt.$services.getService(\"layers\");\n\n\t\tif(this.$config.bind){\n\n\t\t\tself.$config.rowStore = self.$gantt.getDatastore(self.$config.bind);\n\n\t\t\tvar taskRenderer = layers.getDataRender(this.$config.bind);\n\n\t\t\tif(!taskRenderer){\n\t\t\t\ttaskRenderer = layers.createDataRender({\n\t\t\t\t\tname: this.$config.bind,\n\t\t\t\t\tdefaultContainer: function(){ return self.$task_data;}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttaskRenderer.container = function(){ return self.$task_data;};\n\n\t\t\tvar taskLayers = this.$config.layers;\n\t\t\tfor(var i = 0; taskLayers && i < taskLayers.length; i++){\n\t\t\t\tvar layer = taskLayers[i];\n\n\t\t\t\tif(typeof layer == \"string\"){\n\t\t\t\t\tlayer = this.$gantt.$ui.layers[layer];\n\t\t\t\t}\n\n\t\t\t\tif(typeof layer == \"function\"){\n\t\t\t\t\tlayer = {renderer: layer};\n\t\t\t\t}\n\n\t\t\t\tlayer.host = this;\n\t\t\t\tvar bar_layer = taskRenderer.addLayer(layer);\n\t\t\t\tthis._taskLayers.push(bar_layer);\n\t\t\t\tif(layer.expose){\n\t\t\t\t\tthis._taskRenderer = taskRenderer.getLayer(bar_layer);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._initStaticBackgroundRender();\n\t\t}\n\n\t\tif(this.$config.bindLinks){\n\t\t\tself.$config.linkStore = self.$gantt.getDatastore(self.$config.bindLinks);\n\n\t\t\tvar linkRenderer = layers.getDataRender(this.$config.bindLinks);\n\n\t\t\tif(!linkRenderer){\n\t\t\t\tlinkRenderer = layers.createDataRender({\n\t\t\t\t\tname: this.$config.bindLinks,\n\t\t\t\t\tdefaultContainer: function(){ return self.$task_data;}\n\t\t\t\t});\n\t\t\t}\n\t\t\tvar linkLayers = this.$config.linkLayers;\n\t\t\tfor(var i = 0; linkLayers && i < linkLayers.length; i++){\n\n\t\t\t\tif(typeof layer == \"string\"){\n\t\t\t\t\tlayer = this.$gantt.$ui.layers[layer];\n\t\t\t\t}\n\n\t\t\t\tvar layer = linkLayers[i];\n\t\t\t\tlayer.host = this;\n\t\t\t\tvar linkLayer = linkRenderer.addLayer(layer);\n\t\t\t\tthis._taskLayers.push(linkLayer);\n\t\t\t\tif(linkLayers[i].expose){\n\t\t\t\t\tthis._linkRenderer = linkRenderer.getLayer(linkLayer);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_initStaticBackgroundRender: function(){\n\t\tvar self = this;\n\t\tvar staticRender = canvasRender.create();\n\t\tvar store = self.$config.rowStore;\n\t\tif(!store) return;\n\n\t\tthis._staticBgHandler = store.attachEvent(\"onStoreUpdated\", function(id, item, mode){\n\t\t\tif(id !== null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(!self.isVisible())\n\t\t\t\treturn;\n\t\t\tvar config = self.$getConfig();\n\t\t\tif(config.static_background) {\n\t\t\t\tvar store = self.$gantt.getDatastore(self.$config.bind);\n\t\t\t\tif (store) {\n\t\t\t\t\tstaticRender.render(self.$task_bg, config, self.getScale(), config.row_height * store.countVisible());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._initStaticBackgroundRender = function(){};//init once\n\t},\n\n\t_clearLayers: function(gantt){\n\t\tvar layers = this.$gantt.$services.getService(\"layers\");\n\t\tvar taskRenderer = layers.getDataRender(this.$config.bind);\n\t\tvar linkRenderer = layers.getDataRender(this.$config.bindLinks);\n\n\t\tif (this._taskLayers) {\n\t\t\tfor(var i = 0; i < this._taskLayers.length; i++){\n\t\t\t\ttaskRenderer.removeLayer(this._taskLayers[i]);\n\t\t\t}\n\t\t}\n\t\tif (this._linkLayers) {\n\t\t\tfor(var i = 0; i < this._linkLayers.length; i++){\n\t\t\t\tlinkRenderer.removeLayer(this._linkLayers[i]);\n\t\t\t}\n\t\t}\n\n\t\tthis._linkLayers = [];\n\t\tthis._taskLayers = [];\n\t},\n\n\t_render_tasks_scales: function _render_tasks_scales() {\n\t\tvar config = this.$getConfig();\n\n\t\tvar scales_html = \"\",\n\t\t\touter_width = 0,\n\t\t\tscale_height = 0;\n\n\t\tvar state = this.$gantt.getState();\n\n\t\tif (this.isVisible()) {\n\t\t\tvar helpers = this.$scaleHelper;\n\t\t\tvar scales = this._getScales();\n\t\t\tscale_height = config.scale_height;\n\n\t\t\tvar availWidth = this.$config.width;\n\t\t\tif(config.autosize == \"x\" || config.autosize == \"xy\"){\n\t\t\t\tavailWidth = Math.max(config.autosize_min_width, 0);\n\t\t\t}\n\n\t\t\tvar cfgs = helpers.prepareConfigs(scales, config.min_column_width, availWidth, scale_height - 1, state.min_date, state.max_date, config.rtl);\n\t\t\tvar cfg = this._tasks = cfgs[cfgs.length - 1];\n\t\t\tthis._scales = cfgs;\n\n\t\t\tscales_html = this._getScaleChunkHtml(cfgs, 0, this.$config.width);\n\n\t\t\touter_width = cfg.full_width + \"px\";//cfg.full_width + (this._scroll_sizes().y ? scrollSizes.scroll_size : 0) + \"px\";\n\t\t\tscale_height += \"px\";\n\t\t}\n\n\t\tthis.$task_scale.style.height = scale_height;\n\n\t\tthis.$task_data.style.width =\n\t\t\tthis.$task_scale.style.width = outer_width;\n\n\t\tthis.$task_scale.innerHTML = scales_html;\n\n\t},\n\n\t_getScaleChunkHtml: function _get_scale_chunk_html (scales, fromPos, toPos) {\n\t\tvar templates = this.$gantt.$services.templates();\n\t\tvar html = [];\n\n\t\tvar css = templates.scale_row_class;\n\t\tfor (var i = 0; i < scales.length; i++) {\n\t\t\tvar cssClass = \"gantt_scale_line\";\n\t\t\tvar tplClass = css(scales[i]);\n\t\t\tif (tplClass) {\n\t\t\t\tcssClass += \" \" + tplClass;\n\t\t\t}\n\n\t\t\thtml.push(\"<div class=\\\"\" + cssClass + \"\\\" style=\\\"height:\" + (scales[i].height) +\n\t\t\t\t\"px;position:relative;line-height:\" + (scales[i].height) + \"px\\\">\" + this._prepareScaleHtml(scales[i], fromPos, toPos) + \"</div>\");\n\t\t}\n\n\t\treturn html.join(\"\");\n\t},\n\t_prepareScaleHtml: function _prepare_scale_html(config, fromPos, toPos) {\n\t\tvar globalConfig = this.$getConfig();\n\t\tvar globalTemplates = this.$gantt.$services.templates();\n\n\t\tvar cells = [];\n\t\tvar date = null, content = null, css = null;\n\n\t\tif (config.template || config.date) {\n\t\t\tcontent = config.template || this.$gantt.date.date_to_str(config.date);\n\t\t}\n\n\t\tvar startIndex = 0,\n\t\t\tendIndex = config.count;\n\n\t\tif (globalConfig.smart_scales && (!isNaN(fromPos) && !isNaN(toPos))) {\n\t\t\tstartIndex = _findBinary(config.left, fromPos);\n\t\t\tendIndex = _findBinary(config.left, toPos) + 1;\n\t\t}\n\n\t\tcss = config.css || function () {\n\t\t\t};\n\t\tif (!config.css && globalConfig.inherit_scale_class) {\n\t\t\tcss = globalTemplates.scale_cell_class;\n\t\t}\n\n\t\tfor (var i = startIndex; i < endIndex; i++) {\n\t\t\tif (!config.trace_x[i]) break;\n\n\t\t\tdate = new Date(config.trace_x[i]);\n\t\t\tvar value = content.call(this, date),\n\t\t\t\twidth = config.width[i],\n\t\t\t\theight = config.height,\n\t\t\t\tleft = config.left[i],\n\t\t\t\tstyle = \"\",\n\t\t\t\ttemplate = \"\",\n\t\t\t\tcssclass = \"\";\n\n\t\t\tif (width) {\n\t\t\t\tvar position = globalConfig.smart_scales ? (\"position:absolute;left:\" + left + \"px\") : \"\";\n\n\t\t\t\tstyle = \"width:\" + (width) + \"px;height:\" + height + \"px;\" + position;\n\t\t\t\tcssclass = \"gantt_scale_cell\" + (i == config.count - 1 ? \" gantt_last_cell\" : \"\");\n\n\t\t\t\ttemplate = css.call(this, date);\n\t\t\t\tif (template) cssclass += \" \" + template;\n\n\t\t\t\tvar ariaAttr = this.$gantt._waiAria.getTimelineCellAttr(value);\n\t\t\t\tvar cell = \"<div class='\" + cssclass + \"'\" + ariaAttr + \" style='\" + style + \"'>\" + value + \"</div>\";\n\t\t\t\tcells.push(cell);\n\t\t\t} else {\n\t\t\t\t//do not render ignored cells\n\t\t\t}\n\n\t\t}\n\t\treturn cells.join(\"\");\n\t},\n\tdateFromPos: function dateFromPos(x) {\n\t\tvar scale = this._tasks;\n\t\tif (x < 0 || x > scale.full_width || !scale.full_width) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar ind = _findBinary(this._tasks.left, x);\n\t\tvar summ = this._tasks.left[ind];\n\n\t\tvar col_width = scale.width[ind] || scale.col_width;\n\t\tvar part = 0;\n\t\tif (col_width) {\n\t\t\tpart = (x - summ) / col_width;\n\t\t\tif(scale.rtl){\n\t\t\t\tpart = 1 - part;\n\t\t\t}\n\n\t\t}\n\n\t\tvar unit = 0;\n\t\tif (part) {\n\t\t\tunit = this._getColumnDuration(scale, scale.trace_x[ind]);\n\t\t}\n\n\t\tvar date = new Date(scale.trace_x[ind].valueOf() + Math.round(part * unit));\n\t\treturn date;\n\t},\n\tposFromDate: function posFromDate(date) {\n\t\tif (!this.isVisible())\n\t\t\treturn 0;\n\n\t\tvar ind = this.columnIndexByDate(date);\n\t\tthis.$gantt.assert(ind >= 0, \"Invalid day index\");\n\n\t\tvar wholeCells = Math.floor(ind);\n\t\tvar partCell = ind % 1;\n\n\t\tvar pos = this._tasks.left[Math.min(wholeCells, this._tasks.width.length - 1)];\n\t\tif (wholeCells == this._tasks.width.length)\n\t\t\tpos += this._tasks.width[this._tasks.width.length - 1];\n\t\t//for(var i=1; i <= wholeCells; i++)\n\t\t//\tpos += gantt._tasks.width[i-1];\n\n\t\tif (partCell) {\n\t\t\tif (wholeCells < this._tasks.width.length) {\n\t\t\t\tpos += this._tasks.width[wholeCells] * (partCell % 1);\n\t\t\t} else {\n\t\t\t\tpos += 1;\n\t\t\t}\n\n\t\t}\n\t\treturn Math.round(pos);\n\t},\n\tcolumnIndexByDate: function columnIndexByDate(date) {\n\t\tvar pos = new Date(date).valueOf();\n\t\tvar days = this._tasks.trace_x_ascending,\n\t\t\tignores = this._tasks.ignore_x;\n\n\t\tvar state = this.$gantt.getState();\n\n\t\tif (pos <= state.min_date) {\n\t\t\tif(this._tasks.rtl){\n\t\t\t\treturn days.length;\n\t\t\t}else{\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t}\n\n\t\tif (pos >= state.max_date) {\n\t\t\tif(this._tasks.rtl){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn days.length;\n\t\t\t}\n\t\t}\n\n\t\t/*var day = null;\n\t\t for (var xind = 0, length = days.length-1; xind < length; xind++) {\n\t\t // | 8:00, 8:30 | 8:15 should be checked against 8:30\n\t\t // clicking at the most left part of the cell, say 8:30 should create event in that cell, not previous one\n\t\t day = +days[xind+1];\n\t\t if (pos < day && !ignores[day])\n\t\t break;\n\t\t }*/\n\n\t\tvar day_ind = _findBinary(days, pos);\n\t\tvar day = +days[day_ind];\n\t\twhile (ignores[day]) {\n\t\t\tday = +days[++day_ind];\n\t\t}\n\n\t\tvar transition = this._tasks.trace_index_transition;\n\t\tvar index = day_ind;\n\t\tif(!day){\n\t\t\tif(transition){\n\t\t\t\treturn transition[0];\n\t\t\t}else{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tvar part = ((date - days[day_ind]) / this._getColumnDuration(this._tasks, days[day_ind]));\n\t\tif(transition){\n\t\t\treturn transition[index] + (1 - part);\n\t\t}else{\n\t\t\treturn index + part;\n\t\t}\n\n\t\t//return day_ind + ((date - days[day_ind]) / this._getColumnDuration(this._tasks, days[day_ind]));\n\t},\n\tgetItemPosition:function (task, start_date, end_date) {\n\t\tvar xLeft, xRight, width;\n\t\tif(this._tasks.rtl){\n\t\t\txRight = this.posFromDate(start_date || task.start_date);\n\t\t\txLeft = this.posFromDate(end_date || task.end_date);\n\t\t}else{\n\t\t\txLeft = this.posFromDate(start_date || task.start_date);\n\t\t\txRight = this.posFromDate(end_date || task.end_date);\n\t\t}\n\t\twidth =  Math.max((xRight - xLeft), 0);\n\n\t\tvar y = this.getItemTop(task.id);\n\t\tvar height = this.getItemHeight();\n\t\treturn {\n\t\t\tleft: xLeft,\n\t\t\ttop: y,\n\t\t\theight: height,\n\t\t\twidth: width\n\t\t};\n\t},\n\n\tgetItemHeight: function(){\n\t\tvar config = this.$getConfig();\n\n\t\t// height of the bar item\n\t\tvar height = config.task_height;\n\n\t\tif (height == \"full\") {\n\t\t\tvar offset = config.task_height_offset || 5;\n\t\t\theight = config.row_height - offset;\n\t\t}\n\t\t//item height cannot be bigger than row height\n\t\theight = Math.min(height, config.row_height);\n\t\treturn Math.max(height, 0);\n\t},\n\n\tgetScale: function(){\n\t\treturn this._tasks;\n\t},\n\n\t_getScales: function _get_scales() {\n\t\tvar config = this.$getConfig();\n\t\tvar helpers = this.$scaleHelper;\n\t\tvar scales = [helpers.primaryScale()].concat(config.subscales);\n\n\t\thelpers.sortScales(scales);\n\t\treturn scales;\n\t},\n\n\t_getColumnDuration: function _get_coll_duration(scale, date) {\n\t\treturn this.$gantt.date.add(date, scale.step, scale.unit) - date;\n\t},\n\n\trefresh: function(){\n\t\tif(this.$config.bind) {\n\t\t\tthis.$config.rowStore = this.$gantt.getDatastore(this.$config.bind);\n\t\t}\n\n\t\tif(this.$config.bindLinks) {\n\t\t\tthis.$config.linkStore = this.$gantt.getDatastore(this.$config.bindLinks);\n\t\t}\n\n\t\tthis._initStaticBackgroundRender();\n\t\tthis._render_tasks_scales();\n\t},\n\n\tdestructor: function(){\n\t\tvar gantt = this.$gantt;\n\t\tthis._clearLayers(gantt);\n\n\t\tthis.$task = null;\n\t\tthis.$task_scale = null;\n\t\tthis.$task_data = null;\n\t\tthis.$task_bg = null;\n\t\tthis.$task_links = null;\n\t\tthis.$task_bars = null;\n\n\t\tthis.$gantt = null;\n\n\t\tif(this.$config.rowStore){\n\t\t\tthis.$config.rowStore.detachEvent(this._staticBgHandler);\n\t\t\tthis.$config.rowStore = null;\n\t\t}\n\t\tif(this.$config.linkStore){\n\t\t\tthis.$config.linkStore = null;\n\t\t}\n\n\t\tthis.callEvent(\"onDestroy\", []);\n\t\tthis.detachAllEvents();\n\n\t}\n};\n\nutils.mixin(Timeline.prototype, topPositionMixin());\n\nmodule.exports = Timeline;\n\nfunction _findBinary(array, target) {\n\t// modified binary search, target value not exactly match array elements, looking for closest one\n\n\tvar low = 0, high = array.length - 1, i, item, prev;\n\twhile (low <= high) {\n\n\t\ti = Math.floor((low + high) / 2);\n\t\titem = +array[i];\n\t\tprev = +array[i - 1];\n\t\tif (item < target) {\n\t\t\tlow = i + 1;\n\t\t\tcontinue;\n\t\t}\n\t\tif (item > target) {\n\t\t\tif (!(!isNaN(prev) && prev < target)) {\n\t\t\t\thigh = i - 1;\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\t// if target is between 'i' and 'i-1' return 'i - 1'\n\t\t\t\treturn i - 1;\n\t\t\t}\n\n\t\t}\n\t\twhile (+array[i] == +array[i + 1]) i++;\n\n\t\treturn i;\n\t}\n\treturn array.length - 1;\n}\n\n","var env = {\n\tisIE: (navigator.userAgent.indexOf(\"MSIE\") >= 0 || navigator.userAgent.indexOf(\"Trident\") >= 0),\n\tisIE6: (!window.XMLHttpRequest && navigator.userAgent.indexOf(\"MSIE\") >= 0),\n\tisIE7: (navigator.userAgent.indexOf(\"MSIE 7.0\") >= 0 && navigator.userAgent.indexOf(\"Trident\") < 0),\n\tisIE8: (navigator.userAgent.indexOf(\"MSIE 8.0\") >= 0 && navigator.userAgent.indexOf(\"Trident\") >= 0),\n\tisOpera: (navigator.userAgent.indexOf(\"Opera\") >= 0),\n\tisChrome: (navigator.userAgent.indexOf(\"Chrome\") >= 0),\n\tisKHTML: (navigator.userAgent.indexOf(\"Safari\") >= 0 || navigator.userAgent.indexOf(\"Konqueror\") >= 0),\n\tisFF: (navigator.userAgent.indexOf(\"Firefox\") >= 0),\n\tisIPad: (navigator.userAgent.search(/iPad/gi) >= 0),\n\tisEdge: (navigator.userAgent.indexOf(\"Edge\")!=-1)\n};\n\nmodule.exports = env;","module.exports = function(gantt) {\n\tgantt.locale = {\n\t\tdate: {\n\t\t\tmonth_full: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t\t\tmonth_short: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n\t\t\tday_full: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t\t\tday_short: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n\t\t},\n\t\tlabels: {\n\t\t\tnew_task: \"New task\",\n\t\t\ticon_save: \"Save\",\n\t\t\ticon_cancel: \"Cancel\",\n\t\t\ticon_details: \"Details\",\n\t\t\ticon_edit: \"Edit\",\n\t\t\ticon_delete: \"Delete\",\n\t\t\tconfirm_closing: \"\",//Your changes will be lost, are you sure?\n\t\t\tconfirm_deleting: \"Task will be deleted permanently, are you sure?\",\n\t\t\tsection_description: \"Description\",\n\t\t\tsection_time: \"Time period\",\n\t\t\tsection_type: \"Type\",\n\n\t\t\t/* grid columns */\n\t\t\tcolumn_wbs: \"WBS\",\n\t\t\tcolumn_text: \"Task name\",\n\t\t\tcolumn_start_date: \"Start time\",\n\t\t\tcolumn_duration: \"Duration\",\n\t\t\tcolumn_add: \"\",\n\n\t\t\t/* link confirmation */\n\t\t\tlink: \"Link\",\n\t\t\tconfirm_link_deleting: \"will be deleted\",\n\t\t\tlink_start: \" (start)\",\n\t\t\tlink_end: \" (end)\",\n\n\t\t\ttype_task: \"Task\",\n\t\t\ttype_project: \"Project\",\n\t\t\ttype_milestone: \"Milestone\",\n\n\t\t\tminutes: \"Minutes\",\n\t\t\thours: \"Hours\",\n\t\t\tdays: \"Days\",\n\t\t\tweeks: \"Week\",\n\t\t\tmonths: \"Months\",\n\t\t\tyears: \"Years\",\n\n\t\t\t/* message popup */\n\t\t\tmessage_ok: \"OK\",\n\t\t\tmessage_cancel: \"Cancel\"\n\n\t\t}\n\t};\n};\n\n","var utils = require(\"../../utils/utils\");\nvar helpers = require(\"../../utils/helpers\");\n\n\nfunction IsWorkTimeArgument(date, unit, task, id, calendar){\n\tthis.date = date;\n\tthis.unit = unit;\n\tthis.task = task;\n\tthis.id = id;\n\tthis.calendar = calendar;\n\treturn this;\n}\n\nfunction ClosestWorkTimeArgument(date, dir, unit, task, id, calendar){\n\tthis.date = date;\n\tthis.dir = dir;\n\tthis.unit = unit;\n\tthis.task = task;\n\tthis.id = id;\n\tthis.calendar = calendar;\n\treturn this;\n}\n\nfunction CalculateEndDateArgument(start_date, duration, unit, step, task, id, calendar){\n\tthis.start_date = start_date;\n\tthis.duration = duration;\n\tthis.unit = unit;\n\tthis.step = step;\n\tthis.task = task;\n\tthis.id = id;\n\tthis.calendar = calendar;\n\treturn this;\n}\n\nfunction GetDurationArgument(start, end, task, calendar) {\n\tthis.start_date = start;\n\tthis.end_date = end;\n\tthis.task = task;\n\tthis.calendar = calendar;\n\tthis.unit = null;\n\tthis.step = null;\n\treturn this;\n}\n\nvar calendarArgumentsHelper = function(gantt){\n\treturn {\n\t\tgetWorkHoursArguments: function () {\n\t\t\tvar config = arguments[0];\n\t\t\tif (helpers.isDate(config)) {\n\t\t\t\tconfig = {\n\t\t\t\t\tdate: config\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconfig = utils.mixin({}, config);\n\t\t\t}\n\t\t\treturn config;\n\t\t},\n\t\tsetWorkTimeArguments: function () {\n\t\t\treturn arguments[0];\n\t\t},\n\t\tunsetWorkTimeArguments: function () {\n\t\t\treturn arguments[0];\n\t\t},\n\t\tisWorkTimeArguments: function () {\n\t\t\tvar config = arguments[0];\n\t\t\tif(config instanceof IsWorkTimeArgument){\n\t\t\t\treturn config;\n\t\t\t}\n\n\t\t\tvar processedConfig;\n\t\t\tif (!config.date) {\n\t\t\t\t//IsWorkTimeArgument(date, unit, task, id, calendar)\n\t\t\t\tprocessedConfig = new IsWorkTimeArgument(arguments[0], arguments[1], arguments[2], null, arguments[3]);\n\t\t\t} else {\n\t\t\t\tprocessedConfig = new IsWorkTimeArgument(config.date, config.unit, config.task, null, config.calendar);\n\t\t\t}\n\n\t\t\tprocessedConfig.unit = processedConfig.unit || gantt.config.duration_unit;\n\n\t\t\treturn processedConfig;\n\t\t},\n\t\tgetClosestWorkTimeArguments: function (arg) {\n\t\t\tvar config = arguments[0];\n\t\t\tif (config instanceof ClosestWorkTimeArgument)\n\t\t\t\treturn config;\n\n\t\t\tvar processedConfig;\n\t\t\tif (helpers.isDate(config)) {\n\t\t\t\tprocessedConfig = new ClosestWorkTimeArgument(config);\n\n\t\t\t} else {\n\t\t\t\tprocessedConfig = new ClosestWorkTimeArgument(\n\t\t\t\t\tconfig.date,\n\t\t\t\t\tconfig.dir,\n\t\t\t\t\tconfig.unit,\n\t\t\t\t\tconfig.task,\n\t\t\t\t\tnull,//config.id,\n\t\t\t\t\tconfig.calendar\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif(config.id){\n\t\t\t\tprocessedConfig.task = config;\n\t\t\t}\n\t\t\tprocessedConfig.dir = config.dir || 'any';\n\t\t\tprocessedConfig.unit = config.unit || gantt.config.duration_unit;\n\n\t\t\treturn processedConfig;\n\t\t},\n\n\t\t_getStartEndConfig: function (param) {\n\t\t\tvar argumentType = GetDurationArgument;\n\t\t\tvar config;\n\t\t\tif (param instanceof argumentType)\n\t\t\t\treturn param;\n\n\t\t\tif (helpers.isDate(param)) {\n\t\t\t\tconfig = new argumentType(arguments[0], arguments[1], arguments[2], arguments[3]);\n\t\t\t} else {\n\t\t\t\tconfig = new argumentType(param.start_date, param.end_date, param.task);\n\t\t\t\tif (param.id) {\n\t\t\t\t\tconfig.task = param;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconfig.unit = config.unit || gantt.config.duration_unit;\n\t\t\tconfig.step = config.step || gantt.config.duration_step;\n\t\t\tconfig.start_date = config.start_date || config.start || config.date;\n\n\t\t\treturn config;\n\t\t},\n\n\t\tgetDurationArguments: function (start, end, unit, step) {\n\t\t\treturn this._getStartEndConfig.apply(this, arguments);\n\t\t},\n\n\t\thasDurationArguments: function (start, end, unit, step) {\n\t\t\treturn this._getStartEndConfig.apply(this, arguments);\n\t\t},\n\n\t\tcalculateEndDateArguments: function (start, duration, unit, step) {\n\t\t\tvar config = arguments[0];\n\t\t\tif (config instanceof CalculateEndDateArgument)\n\t\t\t\treturn config;\n\n\t\t\tvar processedConfig;\n\t\t\t//CalculateEndDateArgument(start_date, duration, unit, step, task, id, calendar)\n\t\t\tif (helpers.isDate(config)) {\n\t\t\t\tprocessedConfig = new CalculateEndDateArgument(\n\t\t\t\t\targuments[0],\n\t\t\t\t\targuments[1],\n\t\t\t\t\targuments[2],\n\t\t\t\t\tundefined,\n\t\t\t\t\targuments[3],\n\t\t\t\t\tundefined,\n\t\t\t\t\targuments[4]\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\tprocessedConfig = new CalculateEndDateArgument(\n\t\t\t\t\tconfig.start_date,\n\t\t\t\t\tconfig.duration,\n\t\t\t\t\tconfig.unit,\n\t\t\t\t\tconfig.step,\n\t\t\t\t\tconfig.task,\n\t\t\t\t\tnull,//config.id,\n\t\t\t\t\tconfig.calendar\n\t\t\t\t);\n\t\t\t}\n\t\t\tif(config.id){\n\t\t\t\tprocessedConfig.task = config;\n\t\t\t}\n\n\t\t\tprocessedConfig.unit = processedConfig.unit || gantt.config.duration_unit;\n\t\t\tprocessedConfig.step = processedConfig.step || gantt.config.duration_step;\n\n\t\t\treturn processedConfig;\n\t\t}\n\t};\n};\n\n\nmodule.exports = calendarArgumentsHelper;","function copyLinkIdsArray(gantt, linkIds, targetHash){\n\tfor(var i = 0; i < linkIds.length; i++) {\n\t\tif(gantt.isLinkExists(linkIds[i])){\n\t\t\ttargetHash[linkIds[i]] = gantt.getLink(linkIds[i]);\n\t\t}\n\t}\n}\n\nfunction copyLinkIds(gantt, task, targetHash){\n\tcopyLinkIdsArray(gantt, task.$source, targetHash);\n\tcopyLinkIdsArray(gantt, task.$target, targetHash);\n}\n\nfunction getSubtreeLinks(gantt, rootId){\n\tvar res = {};\n\n\tif(gantt.isTaskExists(rootId)){\n\t\tcopyLinkIds(gantt, gantt.getTask(rootId), res);\n\t}\n\n\tgantt.eachTask(function(child){\n\t\tcopyLinkIds(gantt, child, res);\n\t}, rootId);\n\n\treturn res;\n}\n\nfunction getSubtreeTasks(gantt, rootId){\n\tvar res = {};\n\n\tgantt.eachTask(function(child){\n\t\tres[child.id] = child;\n\t}, rootId);\n\n\treturn res;\n}\n\nmodule.exports = {\n\tgetSubtreeLinks: getSubtreeLinks,\n\tgetSubtreeTasks: getSubtreeTasks\n};","var ScaleHelper = require(\"./ui/timeline/scales_ignore\");\n\n\nfunction dateRangeResolver(gantt){\n\t//reset project timing\n\t//_get_tasks_data(gantt);\n\treturn gantt.getSubtaskDates();\n}\n\nfunction defaultRangeResolver(){\n\treturn {\n\t\tstart_date: new Date(),\n\t\tend_date: new Date()\n\t};\n}\n\nfunction resolveConfigRange(unit, gantt){\n\tvar range = {\n\t\tstart_date:null,\n\t\tend_date:null\n\t};\n\n\tif (gantt.config.start_date && gantt.config.end_date) {\n\t\trange.start_date = gantt.date[unit + \"_start\"](new Date(gantt.config.start_date));\n\n\t\tvar end = new Date(gantt.config.end_date);\n\t\tvar start_interval = gantt.date[unit + \"_start\"](new Date(end));\n\t\tif (+end != +start_interval) {\n\t\t\tend = gantt.date.add(start_interval, 1, unit);\n\t\t} else {\n\t\t\tend = start_interval;\n\t\t}\n\n\t\trange.end_date = end;\n\t}\n\treturn range;\n}\n\nfunction _scale_range_unit(gantt) {\n\tvar unit = gantt.config.scale_unit;\n\tvar step = gantt.config.step;\n\tif (gantt.config.scale_offset_minimal) {\n\n\t\tvar helper = new ScaleHelper(gantt);\n\t\tvar scales = [helper.primaryScale()].concat(gantt.config.subscales);\n\n\t\thelper.sortScales(scales);\n\t\tunit = scales[scales.length - 1].unit;\n\t\tstep = scales[scales.length - 1].step || 1;\n\t}\n\treturn { unit:unit, step:step };\n}\n\nfunction _init_tasks_range(gantt) {\n\tvar cfg = _scale_range_unit(gantt);\n\tvar unit = cfg.unit,\n\t\tstep = cfg.step;\n\tvar range = resolveConfigRange(unit, gantt);\n\n\tif(!(range.start_date && range.end_date)){\n\t\trange = dateRangeResolver(gantt);\n\t\tif(!range.start_date || !range.end_date){\n\t\t\trange = defaultRangeResolver(gantt);\n\t\t}\n\n\t\trange.start_date = gantt.date[unit + \"_start\"](range.start_date);\n\t\trange.start_date = gantt.calculateEndDate({\n\t\t\tstart_date: gantt.date[unit + \"_start\"](range.start_date),\n\t\t\tduration: -1,\n\t\t\tunit: unit,\n\t\t\tstep:step\n\t\t});//one free column before first task\n\n\t\trange.end_date = gantt.date[unit + \"_start\"](range.end_date);\n\t\trange.end_date = gantt.calculateEndDate({start_date: range.end_date, duration: 2, unit: unit, step:step});//one free column after last task\n\t}\n\n\tgantt._min_date = range.start_date;\n\tgantt._max_date = range.end_date;\n}\n\nfunction _adjust_scales(gantt) {\n\tif (gantt.config.fit_tasks) {\n\t\tvar old_min = +gantt._min_date,\n\t\t\told_max = +gantt._max_date;\n\t\t//this._init_tasks_range();\n\t\tif (+gantt._min_date != old_min || +gantt._max_date != old_max) {\n\t\t\tgantt.render();\n\n\t\t\tgantt.callEvent(\"onScaleAdjusted\", []);\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nmodule.exports = function updateTasksRange(gantt){\n\t_init_tasks_range(gantt);\n\t_adjust_scales(gantt);\n};\n","var utils = require(\"../../utils/utils\");\n\nvar $powerArray  = {\n\t$create: function(array){\n\t\treturn utils.mixin(array || [], this);\n\t},\n\t//remove element at specified position\n\t$removeAt:function(pos,len){\n\t\tif (pos>=0) this.splice(pos,(len||1));\n\t},\n\t//find element in collection and remove it\n\t$remove:function(value){\n\t\tthis.$removeAt(this.$find(value));\n\t},\n\t//add element to collection at specific position\n\t$insertAt:function(data,pos){\n\t\tif (!pos && pos!==0) \t//add to the end by default\n\t\t\tthis.push(data);\n\t\telse {\n\t\t\tvar b = this.splice(pos,(this.length-pos));\n\t\t\tthis[pos] = data;\n\t\t\tthis.push.apply(this,b); //reconstruct array without loosing this pointer\n\t\t}\n\t},\n\t//return index of element, -1 if it doesn't exists\n\t$find:function(data){\n\t\tfor (var i=0; i<this.length; i++)\n\t\t\tif (data==this[i]) return i;\n\t\treturn -1;\n\t},\n\t//execute some method for each element of array\n\t$each:function(functor,master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tfunctor.call((master||this),this[i]);\n\t},\n\t//create new array from source, by using results of functor\n\t$map:function(functor,master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tthis[i]=functor.call((master||this),this[i]);\n\t\treturn this;\n\t},\n\t$filter:function(functor, master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tif (!functor.call((master||this),this[i])){\n\t\t\t\tthis.splice(i,1);\n\t\t\t\ti--;\n\t\t\t}\n\t\treturn this;\n\t}\n};\n\nmodule.exports = $powerArray;","var powerArray = require(\"./power_array\");\nvar utils = require(\"../../utils/utils\");\nvar eventable = require(\"../../utils/eventable\");\n\nvar DataStore = function(config){\n\tthis.pull = {};\n\tthis.$initItem = config.initItem;\n\tthis.visibleOrder = powerArray.$create();\n\tthis.fullOrder = powerArray.$create();\n\tthis._skip_refresh = false;\n\tthis._filterRule = null;\n\tthis._searchVisibleOrder = {};\n\tthis.$config = config;\n\teventable(this);\n\treturn this;\n};\nDataStore.prototype = {\n\n\t_parseInner: function(data){\n\t\tvar item = null,\n\t\t\tloaded = [];\n\t\tfor(var i = 0, len = data.length; i< len; i++){\n\t\t\titem = data[i];\n\t\t\tif(this.$initItem){\n\t\t\t\titem = this.$initItem(item);\n\t\t\t}\n\t\t\tif(this.callEvent(\"onItemLoading\", [item])){\n\t\t\t\tif (!this.pull.hasOwnProperty(item.id)) {\n\t\t\t\t\tthis.fullOrder.push(item.id);\n\t\t\t\t\tloaded.push(item);\n\t\t\t\t}\n\t\t\t\tthis.pull[item.id] = item;\n\t\t\t}\n\t\t}\n\t\treturn loaded;\n\t},\n\tparse: function(data){\n\t\tthis.callEvent(\"onBeforeParse\", [data]);\n\t\tvar loaded = this._parseInner(data);\n\t\tthis.refresh();\n\t\tthis.callEvent(\"onParse\", [loaded]);\n\t},\n\tgetItem: function(id){\n\t\treturn this.pull[id];\n\t},\n\n\t_updateOrder: function(code){\n\t\tcode.call(this.visibleOrder);\n\t\tcode.call(this.fullOrder);\n\t},\n\tupdateItem: function(id, item){\n\t\tif (!utils.defined(item)) item = this.getItem(id);\n\n\t\tif (!this._skip_refresh) {\n\t\t\tif (this.callEvent(\"onBeforeUpdate\", [item.id, item]) === false) return false;\n\t\t}\n\t\tthis.pull[id]=item;\n\t\tif (!this._skip_refresh) {\n\t\t\tthis.callEvent(\"onAfterUpdate\", [item.id, item]);\n\t\t\tthis.callEvent(\"onStoreUpdated\", [item.id, item, \"update\"]);\n\t\t}\n\t},\n\n\t_removeItemInner: function(id){\n\t\t//clear from collections\n\t\t//this.visibleOrder.$remove(id);\n\t\tthis._updateOrder(function(){ this.$remove(id);});\n\t\tdelete this.pull[id];\n\t},\n\n\tremoveItem: function(id){\n\t\t//utils.assert(this.exists(id), \"Not existing ID in remove command\"+id);\n\n\t\tvar obj = this.getItem(id);\t//save for later event\n\t\tif (!this._skip_refresh) {\n\t\t\tif (this.callEvent(\"onBeforeDelete\", [obj.id, obj]) === false) return false;\n\t\t}\n\n\t\tthis._removeItemInner(id);\n\n\t\tif (!this._skip_refresh) {\n\t\t\tthis.filter();\n\t\t\tthis.callEvent(\"onAfterDelete\", [obj.id, obj]);\n\t\t\t//repaint signal\n\t\t\tthis.callEvent(\"onStoreUpdated\", [obj.id, obj, \"delete\"]);\n\t\t}\n\t},\n\n\t_addItemInner: function(item, index){\n\t\t//in case of treetable order is sent as 3rd parameter\n\t\t//var order = index;\n\n\t\tif(this.exists(item.id)){\n\t\t\tthis.silent(function(){this.updateItem(item.id, item);});\n\t\t}else{\n\t\t\tvar order = this.visibleOrder;\n\n\t\t\t//by default item is added to the end of the list\n\t\t\tvar data_size = order.length;\n\n\t\t\tif (!utils.defined(index) || index < 0)\n\t\t\t\tindex = data_size;\n\t\t\t//check to prevent too big indexes\n\t\t\tif (index > data_size){\n\t\t\t\t//dhx.log(\"Warning\",\"DataStore:add\",\"Index of out of bounds\");\n\t\t\t\tindex = Math.min(order.length,index);\n\t\t\t}\n\t\t}\n\n\n\t\t//gantt.assert(!this.exists(id), \"Not unique ID\");\n\n\t\tthis.pull[item.id]=item;\n\t\tif (!this._skip_refresh){\n\t\t\tthis._updateOrder(function(){\n\t\t\t\tif(this.$find(item.id) === -1)\n\t\t\t\t\tthis.$insertAt(item.id,index);\n\t\t\t});\n\t\t}\n\t\tthis.filter();\n\t\t//order.$insertAt(item.id,index);\n\t},\n\n\n\tisVisible: function(id){\n\t\treturn this.visibleOrder.$find(id) > -1;\n\t},\n\tgetVisibleItems: function(){\n\t\treturn this.getIndexRange();\n\t},\n\n\taddItem: function(item, index){\n\t\tif (!utils.defined(item.id))\n\t\t\titem.id = utils.uid();\n\n\t\tif(this.$initItem){\n\t\t\titem = this.$initItem(item);\n\t\t}\n\n\t\tif (!this._skip_refresh){\n\t\t\tif (this.callEvent(\"onBeforeAdd\", [item.id, item]) === false) return false;\n\t\t}\n\n\n\t\tthis._addItemInner(item, index);\n\n\t\tif (!this._skip_refresh){\n\t\t\tthis.callEvent(\"onAfterAdd\",[item.id, item]);\n\t\t\t//repaint signal\n\t\t\tthis.callEvent(\"onStoreUpdated\",[item.id,item,\"add\"]);\n\t\t}\n\t\treturn item.id;\n\t},\n\n\t_changeIdInner: function(oldId, newId){\n\t\tif(this.pull[oldId])\n\t\t\tthis.pull[newId] = this.pull[oldId];\n\n\t\tvar visibleOrder = this._searchVisibleOrder[oldId];\n\t\tthis.pull[newId].id = newId;\n\t\tthis._updateOrder(function(){\n\t\t\tthis[this.$find(oldId)] = newId;\n\t\t});\n\t\tthis._searchVisibleOrder[newId] = visibleOrder;\n\t\tdelete this._searchVisibleOrder[oldId];\n\n\t\t//this.visibleOrder[this.visibleOrder.$find(oldId)]=newId;\n\t\tdelete this.pull[oldId];\n\t},\n\tchangeId: function(oldId, newId){\n\t\tthis._changeIdInner(oldId, newId);\n\n\t\tthis.callEvent(\"onIdChange\", [oldId, newId]);\n\n\t},\n\texists: function(id){\n\t\treturn !!(this.pull[id]);\n\t},\n\n\t_moveInner: function(sindex, tindex){\n\t\tvar id = this.getIdByIndex(sindex);\n\n\t\tthis._updateOrder(function(){\n\t\t\tthis.$removeAt(sindex);\n\t\t\tthis.$insertAt(id,Math.min(this.length, tindex));\n\t\t});\n\t\t//this.visibleOrder.$removeAt(sindex);\t//remove at old position\n\t\t//if (sindex<tindex) tindex--;\t//correct shift, caused by element removing\n\t\t//this.visibleOrder.$insertAt(id,Math.min(this.visibleOrder.length, tindex));\t//insert at new position\n\t},\n\n\tmove: function(sindex, tindex){\n\t\t//gantt.assert(sindex>=0 && tindex>=0, \"DataStore::move\",\"Incorrect indexes\");\n\n\t\tvar id = this.getIdByIndex(sindex);\n\t\tvar obj = this.getItem(id);\n\t\tthis._moveInner(sindex, tindex);\n\n\n\t\tif (!this._skip_refresh) {\n\t\t\t//repaint signal\n\t\t\tthis.callEvent(\"onStoreUpdated\", [obj.id, obj, \"move\"]);\n\t\t}\n\t},\n\tclearAll: function(){\n\t\tthis.pull = {};\n\t\tthis.visibleOrder = powerArray.$create();\n\t\tthis.fullOrder = powerArray.$create();\n\t\tif (this._skip_refresh) return;\n\t\tthis.callEvent(\"onClearAll\",[]);\n\t\tthis.refresh();\n\t},\n\n\tsilent:function(code, master){\n\t\tthis._skip_refresh = true;\n\t\tcode.call(master||this);\n\t\tthis._skip_refresh = false;\n\t},\n\n\tarraysEqual: function (arr1, arr2) {\n\t\tif(arr1.length !== arr2.length)\n\t\t\treturn false;\n\t\tfor(var i = 0; i < arr1.length; i++) {\n\t\t\tif(arr1[i] !== arr2[i])\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\trefresh: function(id, quick){\n\t\tif (this._skip_refresh) return;\n\n\t\tvar args;\n\t\tif (id){\n\t\t\targs = [id, this.pull[id], \"paint\"];\n\t\t}else{\n\t\t\targs = [null,null,null];\n\t\t}\n\n\t\tif(this.callEvent(\"onBeforeStoreUpdate\", args) === false){\n\t\t\treturn;\n\t\t}\n\n\t\tif(id){\n\t\t\t// if item changes visible order (e.g. expand-collapse branch) - do a complete repaint\n\t\t\tif(!quick){\n\t\t\t\tvar oldOrder = this.visibleOrder;\n\t\t\t\tthis.filter();\n\t\t\t\tif(!this.arraysEqual(oldOrder, this.visibleOrder)){\n\t\t\t\t\tid = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}else{\n\t\t\tthis.filter();\n\t\t}\n\n\t\tif (id){\n\t\t\targs = [id, this.pull[id], \"paint\"];\n\t\t}else{\n\t\t\targs = [null,null,null];\n\t\t}\n\n\t\tthis.callEvent(\"onStoreUpdated\",args);\n\t},\n\n\tcount: function(){\n\t\treturn this.fullOrder.length;\n\t},\n\tcountVisible: function(){\n\t\treturn this.visibleOrder.length;\n\t},\n\n\tsort: function(sort){},\n\n\tserialize: function(){},\n\n\teachItem: function(code){\n\t\tfor (var i=0; i<this.fullOrder.length; i++) {\n\t\t\tvar item = this.pull[this.fullOrder[i]];\n\t\t\tcode.call(this, item);\n\t\t}\n\t},\n\t\n\tfilter: function(rule){\n\t\tvar filteredOrder = powerArray.$create();\n\t\tthis.eachItem(function(item){\n\t\t\tif(this.callEvent(\"onFilterItem\", [item.id, item])){\n\t\t\t\tfilteredOrder.push(item.id);\n\t\t\t}\n\t\t});\n\n\t\tthis.visibleOrder = filteredOrder;\n\t\tthis._searchVisibleOrder = {};\n\t\tfor(var i = 0; i < this.visibleOrder.length; i++){\n\t\t\tthis._searchVisibleOrder[this.visibleOrder[i]] = i;\n\t\t}\n\t},\n\n\tgetIndexRange: function(from, to){\n\t\tto=Math.min((to||Infinity),this.countVisible()-1);\n\n\t\tvar ret= [];\n\t\tfor (var i=(from||0); i <= to; i++)\n\t\t\tret.push(this.getItem(this.visibleOrder[i]));\n\t\treturn ret;\n\t},\n\tgetItems: function(){\n\t\tvar res = [];\n\t\tfor(var i in this.pull){\n\t\t\tres.push(this.pull[i]);\n\t\t}\n\t/*\tfor(var i = 0; i < this.fullOrder.length; i++){\n\n\t\t}*/\n\t\treturn res;\n\t},\n\n\tgetIdByIndex: function(index){\n\t\treturn this.visibleOrder[index];\n\t},\n\tgetIndexById: function(id){\n\t\tvar res = this._searchVisibleOrder[id];\n\t\tif(res === undefined){\n\t\t\tres = -1;\n\t\t}\n\t\treturn res;\n\t},\n\t_getNullIfUndefined: function(value){\n\t\tif(value === undefined){\n\t\t\treturn null;\n\t\t}else{\n\t\t\treturn value;\n\t\t}\n\t},\n\tgetFirst: function(){\n\t\treturn this._getNullIfUndefined(this.visibleOrder[0]);\n\t},\n\tgetLast: function(){\n\t\treturn this._getNullIfUndefined(this.visibleOrder[this.visibleOrder.length-1]);\n\t},\n\tgetNext: function(id){\n\t\treturn this._getNullIfUndefined(this.visibleOrder[this.getIndexById(id) + 1]);\n\t},\n\tgetPrev: function(id){\n\t\treturn this._getNullIfUndefined(this.visibleOrder[this.getIndexById(id) - 1]);\n\t},\n\tdestructor: function(){\n\t\tthis.detachAllEvents();\n\t\tthis.pull = null;\n\t\tthis.$initItem = null;\n\t\tthis.visibleOrder = null;\n\t\tthis.fullOrder = null;\n\t\tthis._skip_refresh = null;\n\t\tthis._filterRule = null;\n\t\tthis._searchVisibleOrder = null;\n\t}\n};\n\nmodule.exports = DataStore;","function createTaskRenderer(gantt){\n\n\tfunction _render_task_element(task, view) {\n\t\tvar config = view.$getConfig();\n\t\tvar painters = config.type_renderers;\n\t\tvar renderer = painters[gantt.getTaskType(task.type)],\n\t\t\tdefaultRenderer = _task_default_render;\n\n\t\tif (!renderer) {\n\t\t\treturn defaultRenderer.call(gantt, task, view);\n\t\t}else{\n\t\t\treturn renderer.call(gantt, task, function(task){ return defaultRenderer.call(gantt, task, view);}, view);\n\t\t}\n\t}\n\n\tfunction _task_default_render(task, view) {\n\t\tif (gantt._isAllowedUnscheduledTask(task))\n\t\t\treturn;\n\n\n\t\tvar pos = view.getItemPosition(task);\n\n\t\tvar cfg = view.$getConfig(),\n\t\t\ttemplates = view.$getTemplates();\n\t\tvar height = view.getItemHeight();\n\n\t\tvar taskType = gantt.getTaskType(task.type);\n\n\t\tvar padd = Math.floor((gantt.config.row_height - height) / 2);\n\t\tif (taskType == cfg.types.milestone && cfg.link_line_width > 1) {\n\t\t\t//little adjust milestone position, so horisontal corners would match link arrow when thickness of link line is more than 1px\n\t\t\tpadd += 1;\n\t\t}\n\n\t\tif (taskType == cfg.types.milestone){\n\t\t\tpos.left -= Math.round(height / 2);\n\t\t\tpos.width = height;\n\t\t}\n\n\t\tvar div = document.createElement(\"div\");\n\n\t\tvar width = Math.round(pos.width);\n\n\t\tif(view.$config.item_attribute){\n\t\t\tdiv.setAttribute(view.$config.item_attribute, task.id);\n\t\t}\n\n\t\tif (cfg.show_progress && taskType != cfg.types.milestone) {\n\t\t\t_render_task_progress(task, div, width, cfg, templates);\n\t\t}\n\n\t\t//use separate div to display content above progress bar\n\t\tvar content = _render_task_content(task, width, templates);\n\t\tif (task.textColor) {\n\t\t\tcontent.style.color = task.textColor;\n\t\t}\n\t\tdiv.appendChild(content);\n\n\t\tvar css = _combine_item_class(\"gantt_task_line\",\n\t\t\ttemplates.task_class(task.start_date, task.end_date, task),\n\t\t\ttask.id,\n\t\t\tview);\n\t\tif (task.color || task.progressColor || task.textColor) {\n\t\t\tcss += \" gantt_task_inline_color\";\n\t\t}\n\t\tdiv.className = css;\n\n\t\tvar styles = [\n\t\t\t\"left:\" + pos.left + \"px\",\n\t\t\t\"top:\" + (padd + pos.top) + 'px',\n\t\t\t\"height:\" + height + 'px',\n\t\t\t\"line-height:\" + (Math.max(height < 30 ? height - 2 : height, 0)) + 'px',\n\t\t\t\"width:\" + width + 'px'\n\t\t];\n\t\tif (task.color) {\n\t\t\tstyles.push(\"background-color:\" + task.color);\n\t\t}\n\t\tif (task.textColor) {\n\t\t\tstyles.push(\"color:\" + task.textColor);\n\t\t}\n\n\t\tdiv.style.cssText = styles.join(\";\");\n\t\tvar side = _render_leftside_content(task, cfg, templates);\n\t\tif (side) div.appendChild(side);\n\n\t\tside = _render_rightside_content(task, cfg, templates);\n\t\tif (side) div.appendChild(side);\n\n\t\tgantt._waiAria.setTaskBarAttr(task, div);\n\n\t\tvar state = gantt.getState();\n\n\t\tif (!gantt.isReadonly(task)) {\n\t\t\tif (cfg.drag_resize && !gantt.isSummaryTask(task) && taskType != cfg.types.milestone) {\n\t\t\t\t_render_pair(div, \"gantt_task_drag\", task, function (css) {\n\t\t\t\t\tvar el = document.createElement(\"div\");\n\t\t\t\t\tel.className = css;\n\t\t\t\t\treturn el;\n\t\t\t\t}, cfg);\n\t\t\t}\n\t\t\tif (cfg.drag_links && cfg.show_links) {\n\t\t\t\t_render_pair(div, \"gantt_link_control\", task, function (css) {\n\t\t\t\t\tvar outer = document.createElement(\"div\");\n\t\t\t\t\touter.className = css;\n\t\t\t\t\touter.style.cssText = [\n\t\t\t\t\t\t\"height:\" + height + 'px',\n\t\t\t\t\t\t\"line-height:\" + height + 'px'\n\t\t\t\t\t].join(\";\");\n\t\t\t\t\tvar inner = document.createElement(\"div\");\n\t\t\t\t\tinner.className = \"gantt_link_point\";\n\n\t\t\t\t\tvar showLinkPoints = false;\n\t\t\t\t\tif(state.link_source_id && cfg.touch){\n\t\t\t\t\t\tshowLinkPoints = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tinner.style.display = showLinkPoints ? \"block\" : \"\";\n\t\t\t\t\touter.appendChild(inner);\n\t\t\t\t\treturn outer;\n\t\t\t\t}, cfg);\n\t\t\t}\n\t\t}\n\t\treturn div;\n\t}\n\n\tfunction _render_side_content(task, template, cssClass) {\n\t\tif (!template) return null;\n\n\t\tvar text = template(task.start_date, task.end_date, task);\n\t\tif (!text) return null;\n\t\tvar content = document.createElement(\"div\");\n\t\tcontent.className = \"gantt_side_content \" + cssClass;\n\t\tcontent.innerHTML = text;\n\t\treturn content;\n\t}\n\n\tfunction _render_leftside_content(task, cfg, templates) {\n\t\tvar css = \"gantt_left \" + _get_link_crossing_css(!cfg.rtl ? true : false, task, cfg);\n\t\treturn _render_side_content(task, templates.leftside_text, css);\n\t}\n\n\tfunction _render_rightside_content(task, cfg, templates) {\n\t\tvar css = \"gantt_right \" + _get_link_crossing_css(!cfg.rtl ? false : true, task, cfg);\n\t\treturn _render_side_content(task, templates.rightside_text, css);\n\t}\n\n\tfunction _get_link_crossing_css(left, task) {\n\t\tvar cond = _get_conditions(left);\n\n\t\tfor (var i in cond) {\n\t\t\tvar links = task[i];\n\t\t\tfor (var ln = 0; ln < links.length; ln++) {\n\t\t\t\tvar link = gantt.getLink(links[ln]);\n\n\t\t\t\tfor (var tp = 0; tp < cond[i].length; tp++) {\n\t\t\t\t\tif (link.type == cond[i][tp]) {\n\t\t\t\t\t\treturn \"gantt_link_crossing\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn \"\";\n\t}\n\n\n\tfunction _render_task_content(task, width, templates) {\n\t\tvar content = document.createElement(\"div\");\n\t\tif (gantt.getTaskType(task.type) != gantt.config.types.milestone)\n\t\t\tcontent.innerHTML = templates.task_text(task.start_date, task.end_date, task);\n\t\tcontent.className = \"gantt_task_content\";\n\t\t//content.style.width = width + 'px';\n\t\treturn content;\n\t}\n\n\tfunction _render_task_progress(task, element, maxWidth, cfg, templates) {\n\t\tvar done = task.progress * 1 || 0;\n\n\t\tmaxWidth = Math.max(maxWidth - 2, 0);//2px for borders\n\t\tvar pr = document.createElement(\"div\");\n\t\tvar width = Math.round(maxWidth * done);\n\n\t\twidth = Math.min(maxWidth, width);\n\t\tif (task.progressColor) {\n\t\t\tpr.style.backgroundColor = task.progressColor;\n\t\t\tpr.style.opacity = 1;\n\t\t}\n\t\tpr.style.width = width + 'px';\n\t\tpr.className = \"gantt_task_progress\";\n\t\tpr.innerHTML = templates.progress_text(task.start_date, task.end_date, task);\n\n\t\tif(cfg.rtl){\n\t\t\tpr.style.position = \"absolute\";\n\t\t\tpr.style.right = \"0px\";\n\t\t}\n\n\t\tvar wrapper = document.createElement(\"div\");\n\t\twrapper.className = \"gantt_task_progress_wrapper\";\n\t\twrapper.appendChild(pr);\n\t\telement.appendChild(wrapper);\n\n\t\tif (gantt.config.drag_progress && !gantt.isReadonly(task)) {\n\t\t\tvar drag = document.createElement(\"div\");\n\n\t\t\tvar markerPos = width;\n\t\t\tif(cfg.rtl){\n\t\t\t\tmarkerPos = maxWidth - width;\n\t\t\t}\n\n\t\t\tdrag.style.left = markerPos + 'px';\n\t\t\tdrag.className = \"gantt_task_progress_drag\";\n\t\t\tpr.appendChild(drag);\n\t\t\telement.appendChild(drag);\n\t\t}\n\t}\n\n\tfunction _get_conditions(leftside) {\n\t\tif (leftside) {\n\t\t\treturn {\n\t\t\t\t$source: [\n\t\t\t\t\tgantt.config.links.start_to_start\n\t\t\t\t],\n\t\t\t\t$target: [\n\t\t\t\t\tgantt.config.links.start_to_start,\n\t\t\t\t\tgantt.config.links.finish_to_start\n\t\t\t\t]\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\t$source: [\n\t\t\t\t\tgantt.config.links.finish_to_start,\n\t\t\t\t\tgantt.config.links.finish_to_finish\n\t\t\t\t],\n\t\t\t\t$target: [\n\t\t\t\t\tgantt.config.links.finish_to_finish\n\t\t\t\t]\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction _combine_item_class(basic, template, itemId, view) {\n\t\tvar cfg = view.$getConfig();\n\t\tvar css = [basic];\n\t\tif (template)\n\t\t\tcss.push(template);\n\n\t\tvar state = gantt.getState();\n\n\t\tvar task = gantt.getTask(itemId);\n\n\t\tif (gantt.getTaskType(task.type) == cfg.types.milestone) {\n\t\t\tcss.push(\"gantt_milestone\");\n\t\t}else if (gantt.getTaskType(task.type) == cfg.types.project) {\n\t\t\tcss.push(\"gantt_project\");\n\t\t}\n\n\t\tcss.push(\"gantt_bar_\" + gantt.getTaskType(task.type));\n\n\n\t\tif (gantt.isSummaryTask(task))\n\t\t\tcss.push(\"gantt_dependent_task\");\n\n\t\tif (gantt.isSplitTask(task)) {\n\t\t\tcss.push(\"gantt_split_parent\");\n\t\t}\n\n\t\tif (cfg.select_task && itemId == state.selected_task)\n\t\t\tcss.push(\"gantt_selected\");\n\n\t\tif (itemId == state.drag_id) {\n\t\t\tcss.push(\"gantt_drag_\" + state.drag_mode);\n\t\t\tif (state.touch_drag) {\n\t\t\t\tcss.push(\"gantt_touch_\" + state.drag_mode);\n\t\t\t}\n\t\t}\n\n\t\tif (state.link_source_id == itemId)\n\t\t\tcss.push(\"gantt_link_source\");\n\n\t\tif (state.link_target_id == itemId)\n\t\t\tcss.push(\"gantt_link_target\");\n\n\n\t\tif (cfg.highlight_critical_path && gantt.isCriticalTask) {\n\t\t\tif (gantt.isCriticalTask(task))\n\t\t\t\tcss.push(\"gantt_critical_task\");\n\t\t}\n\n\t\tif (state.link_landing_area &&\n\t\t\t(state.link_target_id && state.link_source_id) &&\n\t\t\t(state.link_target_id != state.link_source_id)) {\n\n\t\t\tvar from_id = state.link_source_id;\n\t\t\tvar from_start = state.link_from_start;\n\t\t\tvar to_start = state.link_to_start;\n\n\t\t\tvar allowDrag = gantt.isLinkAllowed(from_id, itemId, from_start, to_start);\n\n\t\t\tvar dragClass = \"\";\n\t\t\tif (allowDrag) {\n\t\t\t\tif (to_start)\n\t\t\t\t\tdragClass = \"link_start_allow\";\n\t\t\t\telse\n\t\t\t\t\tdragClass = \"link_finish_allow\";\n\t\t\t} else {\n\t\t\t\tif (to_start)\n\t\t\t\t\tdragClass = \"link_start_deny\";\n\t\t\t\telse\n\t\t\t\t\tdragClass = \"link_finish_deny\";\n\t\t\t}\n\t\t\tcss.push(dragClass);\n\t\t}\n\t\treturn css.join(\" \");\n\t}\n\n\tfunction _render_pair(parent, css, task, content, config) {\n\t\tvar state = gantt.getState();\n\t\tvar className, element;\n\t\tif (+task.start_date >= +state.min_date) {\n\t\t\tclassName = [css, config.rtl ? \"task_right\" : \"task_left\", \"task_start_date\"];\n\t\t\telement = content(className.join(\" \"));\n\t\t\telement.setAttribute(\"data-bind-property\", \"start_date\");\n\t\t\tparent.appendChild(element);\n\t\t}\n\n\t\tif (+task.end_date <= +state.max_date){\n\t\t\tclassName = [css, config.rtl ? \"task_left\" : \"task_right\", \"task_end_date\"];\n\t\t\telement = content(className.join(\" \"));\n\t\t\telement.setAttribute(\"data-bind-property\", \"end_date\");\n\t\t\tparent.appendChild(element);\n\t\t}\n\n\t}\n\n\treturn _render_task_element;\n}\n\nmodule.exports = createTaskRenderer;","var domHelpers = require(\"../../../utils/dom_helpers\"),\n\tutils = require(\"../../../utils/utils\"),\n\teventable = require(\"../../../utils/eventable\"),\n\tgridResize = require(\"./grid_resize\"),\n\ttopPositionMixin = require(\"../row_position_mixin\");\n\nvar Grid = function(parent, config, factory, gantt){\n\tthis.$config = utils.mixin({}, config || {});\n\tthis.$gantt = gantt;\n\tthis.$parent = parent;\n\teventable(this);\n\tthis.$state = {};\n};\n\n\nGrid.prototype = {\n\tinit: function(container){\n\t\tvar gantt = this.$gantt;\n\t\tvar gridAriaAttr = gantt._waiAria.gridAttrString();\n\t\tvar gridDataAriaAttr = gantt._waiAria.gridDataAttrString();\n\n\n\t\tcontainer.innerHTML = \"<div class='gantt_grid' style='height:inherit;width:inherit;' \"+gridAriaAttr+\"></div>\";\n\t\tthis.$grid = container.childNodes[0];\n\n\t\tthis.$grid.innerHTML = \"<div class='gantt_grid_scale' \"+\n\t\t\tgantt._waiAria.gridScaleRowAttrString()+\"></div><div class='gantt_grid_data' \"+gridDataAriaAttr+\"></div>\";\n\n\t\tthis.$grid_scale = this.$grid.childNodes[0];\n\t\tthis.$grid_data = this.$grid.childNodes[1];\n\n\t\tvar attr = this.$getConfig()[this.$config.bind + \"_attribute\"];\n\t\tif(!attr && this.$config.bind){\n\t\t\tattr = this.$config.bind + \"_id\";\n\t\t}\n\t\tthis.$config.item_attribute = attr || null;\n\n\t\tif(!this.$config.layers){\n\t\t\tvar layers = this._createLayerConfig();\n\t\t\tthis.$config.layers = layers;\n\t\t}\n\n\t\tvar resizer = gridResize(gantt, this);\n\t\tresizer.init();\n\t\tthis._renderHeaderResizers = resizer.doOnRender;\n\t\tthis._mouseDelegates = require(\"../mouse_event_container\")(gantt);\n\n\t\tthis._addLayers(this.$gantt);\n\t\tthis._initEvents();\n\t\tthis.callEvent(\"onReady\", []);\n\t\t//this.refresh();\n\t},\n\n\t_validateColumnWidth: function(column, property){\n\t\t// user can set {name:\"text\", width:\"200\",...} for some reason,\n\t\t// check and convert it to number when possible\n\t\tvar value = column[property];\n\t\tif (value && value != \"*\") {\n\t\t\tvar gantt = this.$gantt;\n\t\t\tvar numericWidth = value*1;\n\t\t\tif(isNaN(numericWidth)){\n\t\t\t\tgantt.assert(false, \"Wrong \" + property + \" value of column \" + column.name);\n\t\t\t}else{\n\t\t\t\tcolumn[property] = numericWidth;\n\t\t\t}\n\t\t}\n\t},\n\n\tsetSize: function(width, height){\n\t\tthis.$config.width = this.$state.width = width;\n\t\tthis.$state.height = height;\n\n\t\t// TODO: maybe inherit and override in a subclass instead of extending here\n\n\t\tvar columns = this.getGridColumns(),\n\t\t\tinnerWidth = 0;\n\n\t\tfor (var i = 0, l = columns.length; i < l; i++) {\n\t\t\tthis._validateColumnWidth(columns[i], \"min_width\");\n\t\t\tthis._validateColumnWidth(columns[i], \"max_width\");\n\t\t\tthis._validateColumnWidth(columns[i], \"width\");\n\t\t\n\t\t\tinnerWidth += columns[i].width*1;\n\t\t}\n\n\t\tvar outerWidth;\n\t\tif(isNaN(innerWidth) || !this.$config.scrollable){\n\t\t\touterWidth = this._setColumnsWidth(width + 1);\n\t\t\tinnerWidth = outerWidth;\n\t\t}\n\n\t\tif(this.$config.scrollable){\n\t\t\tthis.$grid_scale.style.width = innerWidth + \"px\";\n\t\t\tthis.$grid_data.style.width = innerWidth + \"px\";\n\t\t}else{\n\t\t\tthis.$grid_scale.style.width = \"inherit\";\n\t\t\tthis.$grid_data.style.width = \"inherit\";\n\t\t}\n\t\tthis.$config.width -= 1;\n\n\t\tvar config = this.$getConfig();\n\t\tif(outerWidth !== width){\n\t\t\tconfig.grid_width = outerWidth;\n\t\t\tthis.$config.width = outerWidth - 1;\n\t\t}\n\n\t\tvar dataHeight = Math.max(this.$state.height - config.scale_height, 0);\n\t\tthis.$grid_data.style.height = dataHeight + \"px\";\n\t\tthis.refresh();\n\t},\n\tgetSize: function(){\n\n\t\tvar config = this.$getConfig();\n\n\t\tvar store = this.$config.rowStore;\n\n\t\tvar contentHeight = store ? config.row_height * store.countVisible() : 0,\n\t\t\tcontentWidth = this._getGridWidth();\n\n\t\tvar size = {\n\t\t\tx: this.$state.width,\n\t\t\ty: this.$state.height,\n\t\t\tcontentX: this.isVisible() ? contentWidth: 0,\n\t\t\tcontentY: this.isVisible() ? (config.scale_height + contentHeight) : 0,\n\t\t\tscrollHeight: this.isVisible() ? contentHeight: 0,\n\t\t\tscrollWidth: this.isVisible() ? contentWidth : 0\n\t\t};\n\n\t\treturn size;\n\t},\n\trefresh: function(){\n\n\t\tif(this.$config.bind)\n\t\t\tthis.$config.rowStore = this.$gantt.getDatastore(this.$config.bind);\n\n\t\tthis._initSmartRenderingPlaceholder();\n\n\t\tthis._calculateGridWidth();\n\t\tthis._renderGridHeader();\n\t},\n\tscrollTo: function(left, top){\n\t\tif(!this.isVisible())\n\t\t\treturn;\n\n\t\tif (left*1 == left){\n\t\t\tthis.$state.scrollLeft = this.$grid.scrollLeft = left;\n\t\t}\n\n\t\t// var config = this.$getConfig();\n\t\tif(top*1 == top){\n\t\t\tthis.$state.scrollTop = this.$grid_data.scrollTop = top;\n\t\t}\n\t},\n\n\tgetColumnIndex: function(name){\n\t\tvar columns = this.$getConfig().columns;\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tif (columns[i].name == name) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetColumn: function(name){\n\t\tvar index = this.getColumnIndex(name);\n\t\tif(index === null){\n\t\t\treturn null;\n\t\t}\n\t\treturn this.$getConfig().columns[index];\n\t},\n\n\tgetGridColumns: function(){\n\t\tvar config = this.$getConfig();\n\t\treturn config.columns.slice();\n\t},\n\tisVisible: function(){\n\t\tif(this.$parent && this.$parent.$config){\n\t\t\treturn !this.$parent.$config.hidden;\n\t\t}else{\n\t\t\treturn this.$grid.offsetWidth;\n\t\t}\n\t},\n\n\tgetItemHeight: function(){\n\t\tvar config = this.$getConfig();\n\t\treturn config.row_height;\n\t},\n\n\t_createLayerConfig: function(){\n\t\tvar gantt = this.$gantt;\n\t\tvar self = this;\n\t\tvar layers = [\n\t\t\t{\n\t\t\t\trenderer: gantt.$ui.layers.gridLine,\n\t\t\t\tcontainer: this.$grid_data,\n\t\t\t\tfilter: [function(){\n\t\t\t\t\treturn self.isVisible();\n\t\t\t\t}]\n\t\t\t}\n\t\t];\n\t\treturn layers;\n\t},\n\n\t_addLayers: function(gantt){\n\t\tif(!this.$config.bind)\n\t\t\treturn;\n\n\t\tthis._taskLayers = [];\n\n\t\tvar self = this;\n\n\t\tvar layers = this.$gantt.$services.getService(\"layers\");\n\t\tvar taskRenderer = layers.getDataRender(this.$config.bind);\n\n\t\tif(!taskRenderer){\n\t\t\ttaskRenderer = layers.createDataRender({\n\t\t\t\tname: this.$config.bind,\n\t\t\t\tdefaultContainer: function(){ return self.$grid_data;}\n\t\t\t});\n\t\t}\n\n\t\tvar taskLayers = this.$config.layers;\n\t\tfor(var i = 0; taskLayers && i < taskLayers.length; i++){\n\t\t\tvar layer = taskLayers[i];\n\t\t\tlayer.host = this;\n\t\t\tvar bar_layer = taskRenderer.addLayer(layer);\n\t\t\tthis._taskLayers.push(bar_layer);\n\t\t}\n\n\t\tif(this.$config.bind)\n\t\t\tthis.$config.rowStore = this.$gantt.getDatastore(this.$config.bind);\n\n\t\tthis._initSmartRenderingPlaceholder();\n\t},\n\n\t_refreshPlaceholderOnStoreUpdate: function(id){\n\t\tvar config = this.$getConfig(),\n\t\t\tstore = this.$config.rowStore;\n\n\t\tif(!store || id !== null || !this.isVisible() || !config.smart_rendering) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar contentHeight;\n\t\tif(this.$config.scrollY) {\n\t\t\tvar scroll = this.$gantt.$ui.getView(this.$config.scrollY);\n\t\t\tif(scroll)\n\t\t\t\tcontentHeight = scroll.getScrollState().scrollSize;\n\t\t}\n\n\t\tif(!contentHeight){\n\t\t\tcontentHeight = store ? config.row_height * store.countVisible() : 0;\n\t\t}\n\n\t\tif(contentHeight){\n\t\t\tif(this.$rowsPlaceholder && this.$rowsPlaceholder.parentNode){\n\t\t\t\tthis.$rowsPlaceholder.parentNode.removeChild(this.$rowsPlaceholder);\n\t\t\t}\n\n\t\t\tvar placeholder = this.$rowsPlaceholder = document.createElement(\"div\");\n\t\t\tplaceholder.style.visibility = \"hidden\";\n\t\t\tplaceholder.style.height = contentHeight + \"px\";\n\t\t\tplaceholder.style.width = \"1px\";\n\t\t\tthis.$grid_data.appendChild(placeholder);\n\t\t}\n\t},\n\n\t_initSmartRenderingPlaceholder: function(){\n\t\tvar store = this.$config.rowStore;\n\t\tif(!store){\n\t\t\treturn;\n\t\t}else{\n\t\t\tthis._initSmartRenderingPlaceholder = function(){};\n\t\t}\n\t\tthis._staticBgHandler = store.attachEvent(\"onStoreUpdated\", utils.bind(this._refreshPlaceholderOnStoreUpdate, this));\n\t},\n\n\t_initEvents: function(){\n\t\tvar gantt = this.$gantt;\n\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_close\", gantt.bind(function (e, id, trg) {\n\t\t\tvar store = this.$config.rowStore;\n\t\t\tif(!store) return true;\n\n\t\t\tvar target = domHelpers.locateAttribute(e, this.$config.item_attribute);\n\t\t\tif(target){\n\t\t\t\tstore.close(target.getAttribute(this.$config.item_attribute));\n\n\t\t\t}\n\t\t\treturn false;\n\t\t}, this), this.$grid);\n\n\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_open\", gantt.bind(function (e, id, trg) {\n\t\t\tvar store = this.$config.rowStore;\n\t\t\tif(!store) return true;\n\n\t\t\tvar target = domHelpers.locateAttribute(e, this.$config.item_attribute);\n\t\t\tif(target){\n\t\t\t\tstore.open(target.getAttribute(this.$config.item_attribute));\n\n\t\t\t}\n\t\t\treturn false;\n\t\t}, this), this.$grid);\n\t},\n\n\t_clearLayers: function(gantt){\n\t\tvar layers = this.$gantt.$services.getService(\"layers\");\n\t\tvar taskRenderer = layers.getDataRender(this.$config.bind);\n\n\t\tif (this._taskLayers) {\n\t\t\tfor(var i = 0; i < this._taskLayers.length; i++){\n\t\t\t\ttaskRenderer.removeLayer(this._taskLayers[i]);\n\t\t\t}\n\t\t}\n\n\t\tthis._taskLayers = [];\n\t},\n\n\t_getColumnWidth: function(column, config, width) {\n\t\tvar min_width = column.min_width || config.min_grid_column_width;\n\t\tvar new_width = Math.max(width, min_width || 10);\n\t\tif (column.max_width)\n\t\t\tnew_width = Math.min(new_width, column.max_width);\n\t\treturn new_width;\n\t},\n\t// return min and max possible grid width according to restricts\n\t_getGridWidthLimits: function() {\n\t\tvar config = this.$getConfig(),\n\t\t\tcolumns = this.getGridColumns(),\n\t\t\tmin_limit = 0,\n\t\t\tmax_limit = 0;\n\n\t\t\tfor (var i=0; i<columns.length; i++) {\n\t\t\t\tmin_limit += columns[i].min_width ? columns[i].min_width : config.min_grid_column_width;\n\t\t\t\tif (max_limit !== undefined) {\n\t\t\t\t\tmax_limit = columns[i].max_width ? (max_limit + columns[i].max_width) : undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn [min_limit, max_limit];\n\t},\n\t// resize columns to get total newWidth, starting from columns[start_index]  \n\t_setColumnsWidth: function(newWidth, start_index) {\n\t\tvar config = this.$getConfig();\n\t\tvar columns = this.getGridColumns(),\n\t\t\tcolumns_width = 0,\n\t\t\tfinal_width = newWidth;\n\n\t\tstart_index = !window.isNaN(start_index) ? start_index : -1;\n\n\t\tfor (var i = 0, l = columns.length; i < l; i++) {\n\t\t\tcolumns_width += columns[i].width*1;\n\t\t}\n\n\t\tif (window.isNaN(columns_width)) {\n\t\t\tthis._calculateGridWidth(); \n\t\t\tcolumns_width = 0;\n\t\t\tfor (var i = 0, l = columns.length; i < l; i++) {\n\t\t\t\tcolumns_width += columns[i].width*1;\n\t\t\t}\n\t\t}\n\n\t\tvar extra_width = final_width - columns_width;\n\n\t\tvar start_width = 0;\n\t\tfor (var i=0; i<start_index+1; i++) {\n\t\t\tstart_width += columns[i].width;\n\t\t}\n\n\t\tcolumns_width -= start_width;\n\n\t\tfor (var i=start_index+1; i<columns.length; i++) {\n\n\t\t\tvar col = columns[i];\n\t\t\tvar\tshare = Math.round(extra_width * (col.width / columns_width));\n\n\t\t\t// columns have 2 additional restrict fields - min_width & max_width that are set by user\n\t\t\tif (extra_width < 0) {\n\t\t\t\tif (col.min_width && col.width+share < col.min_width)\n\t\t\t\t\tshare = col.min_width - col.width;\n\t\t\t\telse if (!col.min_width && config.min_grid_column_width && col.width+share < config.min_grid_column_width)\n\t\t\t\t\tshare = config.min_grid_column_width - col.width;\n\t\t\t} else if (col.max_width && col.width+share > col.max_width)\n\t\t\t\tshare = col.max_width - col.width;\n\n\t\t\tcolumns_width -= col.width;\n\t\t\tcol.width += share;\n\t\t\textra_width -= share;\n\n\t\t}\n\n\t\tvar iterator = extra_width > 0 ? 1 : -1;\n\t\twhile ((extra_width > 0 && iterator === 1) || (extra_width < 0 && iterator === -1)) {\n\t\t\tvar curExtra = extra_width;\n\t\t\tfor (i = start_index+1; i<columns.length; i++) {\n\t\t\t\tvar new_width = columns[i].width + iterator;\n\n\t\t\t\tif (new_width == this._getColumnWidth(columns[i], config, new_width)) {\n\t\t\t\t\textra_width -= iterator;\n\t\t\t\t\tcolumns[i].width = new_width;\n\t\t\t\t}\n\n\t\t\t\tif (!extra_width)\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif (curExtra == extra_width)\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// if impossible to resize the right-side columns, resize the start column\n\t\tif (extra_width && start_index > -1) {\n\t\t\tvar new_width = columns[start_index].width + extra_width;\n\t\t\tif (new_width == this._getColumnWidth(columns[start_index], config, new_width))\n\t\t\t\tcolumns[start_index].width = new_width;\n\t\t}\n\n\t\t//if (this.callEvent(\"onGridResizeEnd\", [config.grid_width, final_width]) === false)\n\t\t//\treturn;\n\n\t\treturn this._getColsTotalWidth();\n\t},\n\n\t_getColsTotalWidth: function(){\n\t\tvar columns = this.getGridColumns();\n\t\tvar cols_width = 0;\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tvar v = parseFloat(columns[i].width);\n\t\t\tif (window.isNaN(v)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcols_width += v;\n\t\t}\n\t\treturn cols_width;\n\t},\n\t_calculateGridWidth: function() {\n\t\tvar config = this.$getConfig();\n\t\tvar columns = this.getGridColumns();\n\t\tvar cols_width = 0;\n\t\tvar unknown = [];\n\t\tvar width = [];\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tvar v = parseFloat(columns[i].width);\n\t\t\tif (window.isNaN(v)) {\n\t\t\t\tv = config.min_grid_column_width || 10;\n\t\t\t\tunknown.push(i);\n\t\t\t}\n\t\t\twidth[i] = v;\n\t\t\tcols_width += v;\n\t\t}\n\t\tvar gridWidth = this._getGridWidth() + 1;\n\t\tif (config.autofit || unknown.length) {\n\t\t\tvar diff = gridWidth - cols_width;\n\t\t\t// TODO: logic may be improved for proportional changing of width\n\t\t\tif (config.autofit) {\n\t\t\t\t// delta must be added for all columns\n\t\t\t\tfor (var i = 0; i < width.length; i++) {\n\t\t\t\t\tvar delta = Math.round(diff / (width.length-i));\n\t\t\t\t\twidth[i] += delta;\n\t\t\t\t\tvar new_width = this._getColumnWidth(columns[i], config, width[i]);\n\n\t\t\t\t\tif (new_width != width[i]) {\n\t\t\t\t\t\tdelta = new_width - width[i];\n\t\t\t\t\t\twidth[i] = new_width;\n\t\t\t\t\t}\n\t\t\t\t\tdiff -= delta;\n\t\t\t\t}\n\t\t\t} else if (unknown.length) {\n\t\t\t\t// there are several columns with undefined width\n\t\t\t\tfor (var i = 0; i < unknown.length; i++) {\n\t\t\t\t\tvar delta = Math.round(diff / (unknown.length-i)); // no float values, just integer\n\t\t\t\t\tvar index = unknown[i];\n\t\t\t\t\twidth[index] += delta;\n\t\t\t\t\tvar new_width = this._getColumnWidth(columns[index], config, width[index]);\n\t\t\t\t\tif (new_width != width[index]) {\n\t\t\t\t\t\tdelta = new_width - width[index];\n\t\t\t\t\t\twidth[index] = new_width;\n\t\t\t\t\t}\n\t\t\t\t\tdiff -= delta;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < width.length; i++) {\n\t\t\t\tcolumns[i].width = width[i];\n\t\t\t}\n\t\t} else {\n\t\t\tvar changed = (gridWidth != cols_width);\n\t\t\tthis.$config.width = cols_width - 1;\n\t\t\tconfig.grid_width = cols_width;\n\t\t\tif(changed){\n\t\t\t\tthis.$parent._setContentSize(this.$config.width, this.$config.height);\n//\t\t\t\tthis.$parent.$config.width = cols_width;\n\t\t\t}\n\t\t}\n\n\t},\n\n\t_renderGridHeader: function(){\n\t\tvar gantt = this.$gantt;\n\t\tvar config = this.$getConfig();\n\t\tvar locale = this.$gantt.locale;\n\t\tvar templates = this.$gantt.templates;\n\n\t\tvar columns = this.getGridColumns();\n\t\tif(config.rtl){\n\t\t\tcolumns = columns.reverse();\n\t\t}\n\t\tvar cells = [];\n\t\tvar width = 0,\n\t\t\tlabels = locale.labels;\n\n\t\tvar lineHeigth = config.scale_height - 1;\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tvar last = i == columns.length - 1;\n\t\t\tvar col = columns[i];\n\n\t\t\t// ensure columns have non-empty names\n\t\t\tif (!col.name) {\n\t\t\t\tcol.name = gantt.uid() + \"\";\n\t\t\t}\n\n\t\t\tvar colWidth = col.width * 1;\n\n\t\t\tvar gridWidth = this._getGridWidth();\n\t\t\tif (last && gridWidth > width + colWidth)\n\t\t\t\tcol.width = colWidth = gridWidth - width;\n\t\t\twidth += colWidth;\n\t\t\tvar sort = (gantt._sort && col.name == gantt._sort.name) ? (\"<div class='gantt_sort gantt_\" + gantt._sort.direction + \"'></div>\") : \"\";\n\t\t\tvar cssClass = [\"gantt_grid_head_cell\",\n\t\t\t\t(\"gantt_grid_head_\" + col.name),\n\t\t\t\t(last ? \"gantt_last_cell\" : \"\"),\n\t\t\t\ttemplates.grid_header_class(col.name, col)].join(\" \");\n\n\t\t\tvar style = \"width:\" + (colWidth - (last ? 1 : 0)) + \"px;\";\n\t\t\tvar label = (col.label || labels[\"column_\" + col.name]);\n\t\t\tlabel = label || \"\";\n\n\t\t\tvar ariaAttrs = gantt._waiAria.gridScaleCellAttrString(col, label);\n\n\t\t\tvar cell = \"<div class='\" + cssClass + \"' style='\" + style + \"' \" + ariaAttrs + \" data-column-id='\" + col.name + \"' column_id='\" + col.name + \"'>\" + label + sort + \"</div>\";\n\t\t\tcells.push(cell);\n\t\t}\n\t\tthis.$grid_scale.style.height = (config.scale_height) + \"px\";\n\t\tthis.$grid_scale.style.lineHeight = lineHeigth + \"px\";\n\t\t//this.$grid_scale.style.width = \"inherit\";\n\t\tthis.$grid_scale.innerHTML = cells.join(\"\");\n\n\t\tif(this._renderHeaderResizers){\n\t\t\tthis._renderHeaderResizers();\n\t\t}\n\t},\n\n\t_getGridWidth: function(){\n\t\t// TODO: refactor/remove/comment some of _getGridWidth/this.$config.width/this.$state.width, it's not clear what they do\n\t\treturn this.$config.width;\n\t},\n\n\tdestructor: function(){\n\t\tthis._clearLayers(this.$gantt);\n\t\tif(this._mouseDelegates){\n\t\t\tthis._mouseDelegates.destructor();\n\t\t\tthis._mouseDelegates = null;\n\t\t}\n\t\tthis.$grid = null;\n\t\tthis.$grid_scale = null;\n\t\tthis.$grid_data = null;\n\t\tthis.$gantt = null;\n\n\t\tif(this.$config.rowStore){\n\t\t\tthis.$config.rowStore.detachEvent(this._staticBgHandler);\n\t\t\tthis.$config.rowStore = null;\n\t\t}\n\n\t\tthis.callEvent(\"onDestroy\", []);\n\t\tthis.detachAllEvents();\n\t}\n};\n\nutils.mixin(Grid.prototype, topPositionMixin());\n\nmodule.exports = Grid;\n","function createMixin(){\n\treturn {\n\t\t/**\n\t\t * Get top coordinate by row index (order)\n\t\t * @param {number} index \n\t\t */\n\t\tgetRowTop: function(index){\n\t\t\treturn index * this.$getConfig().row_height;\n\t\t},\n\n\t\t/**\n\t\t * Get top coordinate by item id\n\t\t * @param {*} task_id \n\t\t */\n\t\tgetItemTop: function (task_id) {\n\t\t\tif(this.$config.rowStore){\n\t\t\t\tvar store = this.$config.rowStore;\n\t\t\t\tif(!store) return 0;\n\n\t\t\t\tif(store.getParent && store.exists(task_id) && store.exists(store.getParent(task_id))){\n\t\t\t\t\tvar parent = store.getItem(store.getParent(task_id));\n\t\t\t\t\tif(this.$gantt.isSplitTask(parent)){\n\t\t\t\t\t\treturn this.getRowTop(store.getIndexById(parent.id));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this.getRowTop(store.getIndexById(task_id));\n\n\t\t\t}else{\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t}\n\t};\n}\n\nmodule.exports = createMixin;","var utils = require(\"../../../utils/utils\");\n\nfunction ScaleHelper(gantt){\n\tvar dateHelper = gantt.date;\n\tvar services = gantt.$services;\n\n\treturn {\n\t\tgetSum: function (sizes, from, to) {\n\t\t\tif (to === undefined)\n\t\t\t\tto = sizes.length - 1;\n\t\t\tif (from === undefined)\n\t\t\t\tfrom = 0;\n\n\t\t\tvar summ = 0;\n\t\t\tfor (var i = from; i <= to; i++)\n\t\t\t\tsumm += sizes[i];\n\n\t\t\treturn summ;\n\t\t},\n\t\tsetSumWidth: function (sum_width, scale, from, to) {\n\t\t\tvar parts = scale.width;\n\n\t\t\tif (to === undefined)\n\t\t\t\tto = parts.length - 1;\n\t\t\tif (from === undefined)\n\t\t\t\tfrom = 0;\n\t\t\tvar length = to - from + 1;\n\n\t\t\tif (from > parts.length - 1 || length <= 0 || to > parts.length - 1)\n\t\t\t\treturn;\n\n\t\t\tvar oldWidth = this.getSum(parts, from, to);\n\n\t\t\tvar diff = sum_width - oldWidth;\n\n\t\t\tthis.adjustSize(diff, parts, from, to);\n\t\t\tthis.adjustSize(-diff, parts, to + 1);\n\n\t\t\tscale.full_width = this.getSum(parts);\n\t\t},\n\t\tsplitSize: function (width, count) {\n\t\t\tvar arr = [];\n\t\t\tfor (var i = 0; i < count; i++) arr[i] = 0;\n\n\t\t\tthis.adjustSize(width, arr);\n\t\t\treturn arr;\n\n\t\t},\n\t\tadjustSize: function (width, parts, from, to) {\n\t\t\tif (!from)\n\t\t\t\tfrom = 0;\n\t\t\tif (to === undefined)\n\t\t\t\tto = parts.length - 1;\n\n\t\t\tvar length = to - from + 1;\n\n\t\t\tvar full = this.getSum(parts, from, to);\n\n\t\t\tfor (var i = from; i <= to; i++) {\n\t\t\t\tvar share = Math.floor(width * (full ? (parts[i] / full) : (1 / length)));\n\n\t\t\t\tfull -= parts[i];\n\t\t\t\twidth -= share;\n\t\t\t\tlength--;\n\n\t\t\t\tparts[i] += share;\n\t\t\t}\n\t\t\tparts[parts.length - 1] += width;\n\t\t},\n\t\tsortScales: function (scales) {\n\t\t\tfunction cellSize(unit, step) {\n\t\t\t\tvar d = new Date(1970, 0, 1);\n\t\t\t\treturn dateHelper.add(d, step, unit) - d;\n\t\t\t}\n\n\t\t\tscales.sort(function (a, b) {\n\t\t\t\tif (cellSize(a.unit, a.step) < cellSize(b.unit, b.step)) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else if (cellSize(a.unit, a.step) > cellSize(b.unit, b.step)) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (var i = 0; i < scales.length; i++) {\n\t\t\t\tscales[i].index = i;\n\t\t\t}\n\t\t},\n\t\tprimaryScale: function () {\n\n\t\t\tvar config = services.getService(\"templateLoader\");\n\t\t\tconfig.initTemplate(\"date_scale\", undefined, undefined, services.config(), services.templates());\n\n\t\t\treturn {\n\t\t\t\tunit: services.config().scale_unit,\n\t\t\t\tstep: services.config().step,\n\t\t\t\ttemplate: services.templates().date_scale,\n\t\t\t\tdate: services.config().date_scale,\n\t\t\t\tcss: services.templates().scale_cell_class\n\t\t\t};\n\t\t},\n\n\t\tprepareConfigs: function (scales, min_coll_width, container_width, scale_height, minDate, maxDate, rtl) {\n\t\t\tvar heights = this.splitSize(scale_height, scales.length);\n\t\t\tvar full_width = container_width;\n\n\t\t\tvar configs = [];\n\t\t\tfor (var i = scales.length - 1; i >= 0; i--) {\n\t\t\t\tvar main_scale = (i == scales.length - 1);\n\t\t\t\tvar cfg = this.initScaleConfig(scales[i], minDate, maxDate);\n\t\t\t\tif (main_scale) {\n\t\t\t\t\tthis.processIgnores(cfg);\n\t\t\t\t}\n\n\t\t\t\tthis.initColSizes(cfg, min_coll_width, full_width, heights[i]);\n\t\t\t\tthis.limitVisibleRange(cfg);\n\n\t\t\t\tif (main_scale) {\n\t\t\t\t\tfull_width = cfg.full_width;\n\t\t\t\t}\n\n\t\t\t\tconfigs.unshift(cfg);\n\t\t\t}\n\n\n\t\t\tfor (var i = 0; i < configs.length - 1; i++) {\n\t\t\t\tthis.alineScaleColumns(configs[configs.length - 1], configs[i]);\n\t\t\t}\n\t\t\tfor (var i = 0; i < configs.length; i++) {\n\n\t\t\t\tif(rtl){\n\t\t\t\t\tthis.reverseScale(configs[i]);\n\t\t\t\t}\n\t\t\t\tthis.setPosSettings(configs[i]);\n\t\t\t}\n\t\t\treturn configs;\n\n\t\t},\n\n\t\treverseScale: function(scale){\n\t\t\tscale.width = scale.width.reverse();\n\t\t\tscale.trace_x = scale.trace_x.reverse();\n\n\t\t\tvar indexes = scale.trace_indexes;\n\t\t\tscale.trace_indexes = {};\n\t\t\tscale.trace_index_transition = {};\n\t\t\tscale.rtl = true;\n\t\t\tfor(var i = 0; i < scale.trace_x.length; i++){\n\t\t\t\tscale.trace_indexes[scale.trace_x[i].valueOf()] = i;\n\t\t\t\tscale.trace_index_transition[indexes[scale.trace_x[i].valueOf()]] = i;\n\t\t\t}\n\t\t\treturn scale;\n\t\t},\n\n\t\tsetPosSettings: function (config) {\n\t\t\tfor (var i = 0, len = config.trace_x.length; i < len; i++) {\n\t\t\t\tconfig.left.push((config.width[i - 1] || 0) + (config.left[i - 1] || 0));\n\t\t\t}\n\t\t},\n\n\t\t_ignore_time_config: function (date, scale) {\n\n\t\t\tif (services.config().skip_off_time) {\n\t\t\t\tvar skip = true;\n\t\t\t\tvar probe = date;\n\n\t\t\t\t// check dates in case custom scale unit, e.g. {unit: \"month\", step: 3}\n\t\t\t\tfor (var i = 0; i < scale.step; i++) {\n\t\t\t\t\tif (i) {\n\t\t\t\t\t\tprobe = dateHelper.add(date, i, scale.unit);\n\t\t\t\t\t}\n\n\t\t\t\t\tskip = skip && !this.isWorkTime(probe, scale.unit);\n\t\t\t\t}\n\n\t\t\t\treturn skip;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\t//defined in an extension\n\t\tprocessIgnores: function (config) {\n\t\t\tconfig.ignore_x = {};\n\t\t\tconfig.display_count = config.count;\n\t\t},\n\t\tinitColSizes: function (config, min_col_width, full_width, line_height) {\n\t\t\tvar cont_width = full_width;\n\n\t\t\tconfig.height = line_height;\n\n\t\t\tvar column_count = config.display_count === undefined ? config.count : config.display_count;\n\n\t\t\tif (!column_count)\n\t\t\t\tcolumn_count = 1;\n\n\t\t\tconfig.col_width = Math.floor(cont_width / column_count);\n\n\t\t\tif (min_col_width) {\n\t\t\t\tif (config.col_width < min_col_width) {\n\t\t\t\t\tconfig.col_width = min_col_width;\n\t\t\t\t\tcont_width = config.col_width * column_count;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconfig.width = [];\n\t\t\tvar ignores = config.ignore_x || {};\n\t\t\tfor (var i = 0; i < config.trace_x.length; i++) {\n\t\t\t\tif (ignores[config.trace_x[i].valueOf()] || (config.display_count == config.count)) {\n\t\t\t\t\tconfig.width[i] = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// width of month columns should be proportional month duration\n\t\t\t\t\tvar width = 1;\n\t\t\t\t\tif (config.unit == \"month\") {\n\t\t\t\t\t\tvar days = Math.round((dateHelper.add(config.trace_x[i], config.step, config.unit) - config.trace_x[i]) / (1000 * 60 * 60 * 24));\n\t\t\t\t\t\twidth = days;\n\t\t\t\t\t}\n\t\t\t\t\tconfig.width[i] = width;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.adjustSize(cont_width - this.getSum(config.width)/* 1 width per column from the code above */, config.width);\n\t\t\tconfig.full_width = this.getSum(config.width);\n\t\t},\n\t\tinitScaleConfig: function (config, min_date, max_date) {\n\t\t\tvar cfg = utils.mixin({\n\t\t\t\tcount: 0,\n\t\t\t\tcol_width: 0,\n\t\t\t\tfull_width: 0,\n\t\t\t\theight: 0,\n\t\t\t\twidth: [],\n\t\t\t\tleft: [],\n\t\t\t\ttrace_x: [],\n\t\t\t\ttrace_indexes: {},\n\t\t\t\tmin_date: new Date(min_date),\n\t\t\t\tmax_date: new Date(max_date)\n\t\t\t}, config);\n\n\t\t\tthis.eachColumn(config.unit, config.step, min_date, max_date, function (date) {\n\t\t\t\tcfg.count++;\n\t\t\t\tcfg.trace_x.push(new Date(date));\n\t\t\t\tcfg.trace_indexes[date.valueOf()] = cfg.trace_x.length - 1;\n\t\t\t});\n\n\t\t\tcfg.trace_x_ascending = cfg.trace_x.slice();\n\t\t\treturn cfg;\n\t\t},\n\t\titerateScales: function (lower_scale, upper_scale, from, to, callback) {\n\t\t\tvar upper_dates = upper_scale.trace_x;\n\t\t\tvar lower_dates = lower_scale.trace_x;\n\n\t\t\tvar prev = from || 0;\n\t\t\tvar end = to || (lower_dates.length - 1);\n\t\t\tvar prevUpper = 0;\n\n\n\t\t\tfor (var up = 1; up < upper_dates.length; up++) {\n\t\t\t\tvar target_index = (lower_scale.trace_indexes[+upper_dates[up]]);\n\t\t\t\tif (target_index !== undefined && target_index <= end) {\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tcallback.apply(this, [prevUpper, up, prev, target_index]);\n\t\t\t\t\t}\n\t\t\t\t\tprev = target_index;\n\t\t\t\t\tprevUpper = up;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\talineScaleColumns: function (lower_scale, upper_scale, from, to) {\n\t\t\tthis.iterateScales(lower_scale, upper_scale, from, to, function (upper_start, upper_end, lower_start, lower_end) {\n\t\t\t\tvar targetWidth = this.getSum(lower_scale.width, lower_start, lower_end - 1);\n\t\t\t\tvar actualWidth = this.getSum(upper_scale.width, upper_start, upper_end - 1);\n\t\t\t\tif (actualWidth != targetWidth) {\n\t\t\t\t\tthis.setSumWidth(targetWidth, upper_scale, upper_start, upper_end - 1);\n\t\t\t\t}\n\n\t\t\t});\n\t\t},\n\n\t\teachColumn: function (unit, step, min_date, max_date, callback) {\n\t\t\tvar start = new Date(min_date),\n\t\t\t\tend = new Date(max_date);\n\t\t\tif (dateHelper[unit + \"_start\"]) {\n\t\t\t\tstart = dateHelper[unit + \"_start\"](start);\n\t\t\t}\n\n\t\t\tvar curr = new Date(start);\n\t\t\tif (+curr >= +end) {\n\t\t\t\tend = dateHelper.add(curr, step, unit);\n\t\t\t}\n\t\t\twhile (+curr < +end) {\n\t\t\t\tcallback.call(this, new Date(curr));\n\t\t\t\tvar tzOffset = curr.getTimezoneOffset();\n\t\t\t\tcurr = dateHelper.add(curr, step, unit);\n\t\t\t\tcurr = gantt._correct_dst_change(curr, tzOffset, step, unit);\n\t\t\t\tif (dateHelper[unit + '_start'])\n\t\t\t\t\tcurr = dateHelper[unit + \"_start\"](curr);\n\t\t\t}\n\t\t},\n\t\tlimitVisibleRange: function (cfg) {\n\t\t\tvar dates = cfg.trace_x;\n\n\t\t\tvar left = 0, right = cfg.width.length - 1;\n\t\t\tvar diff = 0;\n\t\t\tif (+dates[0] < +cfg.min_date && left != right) {\n\t\t\t\tvar width = Math.floor(cfg.width[0] * ((dates[1] - cfg.min_date) / (dates[1] - dates[0])));\n\t\t\t\tdiff += cfg.width[0] - width;\n\t\t\t\tcfg.width[0] = width;\n\n\t\t\t\tdates[0] = new Date(cfg.min_date);\n\t\t\t}\n\n\t\t\tvar last = dates.length - 1;\n\t\t\tvar lastDate = dates[last];\n\t\t\tvar outDate = dateHelper.add(lastDate, cfg.step, cfg.unit);\n\t\t\tif (+outDate > +cfg.max_date && last > 0) {\n\t\t\t\tvar width = cfg.width[last] - Math.floor(cfg.width[last] * ((outDate - cfg.max_date) / (outDate - lastDate)));\n\t\t\t\tdiff += cfg.width[last] - width;\n\t\t\t\tcfg.width[last] = width;\n\t\t\t}\n\n\t\t\tif (diff) {\n\t\t\t\tvar full = this.getSum(cfg.width);\n\t\t\t\tvar shared = 0;\n\t\t\t\tfor (var i = 0; i < cfg.width.length; i++) {\n\t\t\t\t\tvar share = Math.floor(diff * (cfg.width[i] / full));\n\t\t\t\t\tcfg.width[i] += share;\n\t\t\t\t\tshared += share;\n\t\t\t\t}\n\t\t\t\tthis.adjustSize(diff - shared, cfg.width);\n\t\t\t}\n\n\t\t}\n\t};\n}\n\nmodule.exports = ScaleHelper;\n","var __extends = require(\"../../../utils/extends\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\"),\n\tCell = require(\"./cell\");\n\nvar Layout = (function (_super) {\n\t\"use strict\";\n\n\t__extends(Layout, _super);\n\tfunction Layout(parent, config, factory) {\n\t\tvar _this = _super.apply(this, arguments) || this;\n\n\t\tif(parent)\n\t\t\t_this.$root = true;\n\n\t\t_this._parseConfig(config);\n\t\t_this.$name = \"layout\";\n\t\treturn _this;\n\t}\n\n\tLayout.prototype.destructor = function () {\n\t\tif (this.$container && this.$view) {\n\t\t\tdomHelpers.removeNode(this.$view);\n\t\t}\n\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tvar child = this.$cells[i];\n\t\t\tchild.destructor();\n\t\t}\n\t\tthis.$cells = [];\n\n\t\t_super.prototype.destructor.call(this);\n\t};\n\n\tLayout.prototype._resizeScrollbars = function(autosize, scrollbars){\n\t\tvar scrollChanged = false;\n\t\tvar visibleScrollbars = [],\n\t\t\thiddenSrollbars = [];\n\n\t\tfunction showScrollbar(scrollbar){\n\t\t\tscrollbar.$parent.show();\n\t\t\tscrollChanged = true;\n\t\t\tvisibleScrollbars.push(scrollbar);\n\t\t}\n\t\tfunction hideScrollbar(scrollbar){\n\t\t\tscrollbar.$parent.hide();\n\t\t\tscrollChanged = true;\n\t\t\thiddenSrollbars.push(scrollbar);\n\t\t}\n\n\t\tvar scrollbar;\n\t\tfor(var i = 0; i < scrollbars.length; i++){\n\t\t\tscrollbar = scrollbars[i];\n\n\t\t\tif(autosize[scrollbar.$config.scroll]) {\n\t\t\t\thideScrollbar(scrollbar);\n\t\t\t}else if(scrollbar.shouldHide()){\n\t\t\t\thideScrollbar(scrollbar);\n\t\t\t}else if(scrollbar.shouldShow()){\n\t\t\t\tshowScrollbar(scrollbar);\n\t\t\t}else{\n\t\t\t\tif(scrollbar.isVisible()){\n\t\t\t\t\tvisibleScrollbars.push(scrollbar);\n\t\t\t\t}else{\n\t\t\t\t\thiddenSrollbars.push(scrollbar);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar visibleGroups = {};\n\t\tfor(var i = 0; i < visibleScrollbars.length; i++){\n\t\t\tif(visibleScrollbars[i].$config.group){\n\t\t\t\tvisibleGroups[visibleScrollbars[i].$config.group] = true;\n\t\t\t}\n\t\t}\n\n\t\tfor(var i = 0; i < hiddenSrollbars.length; i++){\n\t\t\tscrollbar = hiddenSrollbars[i];\n\n\t\t\tif(scrollbar.$config.group && visibleGroups[scrollbar.$config.group]){\n\t\t\t\tshowScrollbar(scrollbar);\n\t\t\t}\n\t\t}\n\n\t\treturn scrollChanged;\n\t};\n\n\tLayout.prototype._syncCellSizes = function(groupName, newSize){\n\t\tif(!groupName)\n\t\t\treturn;\n\n\t\tvar groups = {};\n\n\t\tthis._eachChild(function(cell){\n\t\t\tif(cell.$config.group && cell.$name != \"scrollbar\" && cell.$name != \"resizer\"){\n\t\t\t\tif(!groups[cell.$config.group]){\n\t\t\t\t\tgroups[cell.$config.group] = [];\n\t\t\t\t}\n\t\t\t\tgroups[cell.$config.group].push(cell);\n\t\t\t}\n\t\t});\n\n\t\tif(groups[groupName]){\n\t\t\tthis._syncGroupSize(groups[groupName], newSize);\n\t\t}\n\t\treturn groups[groupName];\n\t};\n\n\tLayout.prototype._syncGroupSize = function(cells, newSize){\n\t\tif(!cells.length) return;\n\n\t\tvar property = cells[0].$parent._xLayout ? \"width\" : \"height\";\n\t\tvar direction = cells[0].$parent.getNextSibling(cells[0].$id) ? 1 : -1;\n\n\t\tfor(var i = 0; i < cells.length; i++){\n\t\t\tvar ownSize = cells[i].getSize();\n\n\t\t\tvar resizeSibling = direction > 0 ? cells[i].$parent.getNextSibling(cells[i].$id) : cells[i].$parent.getPrevSibling(cells[i].$id);\n\t\t\tif(resizeSibling.$name == \"resizer\"){\n\t\t\t\tresizeSibling = direction > 0 ? resizeSibling.$parent.getNextSibling(resizeSibling.$id) : resizeSibling.$parent.getPrevSibling(resizeSibling.$id);\n\t\t\t}\n\t\t\tvar siblingSize = resizeSibling.getSize();\n\n\t\t\tif(resizeSibling[property]){\n\t\t\t\tvar totalGravity = ownSize.gravity + siblingSize.gravity;\n\t\t\t\tvar totalSize = ownSize[property] + siblingSize[property];\n\t\t\t\tvar k = totalGravity / totalSize;\n\t\t\t\tcells[i].$config.gravity = k * newSize;\n\n\t\t\t\tresizeSibling.$config[property] = totalSize - newSize;\n\t\t\t\tresizeSibling.$config.gravity = totalGravity - k * newSize;\n\t\t\t}else{\n\n\n\t\t\t\tcells[i].$config[property] = newSize;\n\t\t\t}\n\n\t\t\tvar mainGrid = this.$gantt.$ui.getView(\"grid\");\n\t\t\tif(mainGrid && cells[i].$content === mainGrid && !mainGrid.$config.scrollable){\n\t\t\t\tthis.$gantt.config.grid_width = newSize;\n\t\t\t}\n\t\t}\n\t};\n\n\tLayout.prototype.resize = function(startStage){\n\t\tvar mainCall = false;\n\t\tif(this.$root && !this._resizeInProgress){\n\t\t\tthis.callEvent(\"onBeforeResize\", []);\n\t\t\tmainCall = true;\n\t\t\tthis._resizeInProgress = true;\n\t\t}\n\n\t\t_super.prototype.resize.call(this, true);\n\t\t_super.prototype.resize.call(this, false);\n\n\t\tif(mainCall){\n\n\t\t\tvar contentViews = [];\n\t\t\tcontentViews = contentViews.concat(this.getCellsByType(\"viewCell\"));\n\t\t\tcontentViews = contentViews.concat(this.getCellsByType(\"viewLayout\"));\n\t\t\tcontentViews = contentViews.concat(this.getCellsByType(\"hostCell\"));\n\n\t\t\tvar scrollbars = this.getCellsByType(\"scroller\");\n\n\t\t\tfor(var i = 0; i < contentViews.length; i++){\n\t\t\t\tif(!contentViews[i].$config.hidden)\n\t\t\t\t\tcontentViews[i].setContentSize();\n\t\t\t}\n\n\t\t\tvar autosize = this._getAutosizeMode(this.$config.autosize);\n\n\t\t\tvar scrollChanged = this._resizeScrollbars(autosize, scrollbars);\n\n\t\t\tif(this.$config.autosize){\n\t\t\t\tthis.autosize(this.$config.autosize);\n\t\t\t\tscrollChanged = true;\n\t\t\t}\n\n\t\t\tif(scrollChanged){\n\t\t\t\tthis.resize();\n\t\t\t\tfor(var i = 0; i < contentViews.length; i++){\n\t\t\t\t\tif(!contentViews[i].$config.hidden)\n\t\t\t\t\t\tcontentViews[i].setContentSize();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.callEvent(\"onResize\", []);\n\t\t}\n\t\tif(mainCall){\n\t\t\tthis._resizeInProgress = false;\n\t\t}\n\t};\n\n\tLayout.prototype._eachChild = function(code, cell){\n\t\tcell = cell || this;\n\t\tcode(cell);\n\t\tif(cell.$cells){\n\t\t\tfor(var i = 0; i < cell.$cells.length; i++){\n\t\t\t\tthis._eachChild(code, cell.$cells[i]);\n\t\t\t}\n\t\t}\n\t};\n\n\tLayout.prototype.isChild = function(view){\n\t\tvar res = false;\n\t\tthis._eachChild(function(child){\n\t\t\tif(child === view || child.$content === view){\n\t\t\t\tres = true;\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t};\n\n\tLayout.prototype.getCellsByType = function(type){\n\t\tvar res = [];\n\t\tif(type === this.$name){\n\t\t\tres.push(this);\n\t\t}\n\n\t\tif(this.$content && this.$content.$name == type){\n\t\t\tres.push(this.$content);\n\t\t}\n\n\t\tif(this.$cells){\n\t\t\tfor(var i = 0; i < this.$cells.length; i++){\n\t\t\t\tvar children = Layout.prototype.getCellsByType.call(this.$cells[i], type);\n\t\t\t\tif(children.length){\n\t\t\t\t\tres.push.apply(res, children);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t};\n\n\tLayout.prototype.getNextSibling = function(cellId){\n\t\tvar index = this.cellIndex(cellId);\n\t\tif(index >= 0 && this.$cells[index + 1]){\n\t\t\treturn this.$cells[index + 1];\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tLayout.prototype.getPrevSibling = function(cellId){\n\t\tvar index = this.cellIndex(cellId);\n\t\tif(index >= 0 && this.$cells[index - 1]){\n\t\t\treturn this.$cells[index - 1];\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t};\n\n\n\tLayout.prototype.cell = function (id) {\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tvar child = this.$cells[i];\n\t\t\tif (child.$id === id) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t\tvar sub = child.cell(id);\n\t\t\tif (sub) {\n\t\t\t\treturn sub;\n\t\t\t}\n\t\t}\n\t};\n\tLayout.prototype.cellIndex = function (id) {\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tif (this.$cells[i].$id === id) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t};\n\tLayout.prototype.moveView = function (view, ind) {\n\t\tif (this.$cells[ind] !== view) {\n\t\t\treturn window.alert(\"Not implemented\");\n\t\t}\n\t\telse {\n\t\t\tind += this.$config.header ? 1 : 0;\n\t\t\tvar node = this.$view;\n\t\t\tif (ind >= node.childNodes.length) {\n\t\t\t\tnode.appendChild(view.$view);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnode.insertBefore(view.$view, node.childNodes[ind]);\n\t\t\t}\n\t\t}\n\t};\n\tLayout.prototype._parseConfig = function (config) {\n\t\tthis.$cells = [];\n\t\tthis._xLayout = !config.rows;\n\t\tvar cells = config.rows || config.cols || config.views;\n\t\tfor (var i = 0; i < cells.length; i++) {\n\t\t\tvar cell = cells[i];\n\t\t\tcell.mode = this._xLayout ? \"x\" : \"y\";\n\t\t\tvar $content = this.$factory.initUI(cell, this);\n\t\t\tif(!$content){\n\t\t\t\tcells.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}else{\n\t\t\t\t$content.$parent = this;\n\t\t\t\tthis.$cells.push($content);\n\t\t\t}\n\t\t}\n\t};\n\tLayout.prototype.getCells = function () {\n\t\treturn this.$cells;\n\t};\n\tLayout.prototype.render = function () {\n\t\tvar view = domHelpers.insertNode(this.$container, this.$toHTML());\n\t\tthis.$fill(view, null);\n\t\tthis.callEvent(\"onReady\", []);\n\t\tthis.resize();\n\n\t\t// do simple repaint after the first call\n\t\tthis.render = this.resize;\n\t};\n\tLayout.prototype.$fill = function (node, parent) {\n\t\tthis.$view = node;\n\t\tthis.$parent = parent;\n\t\tvar cells = domHelpers.getChildNodes(node, \"gantt_layout_cell\");\n\t\tfor (var i = cells.length - 1; i >= 0; i--) {\n\t\t\tvar sub = this.$cells[i];\n\t\t\tsub.$fill(cells[i], this);\n\t\t\t// initially hidden cell\n\t\t\tif (sub.$config.hidden) {\n\t\t\t\tsub.$view.parentNode.removeChild(sub.$view);\n\t\t\t}\n\t\t}\n\t};\n\tLayout.prototype.$toHTML = function () {\n\t\tvar mode = this._xLayout ? \"x\" : \"y\";\n\t\tvar html = [];\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\thtml.push(this.$cells[i].$toHTML());\n\t\t}\n\t\treturn _super.prototype.$toHTML.call(this, html.join(\"\"), (this.$root ? \"gantt_layout_root \" : \"\") + \"gantt_layout gantt_layout_\" + mode);\n\t};\n\n\tLayout.prototype.getContentSize = function(mode){\n\t\tvar contentWidth = 0,\n\t\t\tcontentHeight = 0;\n\n\t\tvar cellSize, cell, borders;\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tcell = this.$cells[i];\n\t\t\tif(cell.$config.hidden)\n\t\t\t\tcontinue;\n\n\t\t\tcellSize = cell.getContentSize(mode);\n\n\t\t\tif(cell.$config.view === \"scrollbar\" && mode[cell.$config.scroll]){\n\t\t\t\tcellSize.height = 0;\n\t\t\t\tcellSize.width = 0;\n\t\t\t}\n\n\t\t\tif(cell.$config.resizer){\n\t\t\t\tif(this._xLayout){\n\t\t\t\t\tcellSize.height = 0;\n\t\t\t\t}else{\n\t\t\t\t\tcellSize.width = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tborders = cell._getBorderSizes();\n\n\t\t\tif(this._xLayout){\n\t\t\t\tcontentWidth += (cellSize.width + borders.horizontal);\n\t\t\t\tcontentHeight = Math.max(contentHeight, (cellSize.height + borders.vertical));\n\t\t\t}else{\n\t\t\t\tcontentWidth = Math.max(contentWidth, cellSize.width + borders.horizontal);\n\t\t\t\tcontentHeight += cellSize.height + borders.vertical;\n\t\t\t}\n\t\t}\n\n\t\tborders = this._getBorderSizes();\n\t\tcontentWidth += borders.horizontal;\n\t\tcontentHeight += borders.vertical;\n\n\t\tif(this.$root){\n\t\t\tcontentWidth += 1;\n\t\t\tcontentHeight += 1;\n\t\t}\n\n\t\treturn {\n\t\t\twidth: contentWidth,\n\t\t\theight: contentHeight\n\t\t};\n\t};\n\n\tLayout.prototype._cleanElSize = function(value){\n\t\treturn ((value || \"\").toString().replace(\"px\", \"\") * 1 || 0);\n\t};\n\tLayout.prototype._getBoxStyles = function(div){\n\t\tvar computed = null;\n\t\tif(window.getComputedStyle){\n\t\t\tcomputed = window.getComputedStyle(div, null);\n\t\t}else{\n\t\t\t//IE with elem.currentStyle does not calculate sizes from %, so will use the default approach\n\t\t\tcomputed = {\n\t\t\t\t\"width\":div.clientWidth,\n\t\t\t\t\"height\":div.clientHeight\n\t\t\t};\n\t\t}\n\t\tvar properties = [\n\t\t\t\"width\",\n\t\t\t\"height\",\n\n\t\t\t\"paddingTop\",\n\t\t\t\"paddingBottom\",\n\t\t\t\"paddingLeft\",\n\t\t\t\"paddingRight\",\n\n\t\t\t\"borderLeftWidth\",\n\t\t\t\"borderRightWidth\",\n\t\t\t\"borderTopWidth\",\n\t\t\t\"borderBottomWidth\"\n\t\t];\n\t\tvar styles = {\n\t\t\tboxSizing:(computed.boxSizing == \"border-box\")\n\t\t};\n\n\t\tif(computed.MozBoxSizing){\n\t\t\tstyles.boxSizing = (computed.MozBoxSizing == \"border-box\");\n\t\t}\n\t\tfor(var i =0; i < properties.length; i++){\n\t\t\tstyles[properties[i]] = computed[properties[i]] ? this._cleanElSize(computed[properties[i]]) : 0;\n\t\t}\n\n\n\t\tvar box = {\n\t\t\thorPaddings : (styles.paddingLeft + styles.paddingRight + styles.borderLeftWidth + styles.borderRightWidth),\n\t\t\tvertPaddings : (styles.paddingTop + styles.paddingBottom + styles.borderTopWidth + styles.borderBottomWidth),\n\t\t\tborderBox: styles.boxSizing,\n\t\t\tinnerWidth : styles.width,\n\t\t\tinnerHeight : styles.height,\n\t\t\touterWidth : styles.width,\n\t\t\touterHeight : styles.height\n\t\t};\n\n\n\t\tif(box.borderBox){\n\t\t\tbox.innerWidth -= box.horPaddings;\n\t\t\tbox.innerHeight -= box.vertPaddings;\n\t\t}else{\n\t\t\tbox.outerWidth += box.horPaddings;\n\t\t\tbox.outerHeight += box.vertPaddings;\n\t\t}\n\n\t\treturn box;\n\t};\n\n\tLayout.prototype._getAutosizeMode = function(config){\n\t\tvar res = {x:false, y:false};\n\t\tif(config === \"xy\"){\n\t\t\tres.x = res.y = true;\n\t\t}else if(config === \"y\" || config === true){\n\t\t\tres.y = true;\n\t\t}else if(config === \"x\"){\n\t\t\tres.x = true;\n\t\t}\n\t\treturn res;\n\t};\n\n\tLayout.prototype.autosize = function(mode) {\n\t\tvar res = this._getAutosizeMode(mode);\n\t\tvar boxSizes = this._getBoxStyles(this.$container);\n\t\tvar contentSizes = this.getContentSize(mode);\n\n\t\tvar node = this.$container;\n\t\tif(res.x){\n\t\t\tif(boxSizes.borderBox){\n\t\t\t\tcontentSizes.width += boxSizes.horPaddings;\n\t\t\t}\n\t\t\tnode.style.width = contentSizes.width + \"px\";\n\t\t}\n\t\tif(res.y){\n\t\t\tif(boxSizes.borderBox){\n\t\t\t\tcontentSizes.height += boxSizes.vertPaddings;\n\t\t\t}\n\t\t\tnode.style.height = contentSizes.height + \"px\";\n\t\t}\n\t};\n\n\tLayout.prototype.getSize = function () {\n\t\tthis._sizes = [];\n\t\tvar width = 0;\n\t\tvar minWidth = 0;\n\t\tvar maxWidth = 100000;\n\t\tvar height = 0;\n\t\tvar maxHeight = 100000;\n\t\tvar minHeight = 0;\n\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\n\t\t\tvar size = this._sizes[i] = this.$cells[i].getSize();\n\t\t\tif (this.$cells[i].$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (this._xLayout) {\n\t\t\t\tif (!size.width && size.minWidth) {\n\t\t\t\t\twidth += size.minWidth;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twidth += size.width;\n\t\t\t\t}\n\t\t\t\tmaxWidth += size.maxWidth;\n\t\t\t\tminWidth += size.minWidth;\n\t\t\t\theight = Math.max(height, size.height);\n\t\t\t\tmaxHeight = Math.min(maxHeight, size.maxHeight); // min of maxHeight\n\t\t\t\tminHeight = Math.max(minHeight, size.minHeight); // max of minHeight\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!size.height && size.minHeight) {\n\t\t\t\t\theight += size.minHeight;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\theight += size.height;\n\t\t\t\t}\n\t\t\t\tmaxHeight += size.maxHeight;\n\t\t\t\tminHeight += size.minHeight;\n\t\t\t\twidth = Math.max(width, size.width);\n\t\t\t\tmaxWidth = Math.min(maxWidth, size.maxWidth); // min of maxWidth\n\t\t\t\tminWidth = Math.max(minWidth, size.minWidth); // max of minWidth\n\t\t\t}\n\t\t}\n\t\tvar self = _super.prototype.getSize.call(this);\n\t\t// maxWidth\n\t\tif (self.maxWidth >= 100000) {\n\t\t\tself.maxWidth = maxWidth;\n\t\t}\n\t\t// maxHeight\n\t\tif (self.maxHeight >= 100000) {\n\t\t\tself.maxHeight = maxHeight;\n\t\t}\n\t\t// minWidth\n\t\tself.minWidth = self.minWidth !== self.minWidth ? 0 : self.minWidth;// || self.width || Math.max(minWidth, width);\n\t\t// minHeight\n\t\tself.minHeight = self.minHeight !== self.minHeight ? 0 : self.minHeight;//self.minHeight || self.height || Math.max(minHeight, height);\n\t\t// sizes with paddings and margins\n\t\tif (this._xLayout) {\n\t\t\tself.minWidth += this.$config.margin * (this.$cells.length) || 0;\n\t\t\tself.minWidth += this.$config.padding * 2 || 0;\n\t\t\tself.minHeight += (this.$config.padding * 2) || 0;\n\t\t}\n\t\telse {\n\t\t\tself.minHeight += this.$config.margin * (this.$cells.length) || 0;\n\t\t\tself.minHeight += (this.$config.padding * 2) || 0;\n\t\t}\n\t\t\n\t\treturn self;\n\t};\n\t// calc total gravity and free space\n\tLayout.prototype._calcFreeSpace = function (s, cell, xLayout) {\n\t\tvar min = xLayout ? cell.minWidth : cell.minHeight;\n\t\tvar max = xLayout ? cell.maxWidth : cell.maxWidth;\n\t\tvar side = s;\n\t\tif (!side) {\n\t\t\tside = Math.floor(this._free / this._gravity * cell.gravity);\n\t\t\tif (side > max) {\n\t\t\t\tside = max;\n\t\t\t\tthis._free -= side;\n\t\t\t\tthis._gravity -= cell.gravity;\n\t\t\t}\n\t\t\tif (side < min) {\n\t\t\t\tside = min;\n\t\t\t\tthis._free -= side;\n\t\t\t\tthis._gravity -= cell.gravity;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (side > max) {\n\t\t\t\tside = max;\n\t\t\t}\n\t\t\tif (side < min) {\n\t\t\t\tside = min;\n\t\t\t}\n\t\t\tthis._free -= side;\n\t\t}\n\t\treturn side;\n\t};\n\tLayout.prototype._calcSize = function (s, size, xLayout) {\n\t\tvar side = s;\n\t\tvar min = xLayout ? size.minWidth : size.minHeight;\n\t\tvar max = xLayout ? size.maxWidth : size.maxHeight;\n\t\tif (!side) {\n\t\t\tside = Math.floor(this._free / this._gravity * size.gravity);\n\t\t}\n\t\tif (side > max) {\n\t\t\tside = max;\n\t\t}\n\t\tif (side < min) {\n\t\t\tside = min;\n\t\t}\n\t\treturn side;\n\t};\n\n\tLayout.prototype._configureBorders = function(){\n\t\tif(this.$root){\n\t\t\tthis._setBorders([\n\t\t\t\tthis._borders.left,\n\t\t\t\tthis._borders.top,\n\t\t\t\tthis._borders.right,\n\t\t\t\tthis._borders.bottom\n\t\t\t],\n\t\t\tthis);\n\t\t}\n\n\t\tvar borderClass = this._xLayout ? this._borders.right : this._borders.bottom;\n\n\t\tvar cells = this.$cells;\n\n\t\tvar lastVisibleIndex = cells.length - 1;\n\t\tfor(var i = lastVisibleIndex; i >= 0; i--){\n\t\t\tif (!cells[i].$config.hidden) {\n\t\t\t\tlastVisibleIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < cells.length; i++) {\n\t\t\tif (cells[i].$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar lastCell = i >= lastVisibleIndex;\n\t\t\tvar borderColorClass = \"\";\n\t\t\tif(!lastCell && cells[i + 1]){\n\t\t\t\tif(cells[i + 1].$config.view == \"scrollbar\"){\n\t\t\t\t\tif(this._xLayout){\n\t\t\t\t\t\tlastCell = true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tborderColorClass = \"gantt_layout_cell_border_transparent\";\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tthis._setBorders(lastCell ? [] : [borderClass, borderColorClass], cells[i]);\n\t\t}\n\t};\n\n\tLayout.prototype._updateCellVisibility = function(){\n\t\tvar oldVisibleCells = this._visibleCells || {};\n\t\tvar firstCall = !this._visibleCells;\n\t\tvar visibleCells = {};\n\t\tvar cell;\n\t\tfor (var i = 0; i < this._sizes.length; i++) {\n\t\t\tcell = this.$cells[i];\n\n\t\t\tif (!firstCall && cell.$config.hidden && oldVisibleCells[cell.$id]) {\n\t\t\t\tcell._hide(true);\n\t\t\t}else if(!cell.$config.hidden && !oldVisibleCells[cell.$id]){\n\t\t\t\tcell._hide(false);\n\t\t\t}\n\n\t\t\tif(!cell.$config.hidden){\n\t\t\t\tvisibleCells[cell.$id] = true;\n\t\t\t}\n\t\t}\n\t\tthis._visibleCells = visibleCells;\n\t};\n\n\tLayout.prototype.setSize = function (x, y) {\n\t\tthis._configureBorders();\n\t\t_super.prototype.setSize.call(this, x, y);\n\t\ty = this.$lastSize.contentY;\n\t\tx = this.$lastSize.contentX;\n\n\t\tvar padding = (this.$config.padding || 0);\n\t\tthis.$view.style.padding = padding + \"px\";\n\t\tthis._gravity = 0;\n\t\tthis._free = this._xLayout ? x : y;\n\t\tthis._free -= padding * 2;\n\t\t// calc all gravity\n\n\t\tvar cell,\n\t\t\tsize;\n\n\t\tthis._updateCellVisibility();\n\n\t\tfor (var i = 0; i < this._sizes.length; i++) {\n\t\t\tcell = this.$cells[i];\n\n\t\t\tif (cell.$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar margin = (this.$config.margin || 0);\n\t\t\tif(cell.$name == \"resizer\" && !margin){\n\t\t\t\tmargin = -1;\n\t\t\t}\n\n\t\t\t// set margins to child cell\n\t\t\tvar cellView = cell.$view;\n\n\t\t\tvar marginSide = this._xLayout ? \"marginRight\" : \"marginBottom\";\n\t\t\tif (i !== this.$cells.length - 1) {\n\t\t\t\tcellView.style[marginSide] = margin + \"px\";\n\t\t\t\tthis._free -= margin; // calc free space without margin\n\t\t\t}\n\t\t\tsize = this._sizes[i];\n\t\t\tif (this._xLayout) {\n\t\t\t\tif (!size.width) {\n\t\t\t\t\tthis._gravity += size.gravity;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!size.height) {\n\t\t\t\t\tthis._gravity += size.gravity;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < this._sizes.length; i++) {\n\t\t\tcell = this.$cells[i];\n\n\t\t\tif (cell.$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsize = this._sizes[i];\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\t\t\tif (this._xLayout) {\n\t\t\t\tthis._calcFreeSpace(width, size, true);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._calcFreeSpace(height, size, false);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\tcell = this.$cells[i];\n\n\t\t\tif (cell.$config.hidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsize = this._sizes[i];\n\t\t\tvar dx = void 0;\n\t\t\tvar dy = void 0;\n\t\t\tif (this._xLayout) {\n\t\t\t\tdx = this._calcSize(size.width, size, true);\n\t\t\t\tdy = y - padding * 2; // layout height without paddings\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdx = x - padding * 2; // layout width without paddings\n\t\t\t\tdy = this._calcSize(size.height, size, false);\n\t\t\t}\n\n\t\t\tcell.setSize(dx, dy);\n\t\t}\n\n\t};\n\n\treturn Layout;\n}(Cell));\n\nmodule.exports = Layout;","function checkTimeout(host, updPerSecond){\n\tif (!updPerSecond)\n\t\treturn true;\n\t\n\tif (host._on_timeout)\n\t\treturn false;\n\t\n\tvar timeout = Math.ceil(1000/updPerSecond);\n\tif (timeout < 2) return true;\n\n\tsetTimeout(function(){\n\t\tdelete host._on_timeout;\n\t}, timeout);\n\n\thost._on_timeout = true;\n\treturn true;\n}\n\nmodule.exports = checkTimeout;","function extend(gantt){\n\n\tgantt.destructor = function(){\n\t\tgantt.callEvent(\"onDestroy\", []);\n\n\t\tthis.clearAll();\n\t\tthis.detachAllEvents();\n\n\t\tif(this.$root){\n\t\t\tdelete this.$root.gantt;\n\t\t}\n\n\t\tthis._eventRemoveAll();\n\t\tif(this.$layout){\n\t\t\tthis.$layout.destructor();\n\t\t}\n\n\t\tthis.resetLightbox();\n\n\t\tif(this._dp && this._dp.destructor){\n\t\t\tthis._dp.destructor();\n\t\t}\n\n\t\tthis.$services.destructor();\n\n\t\tfor(var i in this){\n\t\t\tif(i.indexOf(\"$\") === 0){\n\t\t\t\tdelete this[i];\n\t\t\t}\n\t\t}\n\t};\n}\n\nmodule.exports = extend;\n","/*\n \tasserts will be removed in final code, so you can place them anythere\n\twithout caring about performance impacts\n*/\n\nmodule.exports = function(gantt){\n\treturn function assert(check, message){\n\t\tif (!check){\n\t\t\tif(gantt.config.show_errors && gantt.callEvent(\"onError\",[message]) !== false) {\n\t\t\t\tgantt.message({type: \"error\", text: message, expire: -1});\n\n\t\t\t\t// eslint-disable-next-line no-debugger\n\t\t\t\tdebugger;\n\t\t\t}\n\t\t}\n\t};\n};","var domHelpers = require(\"../utils/dom_helpers\"),\n\thelpers = require(\"../utils/helpers\");\n\nmodule.exports = function(gantt){\n\tvar calculateScaleRange = require(\"./gantt_data_range\");\n\n\tgantt.assert = require(\"./common/assert\")(gantt);\n\n//initial initialization\n\tgantt.init = function(node, from, to){\n\t\tif(from && to){\n\t\t\tthis.config.start_date = this._min_date = new Date(from);\n\t\t\tthis.config.end_date = this._max_date = new Date(to);\n\t\t}\n\t\tthis.date.init();\n\n\t\tif (!this.config.scroll_size)\n\t\t\tthis.config.scroll_size = domHelpers.getScrollSize() || 1;\n\n\t\t//can be called only once\n\t\tthis.init = function(node){\n\t\t\tif (this.$container && this.$container.parentNode){\n\t\t\t\tthis.$container.parentNode.removeChild(this.$container);\n\t\t\t\tthis.$container = null;\n\t\t\t}\n\n\t\t\tif(this.$layout){\n\t\t\t\tthis.$layout.clear();\n\t\t\t}\n\t\t\tthis._reinit(node);\n\t\t};\n\n\t\tthis._reinit(node);\n\t};\n\n\tgantt._reinit = function(node){\n\t\tthis.callEvent(\"onBeforeGanttReady\", []);\n\t\t//this._init_tasks_range();\n\t\tthis.resetLightbox();\n\t\tthis._update_flags();\n\n\n\t\tvar config = this.$services.getService(\"templateLoader\");\n\t\tconfig.initTemplates(this);\n\n\t\tthis._clearTaskLayers();\n\t\tthis._clearLinkLayers();\n\n\t\t//this.clear\n\t\tif(this.$layout){\n\t\t\tthis.$layout.destructor();\n\t\t\tthis.$ui.reset();\n\t\t}\n\n\t\tthis.$root = domHelpers.toNode(node);\n\t\tif(this.$root){\n\t\t\tthis.$root.innerHTML = \"\";\n\t\t}\n\t\tthis.$root.gantt = this;\n\t\tcalculateScaleRange(this);\n\t\tthis.config.layout.id = \"main\";\n\t\tthis.$layout = this.$ui.createView(\"layout\", node, this.config.layout);\n\n\t\tthis.$layout.attachEvent(\"onBeforeResize\", function(){\n\t\t\tvar storeNames = gantt.$services.getService(\"datastores\");\n\t\t\tfor(var i = 0; i < storeNames.length; i++){\n\t\t\t\tgantt.getDatastore(storeNames[i]).filter();\n\t\t\t}\n\t\t});\n\n\t\tthis.$layout.attachEvent(\"onResize\", function(){\n\t\t\tgantt.refreshData();\n\t\t});\n\n\t\tthis.callEvent(\"onGanttLayoutReady\", []);\n\t\tthis.$layout.render();\n\n\t\tgantt.$container = this.$layout.$container.firstChild;\n\n\t\taddResizeListener(gantt);\n\n\t\tthis.callEvent(\"onTemplatesReady\",[]);\n\t\tthis.$mouseEvents.reset(this.$root);\n\t\tthis.callEvent(\"onGanttReady\", []);\n\n\t\tthis.render();\n\t};\n\n\tfunction addResizeListener(gantt){\n\t\tvar resizeDelay;\n\n\t\tvar containerStyles = window.getComputedStyle(gantt.$root);\n\t\tif(containerStyles.getPropertyValue(\"position\") == \"static\"){\n\t\t\tgantt.$root.style.position = \"relative\";\n\t\t}\n\n\t\tvar resizeWatcher = document.createElement('iframe');\n\t\tresizeWatcher.className = \"gantt_container_resize_watcher\";\n\t\tresizeWatcher.tabIndex = -1;\n\n\t\tgantt.$root.appendChild(resizeWatcher);\n\t\tresizeWatcher.contentWindow.addEventListener('resize', function(){ \n\t\t\tclearTimeout(resizeDelay);\n\t\t\tresizeDelay = setTimeout(function(){\n\t\t\t\tgantt.render();\n\t\t\t}, 300);\t\t\n\t\t});\n\t}\n\n\tgantt.$click={\n\t\tbuttons:{\n\t\t\t\"edit\":function(id){\n\t\t\t\tgantt.showLightbox(id);\n\t\t\t},\n\t\t\t\"delete\":function(id){\n\t\t\t\tvar question = gantt.locale.labels.confirm_deleting;\n\t\t\t\tvar title = gantt.locale.labels.confirm_deleting_title;\n\n\t\t\t\tgantt._dhtmlx_confirm(question, title, function(){\n\t\t\t\t\tif(!gantt.isTaskExists(id)){\n\t\t\t\t\t\tgantt.hideLightbox();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar task = gantt.getTask(id);\n\t\t\t\t\tif(task.$new){\n\t\t\t\t\t\tgantt.silent(function(){\n\t\t\t\t\t\t\tgantt.deleteTask(id, true);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tgantt.refreshData();\n\t\t\t\t\t}else{\n\t\t\t\t\t\tgantt.deleteTask(id);\n\t\t\t\t\t}\n\n\t\t\t\t\tgantt.hideLightbox();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n//renders self\n\tgantt.render = function(){\n\t\tthis.callEvent(\"onBeforeGanttRender\", []);\n\n\t\tif (!this.config.sort && this._sort) {\n\t\t\tthis._sort = undefined;\n\t\t}\n\n\t\tvar pos = this.getScrollState();\n\t\tvar posX = pos ? pos.x : 0;\n\t\tif(this._getHorizontalScrollbar()){\n\t\t\tvar scrollbar = this._getHorizontalScrollbar();\n\t\t\tposX = scrollbar.$config.codeScrollLeft || posX || 0;\n\t\t}\n\n\n\t\tvar visible_date = null;\n\t\tif(posX){\n\t\t\tvisible_date = gantt.dateFromPos(posX + this.config.task_scroll_offset);\n\t\t}\n\t\tcalculateScaleRange(this);\n\n\t\tthis.$layout.$config.autosize = this.config.autosize;\n\t\tthis.$layout.resize();\n\n\t\tif(this.config.preserve_scroll && pos){\n\n\t\t\tif(posX){\n\t\t\t\tvar new_pos = gantt.getScrollState();\n\t\t\t\tvar new_date = gantt.dateFromPos(new_pos.x);\n\t\t\t\tif(!(+visible_date == +new_date && new_pos.y == pos.y)){\n\t\t\t\t\tif(visible_date){\n\t\t\t\t\t\tthis.showDate(visible_date);\n\t\t\t\t\t}\n\t\t\t\t\tif(pos.y)\n\t\t\t\t\t\tgantt.scrollTo(undefined, pos.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.callEvent(\"onGanttRender\", []);\n\t};\n\n\t//TODO: add layout.resize method that wouldn't trigger data repaint\n\tgantt.setSizes = gantt.render;\n\n\tgantt.locate = function(e) {\n\t\tvar trg = domHelpers.getTargetNode(e);\n\n\t\t//ignore empty cells\n\t\tvar className = domHelpers.getClassName(trg);\n\t\tif ((className || \"\").indexOf(\"gantt_task_cell\") >= 0) return null;\n\n\t\tvar targetAttribute = arguments[1] || this.config.task_attribute;\n\n\t\tvar node = domHelpers.locateAttribute(trg, targetAttribute);\n\t\tif(node){\n\t\t\treturn node.getAttribute(targetAttribute);\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tgantt._locate_css = function(e, classname, strict){\n\t\treturn domHelpers.locateClassName(e, classname, strict);\n\t};\n\n\tgantt._locateHTML = function(e, attribute) {\n\t\treturn domHelpers.locateAttribute(e, attribute || this.config.task_attribute);\n\t};\n\n\tgantt.getTaskRowNode = function(id) {\n\t\tvar els = this.$grid_data.childNodes;\n\t\tvar attribute = this.config.task_attribute;\n\t\tfor (var i = 0; i < els.length; i++) {\n\t\t\tif (els[i].getAttribute) {\n\t\t\t\tvar value = els[i].getAttribute(attribute);\n\t\t\t\tif (value == id) return els[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tgantt.changeLightboxType = function(type){\n\t\tif(this.getLightboxType() == type)\n\t\t\treturn true;\n\t\tgantt._silent_redraw_lightbox(type);\n\t};\n\n\n\tgantt._get_link_type = function (from_start, to_start) {\n\t\tvar type = null;\n\t\tif (from_start && to_start) {\n\t\t\ttype = gantt.config.links.start_to_start;\n\t\t} else if (!from_start && to_start) {\n\t\t\ttype = gantt.config.links.finish_to_start;\n\t\t} else if (!from_start && !to_start) {\n\t\t\ttype = gantt.config.links.finish_to_finish;\n\t\t} else if (from_start && !to_start) {\n\t\t\ttype = gantt.config.links.start_to_finish;\n\t\t}\n\t\treturn type;\n\t};\n\n\tgantt.isLinkAllowed = function (from, to, from_start, to_start) {\n\t\tvar link = null;\n\t\tif (typeof(from) == \"object\") {\n\t\t\tlink = from;\n\t\t} else {\n\t\t\tlink = {source: from, target: to, type: this._get_link_type(from_start, to_start)};\n\t\t}\n\n\t\tif (!link) return false;\n\t\tif (!(link.source && link.target && link.type)) return false;\n\t\tif (link.source == link.target) return false;\n\n\t\tvar res = true;\n\t\t//any custom rules\n\t\tif (this.checkEvent(\"onLinkValidation\"))\n\t\t\tres = this.callEvent(\"onLinkValidation\", [link]);\n\n\t\treturn res;\n\t};\n\n\n\tgantt._correct_dst_change = function(date, prevOffset, step, unit){\n\t\tvar time_unit = helpers.getSecondsInUnit(unit) * step;\n\t\tif(time_unit > 60*60 && time_unit < 60*60*24){\n\t\t\t//correct dst change only if current unit is more than one hour and less than day (days have own checking), e.g. 12h\n\t\t\tvar offsetChanged = date.getTimezoneOffset() - prevOffset;\n\t\t\tif(offsetChanged){\n\t\t\t\tdate = gantt.date.add(date, offsetChanged, \"minute\");\n\t\t\t}\n\t\t}\n\t\treturn date;\n\t};\n\n\tgantt.isSplitTask = function(task){\n\t\tgantt.assert(task && task instanceof Object, \"Invalid argument <b>task</b>=\"+task+\" of gantt.isSplitTask. Task object was expected\");\n\t\treturn this.$data.tasksStore._isSplitItem(task);\n\t};\n\n\tgantt._is_icon_open_click = function(e) {\n\t\tif (!e)\n\t\t\treturn false;\n\t\tvar target = e.target || e.srcElement;\n\t\tif (!(target && target.className))\n\t\t\treturn false;\n\t\tvar className = domHelpers.getClassName(target);\n\t\tif (className.indexOf(\"gantt_tree_icon\") !== -1 && (className.indexOf(\"gantt_close\") !== -1 || className.indexOf(\"gantt_open\") !== -1))\n\t\t\treturn true;\n\t\treturn false;\n\t};\n\n};","module.exports = function(gantt) {\n\n\tgantt.config.touch_drag = 500; //nearly immediate dnd\n\tgantt.config.touch = true;\n\tgantt.config.touch_feedback = true;\n\tgantt.config.touch_feedback_duration = 1;\n\tgantt._prevent_touch_scroll = false;\n\n\n\tgantt._touch_feedback = function () {\n\t\tif (gantt.config.touch_feedback) {\n\t\t\tif (navigator.vibrate)\n\t\t\t\tnavigator.vibrate(gantt.config.touch_feedback_duration);\n\t\t}\n\t};\n\n\tgantt.attachEvent(\"onGanttReady\", gantt.bind(function(){\n\t\tif (this.config.touch != \"force\")\n\t\t\tthis.config.touch = this.config.touch &&\n\t\t\t\t((navigator.userAgent.indexOf(\"Mobile\") != -1) ||\n\t\t\t\t\t(navigator.userAgent.indexOf(\"iPad\") != -1) ||\n\t\t\t\t\t(navigator.userAgent.indexOf(\"Android\") != -1) ||\n\t\t\t\t\t(navigator.userAgent.indexOf(\"Touch\") != -1));\n\n\t\tif (this.config.touch) {\n\n\t\t\tvar touchEventsSupported = true;\n\t\t\ttry {\n\t\t\t\tdocument.createEvent(\"TouchEvent\");\n\t\t\t} catch (e) {\n\t\t\t\ttouchEventsSupported = false;\n\t\t\t}\n\n\t\t\tif (touchEventsSupported) {\n\t\t\t\tthis._touch_events([\"touchmove\", \"touchstart\", \"touchend\"], function (ev) {\n\t\t\t\t\tif (ev.touches && ev.touches.length > 1) return null;\n\t\t\t\t\tif (ev.touches[0])\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttarget: ev.target,\n\t\t\t\t\t\t\tpageX: ev.touches[0].pageX,\n\t\t\t\t\t\t\tpageY: ev.touches[0].pageY,\n\t\t\t\t\t\t\tclientX: ev.touches[0].clientX,\n\t\t\t\t\t\t\tclientY: ev.touches[0].clientY\n\t\t\t\t\t\t};\n\t\t\t\t\telse\n\t\t\t\t\t\treturn ev;\n\t\t\t\t}, function () {\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t} else if (window.navigator.pointerEnabled) {\n\t\t\t\tthis._touch_events([\"pointermove\", \"pointerdown\", \"pointerup\"], function (ev) {\n\t\t\t\t\tif (ev.pointerType == \"mouse\") return null;\n\t\t\t\t\treturn ev;\n\t\t\t\t}, function (ev) {\n\t\t\t\t\treturn (!ev || (ev.pointerType == \"mouse\" ));\n\t\t\t\t});\n\t\t\t} else if (window.navigator.msPointerEnabled) {\n\t\t\t\tthis._touch_events([\"MSPointerMove\", \"MSPointerDown\", \"MSPointerUp\"], function (ev) {\n\t\t\t\t\tif (ev.pointerType == ev.MSPOINTER_TYPE_MOUSE) return null;\n\t\t\t\t\treturn ev;\n\t\t\t\t}, function (ev) {\n\t\t\t\t\treturn (!ev || ev.pointerType == ev.MSPOINTER_TYPE_MOUSE);\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\t}, gantt));\n\n\n\tfunction getTaskDND(){\n\t\tvar _tasks_dnd;\n\t\tif(gantt.$ui.getView(\"timeline\")){\n\t\t\t_tasks_dnd = gantt.$ui.getView(\"timeline\")._tasks_dnd;\n\t\t}\n\t\treturn _tasks_dnd;\n\t}\n\n\tvar touchHandlers = [];\n\n//we can't use native scrolling, as we need to sync momentum between different parts\n//so we will block native scroll and use the custom one\n//in future we can add custom momentum\n\tgantt._touch_events = function (names, accessor, ignore) {\n\t\t//webkit on android need to be handled separately\n\t\tvar dblclicktime = 0;\n\t\tvar action_mode = false;\n\t\tvar scroll_mode = false;\n\t\tvar action_start = null;\n\t\tvar scroll_state;\n\t\tvar long_tap_timer = null;\n\t\tvar current_target = null;\n\n\n\n\t\tfor(var i = 0; i < touchHandlers.length; i++){\n\t\t\tgantt.eventRemove(touchHandlers[i][0], touchHandlers[i][1], touchHandlers[i][2]);\n\t\t}\n\t\ttouchHandlers = [];\n\n\t\t//touch move\n\t\ttouchHandlers.push([gantt.$container, names[0], function (e) {\n\t\t\tvar _tasks_dnd = getTaskDND();\n\n\t\t\t\tif (ignore(e)) return;\n\n\t\t\t\t//ignore common and scrolling moves\n\t\t\t\tif (!action_mode) return;\n\n\t\t\t\tif (long_tap_timer) clearTimeout(long_tap_timer);\n\n\t\t\t\tvar source = accessor(e);\n\t\t\t\tif (_tasks_dnd && (_tasks_dnd.drag.id || _tasks_dnd.drag.start_drag)) {\n\t\t\t\t\t_tasks_dnd.on_mouse_move(source);\n\t\t\t\t\tif (e.preventDefault)\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (!gantt._prevent_touch_scroll) {\n\t\t\t\t\tif (source && action_start) {\n\t\t\t\t\t\tvar dx = action_start.pageX - source.pageX;\n\t\t\t\t\t\tvar dy = action_start.pageY - source.pageY;\n\t\t\t\t\t\tif (!scroll_mode && (Math.abs(dx) > 5 || Math.abs(dy) > 5)) {\n\t\t\t\t\t\t\tgantt._touch_scroll_active = scroll_mode = true;\n\t\t\t\t\t\t\tdblclicktime = 0;\n\t\t\t\t\t\t\tscroll_state = gantt.getScrollState();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (scroll_mode) {\n\t\t\t\t\t\t\tgantt.scrollTo(scroll_state.x + dx, scroll_state.y + dy);\n\t\t\t\t\t\t\tvar new_scroll_state = gantt.getScrollState();\n\n\t\t\t\t\t\t\tif ((scroll_state.x != new_scroll_state.x && dy > 2 * dx) ||\n\t\t\t\t\t\t\t\t(scroll_state.y != new_scroll_state.y && dx > 2 * dy )) {\n\t\t\t\t\t\t\t\treturn block_action(e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn block_action(e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}]);\n\n\n\t\t//block touch context menu in IE10\n\t\ttouchHandlers.push([this.$container, \"contextmenu\", function (e) {\n\t\t\tif (action_mode)\n\t\t\t\treturn block_action(e);\n\t\t}]);\n\n\t\t//touch start\n\t\ttouchHandlers.push([this.$container, names[1], function (e) {\n\t\t\tif (ignore(e)) return;\n\t\t\tif (e.touches && e.touches.length > 1) {\n\t\t\t\taction_mode = false;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taction_start = accessor(e);\n\t\t\tif (!gantt._locate_css(action_start, \"gantt_hor_scroll\") && !gantt._locate_css(action_start, \"gantt_ver_scroll\")) {\n\t\t\t\taction_mode = true;\n\t\t\t}\n\t\t\tvar _tasks_dnd = getTaskDND();\n\n\t\t\t//long tap\n\t\t\tlong_tap_timer = setTimeout(function () {\n\t\t\t\tvar taskId = gantt.locate(action_start);\n\t\t\t\tif (_tasks_dnd && (taskId && !gantt._locate_css(action_start, \"gantt_link_control\") && !gantt._locate_css(action_start, \"gantt_grid_data\"))) {\n\t\t\t\t\t_tasks_dnd.on_mouse_down(action_start);\n\n\t\t\t\t\tif (_tasks_dnd.drag && _tasks_dnd.drag.start_drag) {\n\t\t\t\t\t\tcloneTaskRendered(taskId);\n\t\t\t\t\t\t_tasks_dnd._start_dnd(action_start);\n\t\t\t\t\t\tgantt._touch_drag = true;\n\n\t\t\t\t\t\tgantt.refreshTask(taskId);\n\n\t\t\t\t\t\tgantt._touch_feedback();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tlong_tap_timer = null;\n\t\t\t}, gantt.config.touch_drag);\n\t\t}]);\n\n\t\t//touch end\n\t\ttouchHandlers.push([this.$container, names[2], function (e) {\n\t\t\tif (ignore(e)) return;\n\t\t\tif (long_tap_timer) clearTimeout(long_tap_timer);\n\t\t\tgantt._touch_drag = false;\n\t\t\taction_mode = false;\n\t\t\tvar source = accessor(e);\n\n\t\t\tvar _tasks_dnd = getTaskDND();\n\n\t\t\tif(_tasks_dnd)\n\t\t\t\t_tasks_dnd.on_mouse_up(source);\n\n\t\t\tif (current_target) {\n\t\t\t\tgantt.refreshTask(gantt.locate(current_target));\n\t\t\t\tif (current_target.parentNode) {\n\t\t\t\t\tcurrent_target.parentNode.removeChild(current_target);\n\t\t\t\t\tgantt._touch_feedback();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgantt._touch_scroll_active = action_mode = scroll_mode = false;\n\t\t\tcurrent_target = null;\n\n\t\t\t//dbl-tap handling\n\t\t\tif (action_start && dblclicktime) {\n\t\t\t\tvar now = new Date();\n\t\t\t\tif ((now - dblclicktime) < 500) {\n\n\t\t\t\t\tvar mouseEvents = gantt.$services.getService(\"mouseEvents\");\n\t\t\t\t\tmouseEvents.onDoubleClick(action_start);\n\t\t\t\t\tblock_action(e);\n\t\t\t\t} else\n\t\t\t\t\tdblclicktime = now;\n\t\t\t} else {\n\t\t\t\tdblclicktime = new Date();\n\t\t\t}\n\t\t}]);\n\n\t\tfor(var i = 0; i < touchHandlers.length; i++){\n\t\t\tgantt.event(touchHandlers[i][0], touchHandlers[i][1], touchHandlers[i][2]);\n\t\t}\n\n\t\t//common helper, prevents event\n\t\tfunction block_action(e) {\n\t\t\tif (e && e.preventDefault)\n\t\t\t\te.preventDefault();\n\t\t\t(e || event).cancelBubble = true;\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction cloneTaskRendered(taskId) {\n\t\t\tvar renders = gantt._getTaskLayers();\n\t\t\tvar task = gantt.getTask(taskId);\n\t\t\tif (task && gantt.isTaskVisible(taskId)) {\n\t\t\t\tfor (var i = 0; i < renders.length; i++) {\n\t\t\t\t\ttask = renders[i].rendered[taskId];\n\t\t\t\t\tif (task && task.getAttribute(gantt.config.task_attribute) && task.getAttribute(gantt.config.task_attribute) == taskId) {\n\t\t\t\t\t\tvar copy = task.cloneNode(true);\n\t\t\t\t\t\tcurrent_target = task;\n\t\t\t\t\t\trenders[i].rendered[taskId] = copy;\n\t\t\t\t\t\ttask.style.display = \"none\";\n\t\t\t\t\t\tcopy.className += \" gantt_drag_move \";\n\t\t\t\t\t\ttask.parentNode.appendChild(copy);\n\t\t\t\t\t\t//return copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n};","module.exports = function(gantt) {\ngantt.skins[\"contrast_white\"] = {\n\tconfig:{\n\t\tgrid_width:360,\n\t\trow_height: 35,\n\t\tscale_height: 35,\n\t\tlink_line_width:2,\n\t\tlink_arrow_size:6,\n\t\tlightbox_additional_height:75\n\t},\n\t_second_column_width:100,\n\t_third_column_width:80\n};\n\n};","module.exports = function(gantt) {\ngantt.skins[\"contrast_black\"] = {\n\tconfig:{\n\t\tgrid_width:360,\n\t\trow_height: 35,\n\t\tscale_height: 35,\n\t\tlink_line_width:2,\n\t\tlink_arrow_size:6,\n\t\tlightbox_additional_height:75\n\t},\n\t_second_column_width:100,\n\t_third_column_width:80\n};\n\n};","module.exports = function(gantt) {\n\tgantt.skins.material = {\n\t\tconfig: {\n\t\t\tgrid_width: 411,\n\t\t\trow_height: 34,\n\t\t\ttask_height_offset: 6,\n\t\t\tscale_height: 36,\n\t\t\tlink_line_width: 2,\n\t\t\tlink_arrow_size: 6,\n\t\t\tlightbox_additional_height: 80\n\t\t},\n\t\t_second_column_width: 110,\n\t\t_third_column_width: 75,\n\t\t_redefine_lightbox_buttons: {\n\t\t\t\"buttons_left\": [\"dhx_delete_btn\"],\n\t\t\t\"buttons_right\": [\"dhx_save_btn\", \"dhx_cancel_btn\"]\n\t\t}\n\t};\n\n\tgantt.attachEvent(\"onAfterTaskDrag\", function (id) {\n\t\tvar t = gantt.getTaskNode(id);\n\t\tif (t) {\n\t\t\tt.className += \" gantt_drag_animation\";\n\t\t\tsetTimeout(function () {\n\t\t\t\tvar indx = t.className.indexOf(\" gantt_drag_animation\");\n\t\t\t\tif (indx > -1) {\n\t\t\t\t\tt.className = t.className.slice(0, indx);\n\t\t\t\t}\n\t\t\t}, 200);\n\t\t}\n\t});\n\n};","module.exports = function(gantt) {\n\tgantt.skins.broadway = {\n\t\tconfig: {\n\t\t\tgrid_width: 360,\n\t\t\trow_height: 35,\n\t\t\tscale_height: 35,\n\t\t\tlink_line_width: 1,\n\t\t\tlink_arrow_size: 7,\n\t\t\tlightbox_additional_height: 86\n\t\t},\n\t\t_second_column_width: 90,\n\t\t_third_column_width: 80,\n\n\t\t_lightbox_template: \"<div class='gantt_cal_ltitle'><span class='gantt_mark'>&nbsp;</span><span class='gantt_time'></span><span class='gantt_title'></span><div class='gantt_cancel_btn'></div></div><div class='gantt_cal_larea'></div>\",\n\t\t_config_buttons_left: {},\n\t\t_config_buttons_right: {\n\t\t\t\"gantt_delete_btn\": \"icon_delete\",\n\t\t\t\"gantt_save_btn\": \"icon_save\"\n\t\t}\n\t};\n};","module.exports = function(gantt) {\ngantt.skins.terrace = {\n\tconfig:{\n\t\tgrid_width:360,\n\t\trow_height: 35,\n\t\tscale_height: 35,\n\t\tlink_line_width:2,\n\t\tlink_arrow_size:6,\n\t\tlightbox_additional_height:75\n\t},\n\t_second_column_width:90,\n\t_third_column_width:70\t\t\n};\n\n};","module.exports = function(gantt) {\ngantt.skins.meadow = {\n\tconfig:{\n\t\tgrid_width:350,\n\t\trow_height: 27,\n\t\tscale_height: 30,\n\t\tlink_line_width:2,\n\t\tlink_arrow_size:6,\n\t\tlightbox_additional_height:72\n\t},\n\t_second_column_width:95,\n\t_third_column_width:80\n};\n\n};","module.exports = function(gantt) {\ngantt.skins.skyblue = {\n\tconfig:{\n\t\tgrid_width:350,\n\t\trow_height: 27,\n\t\tscale_height: 27,\n\t\tlink_line_width:1,\n\t\tlink_arrow_size:8,\n\t\tlightbox_additional_height:75\n\t},\n\t_second_column_width:95,\n\t_third_column_width:80\n};\n\n};","function _configure(col, data, force) {\n\tfor (var key in data)\n\t\tif (typeof col[key] == \"undefined\" || force)\n\t\t\tcol[key] = data[key];\n}\n\nfunction _get_skin(force, gantt) {\n\tvar skin = gantt.skin;\n\tif (!skin || force) {\n\t\tvar links = document.getElementsByTagName(\"link\");\n\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\tvar res = links[i].href.match(\"dhtmlxgantt_([a-z_]+).css\");\n\t\t\tif (res) {\n\t\t\t\tif (gantt.skins[res[1]] || !skin) {\n\t\t\t\t\tskin = res[1];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgantt.skin = skin || \"terrace\";\n\tvar skinset = gantt.skins[gantt.skin] || gantt.skins[\"terrace\"];\n\n\t//apply skin related settings\n\t_configure(gantt.config, skinset.config, force);\n\n\tvar config = gantt.getGridColumns();\n\tif (config[1] && !gantt.defined(config[1].width))\n\t\tconfig[1].width = skinset._second_column_width;\n\tif (config[2] && !gantt.defined(config[2].width))\n\t\tconfig[2].width = skinset._third_column_width;\n\t\n\tfor (var i=0; i<config.length; i++) {\n\t\tvar column = config[i];\n\t\tif (column.name == \"add\") {\n\t\t\tif(!column.width){\n\t\t\t\tcolumn.width = 44;\n\t\t\t}\n\t\t\tif (!(gantt.defined(column.min_width) && gantt.defined(column.max_width))) {\n\t\t\t\tcolumn.min_width = column.min_width || column.width;\n\t\t\t\tcolumn.max_width = column.max_width || column.width;\n\t\t\t}\n\t\t\tif (column.min_width)\n\t\t\t\tcolumn.min_width = +column.min_width;\n\t\t\tif (column.max_width)\n\t\t\t\tcolumn.max_width = +column.max_width;\n\t\t\tif (column.width) {\n\t\t\t\tcolumn.width = +column.width;\n\t\t\t\tcolumn.width = (column.min_width && column.min_width > column.width) ? column.min_width : column.width;\n\t\t\t\tcolumn.width = (column.max_width && column.max_width < column.width) ? column.max_width : column.width;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (skinset.config.task_height)\n\t\tgantt.config.task_height = skinset.config.task_height || \"full\"; \n\n\tif (skinset._lightbox_template)\n\t\tgantt._lightbox_template = skinset._lightbox_template;\n\n\tif (skinset._redefine_lightbox_buttons) {\n\t\tgantt.config.buttons_right = skinset._redefine_lightbox_buttons[\"buttons_right\"];\n\t\tgantt.config.buttons_left = skinset._redefine_lightbox_buttons[\"buttons_left\"];\n\t}\n\n\n\tgantt.resetLightbox();\n}\n\nmodule.exports = function(gantt) {\n\tif(!gantt.resetSkin){\n\t\tgantt.resetSkin = function () {\n\t\t\tthis.skin = \"\";\n\t\t\t_get_skin(true, this);\n\t\t};\n\t\tgantt.skins = {};\n\n\t\tgantt.attachEvent(\"onGanttLayoutReady\", function(){\n\t\t\t_get_skin(false, this);\n\t\t});\n\t}\n};","/*\n reuse results of functions that can be recalculated during rendering\n greatly increases the rendering speed when critical path enabled\n Sample - 94_dev/critical_path.html\n\n */\nmodule.exports = function(gantt){\n\ngantt._cached_functions = {\n\tcache: {},\n\tmode: false,\n\tcritical_path_mode: false,\n\twrap_methods : function(methods, object){\n\t\tif(object._prefetch_originals){\n\t\t\tfor(var i in object._prefetch_originals){\n\t\t\t\tobject[i] = object._prefetch_originals[i];\n\t\t\t}\n\t\t}\n\t\tobject._prefetch_originals = {};\n\t\tfor(var i = 0; i < methods.length; i++)\n\t\t\tthis.prefetch(methods[i], object);\n\n\t},\n\tprefetch : function(methodname, host){\n\t\tvar original = host[methodname];\n\t\tif(original){\n\t\t\tvar optimizer = this;\n\n\t\t\thost._prefetch_originals[methodname] = original;\n\t\t\thost[methodname] = function get_prefetched_value(){\n\n\t\t\t\tvar argumentsArray = new Array(arguments.length);\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\t\targumentsArray[i] = arguments[i];\n\t\t\t\t}\n\n\t\t\t\tif(optimizer.active){\n\t\t\t\t\tvar args = optimizer.get_arguments_hash(Array.prototype.slice.call(argumentsArray));\n\t\t\t\t\tif(!optimizer.cache[methodname]){\n\t\t\t\t\t\toptimizer.cache[methodname] = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tvar cached_values = optimizer.cache[methodname];\n\n\t\t\t\t\tif(optimizer.has_cached_value(cached_values, args)){\n\t\t\t\t\t\treturn optimizer.get_cached_value(cached_values, args);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tvar value = original.apply(this, argumentsArray);\n\t\t\t\t\t\toptimizer.cache_value(cached_values, args, value);\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn original.apply(this, argumentsArray);\n\t\t\t};\n\t\t}\n\t\treturn original;\n\t},\n\tcache_value: function(cache, arguments_hash, value){\n\t\tif(this.is_date(value))\n\t\t\tvalue = new Date(value);\n\t\tcache[arguments_hash] = value;\n\t},\n\thas_cached_value: function(cache, arguments_hash){\n\t\treturn cache.hasOwnProperty(arguments_hash);\n\t},\n\tget_cached_value: function(cache, arguments_hash){\n\t\tvar data = cache[arguments_hash];\n\n\t\t//for cached dates - return copy\n\t\tif(this.is_date(data)){\n\t\t\tdata = new Date(data);\n\t\t}\n\t\treturn data;\n\t},\n\tis_date: function(value){\n\t\treturn (value && value.getUTCDate);\n\t},\n\tget_arguments_hash:function(args){\n\t\tvar values = [];\n\t\tfor(var i = 0; i < args.length; i++){\n\t\t\tvalues.push(this.stringify_argument(args[i]));\n\t\t}\n\t\treturn \"(\" + values.join(\";\") + \")\";\n\t},\n\tstringify_argument: function(value){\n\t\t//expecting task or link, or any other data entries, dates and primitive values\n\t\tvar ret = \"\";\n\t\tif(value.id){\n\t\t\tret = value.id;\n\t\t}else if(this.is_date(value)){\n\t\t\tret = value.valueOf();\n\t\t}else{\n\t\t\tret = value;\n\t\t}\n\t\treturn ret + \"\";\n\t},\n\tactivate: function(){\n\t\tthis.clear();\n\t\tthis.active = true;\n\t},\n\tdeactivate: function(){\n\t\tthis.clear();\n\t\tthis.active = false;\n\t},\n\tclear: function(){\n\t\tthis.cache = {};\n\t},\n\n\tsetup: function(gantt){\n\t\tvar override_gantt = [];\n\n\t\tvar gantt_methods  = [\n\t\t\t'_isProjectEnd',\n\t\t\t'_getProjectEnd',\n\t\t\t'_getSlack'\n\t\t];\n\n\n\n\t\tif(this.mode == 'auto'){\n\t\t\tif(gantt.config.highlight_critical_path){\n\t\t\t\toverride_gantt = gantt_methods;\n\t\t\t}\n\t\t}else if(this.mode === true){\n\t\t\toverride_gantt = gantt_methods;\n\t\t}\n\n\t\tthis.wrap_methods(override_gantt, gantt);\n\n\t},\n\tupdate_if_changed: function(gantt){\n\t\tvar changed = (this.critical_path_mode != gantt.config.highlight_critical_path ||\n\t\t\t\t\t\tthis.mode !== gantt.config.optimize_render);\n\t\tif(changed){\n\t\t\tthis.critical_path_mode = gantt.config.highlight_critical_path;\n\t\t\tthis.mode = gantt.config.optimize_render;\n\t\t\tthis.setup(gantt);\n\t\t}\n\t}\n};\n\nfunction activate(){\n\tgantt._cached_functions.update_if_changed(gantt);\n\tif(!gantt._cached_functions.active){\n\t\tgantt._cached_functions.activate();\n\t}\n\treturn true;\n}\ngantt.attachEvent(\"onBeforeGanttRender\", activate);\ngantt.attachEvent(\"onBeforeDataRender\", activate);\ngantt.attachEvent(\"onBeforeSmartRender\",  function(){\n\tactivate();\n});\ngantt.attachEvent(\"onBeforeParse\", activate);\ngantt.attachEvent(\"onDataRender\", function(){\n\tgantt._cached_functions.deactivate();\n});\nvar deactivTimeout = null;\ngantt.attachEvent(\"onSmartRender\", function(){\n\tif(deactivTimeout)\n\t\tclearTimeout(deactivTimeout);\n\tdeactivTimeout = setTimeout(function(){\n\t\tgantt._cached_functions.deactivate();\n\t}, 1000);\n});\n\ngantt.attachEvent(\"onBeforeGanttReady\", function(){\n\tgantt._cached_functions.update_if_changed(gantt);\n\treturn true;\n});\n\n};","module.exports = function(gantt) {\n\n\tgantt.getTaskType = function (type) {\n\t\treturn \"task\";\n\t};\n};","module.exports = function(gantt) {\n\n\tgantt._extend_to_optional = function (lightbox_block) {\n\n\t\tvar duration = lightbox_block;\n\t\tvar optional_time = {\n\t\t\trender: duration.render,\n\t\t\tfocus: duration.focus,\n\t\t\tset_value: function (node, value, task, section) {\n\t\t\t\tvar mapping = gantt._resolve_default_mapping(section);\n\t\t\t\tif (!task[mapping.start_date] || (mapping.start_date == \"start_date\" && this._isAllowedUnscheduledTask(task))) {\n\t\t\t\t\toptional_time.disable(node, section);\n\t\t\t\t\tvar val = {};\n\n\t\t\t\t\tfor (var i in mapping) {\n\t\t\t\t\t\t//take default values from the time control from task start/end dates\n\t\t\t\t\t\tval[mapping[i]] = task[i];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn duration.set_value.call(gantt, node, value, val, section);//set default value\n\t\t\t\t} else {\n\t\t\t\t\toptional_time.enable(node, section);\n\t\t\t\t\treturn duration.set_value.call(gantt, node, value, task, section);\n\t\t\t\t}\n\t\t\t},\n\t\t\tget_value: function (node, task, section) {\n\t\t\t\tif (section.disabled) {\n\t\t\t\t\treturn {start_date: null};\n\t\t\t\t} else {\n\t\t\t\t\treturn duration.get_value.call(gantt, node, task, section);\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate_block: function (node, section) {\n\t\t\t\tgantt.callEvent(\"onSectionToggle\", [gantt._lightbox_id, section]);\n\t\t\t\tnode.style.display = section.disabled ? \"none\" : \"block\";\n\n\t\t\t\tif (section.button) {\n\t\t\t\t\tvar button = node.previousSibling.querySelector(\".gantt_custom_button_label\"),\n\t\t\t\t\t\tlabels = gantt.locale.labels;\n\n\t\t\t\t\tvar button_text = section.disabled ? labels[section.name + \"_enable_button\"] : labels[section.name + \"_disable_button\"];\n\n\t\t\t\t\tbutton.innerHTML = button_text;\n\t\t\t\t}\n\t\t\t\tgantt.resizeLightbox();\n\t\t\t},\n\t\t\tdisable: function (node, section) {\n\t\t\t\tsection.disabled = true;\n\t\t\t\toptional_time.update_block(node, section);\n\n\t\t\t},\n\t\t\tenable: function (node, section) {\n\t\t\t\tsection.disabled = false;\n\t\t\t\toptional_time.update_block(node, section);\n\t\t\t},\n\t\t\tbutton_click: function (index, el, section, container) {\n\t\t\t\tif (gantt.callEvent(\"onSectionButton\", [gantt._lightbox_id, section]) === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar config = gantt._get_typed_lightbox_config()[index];\n\t\t\t\tif (config.disabled) {\n\t\t\t\t\toptional_time.enable(container, config);\n\t\t\t\t} else {\n\t\t\t\t\toptional_time.disable(container, config);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn optional_time;\n\t};\n\n\tgantt.form_blocks.duration_optional = gantt._extend_to_optional(gantt.form_blocks.duration);\n\tgantt.form_blocks.time_optional = gantt._extend_to_optional(gantt.form_blocks.time);\n\n};","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./select_control\")(gantt);\n\n\tfunction ParentControl() {\n\t\tvar self = _super.apply(this, arguments) || this; \n\n\t\treturn self; \n\t}\n\n\t__extends(ParentControl, _super);\n\n\n\tParentControl.prototype.render = function(sns) {\n\t\treturn _display(sns, false);\n\t};\n\n\tParentControl.prototype.set_value = function(node, value, ev, config) {\n\t\tvar tmpDom = document.createElement(\"div\");\n\t\ttmpDom.innerHTML = _display(config, ev.id);\n\t\tvar newOptions = tmpDom.removeChild(tmpDom.firstChild);\n\t\tnode.onselect = null;\n\t\tnode.parentNode.replaceChild(newOptions, node);\n\n\t\treturn gantt.form_blocks.select.set_value.apply(gantt, [newOptions, value, ev, config]);\n\t};\n\n\tfunction _display(config, item_id) {\n\t\tvar tasks = [],\n\t\t\toptions = [];\n\t\tif (item_id) {\n\t\t\ttasks = gantt.getTaskByTime();\n\t\t\tif (config.allow_root) {\n\t\t\t\ttasks.unshift({id: gantt.config.root_id, text: config.root_label || \"\"});\n\t\t\t}\n\t\t\ttasks = _filter(tasks, config, item_id);\n\t\t\tif (config.sort) {\n\t\t\t\ttasks.sort(config.sort);\n\t\t\t}\n\t\t}\n\t\tvar text = config.template || gantt.templates.task_text;\n\t\tfor (var i = 0; i < tasks.length; i++) {\n\t\t\tvar label = text.apply(gantt, [tasks[i].start_date, tasks[i].end_date, tasks[i]]);\n\t\t\tif (label === undefined) {\n\t\t\t\tlabel = \"\";\n\t\t\t}\n\t\t\toptions.push({\n\t\t\t\tkey: tasks[i].id,\n\t\t\t\tlabel: label\n\t\t\t});\n\t\t}\n\t\tconfig.options = options;\n\t\tconfig.map_to = config.map_to || \"parent\";\n\t\treturn gantt.form_blocks.select.render.apply(this, arguments);\n\t}\n\n\tfunction _filter(options, config, item_id) {\n\t\tvar filter = config.filter || function() {\n\t\t\treturn true;\n\t\t};\n\n\t\toptions = options.slice(0);\n\n\t\tfor (var i = 0; i < options.length; i++) {\n\t\t\tvar task = options[i];\n\t\t\tif (task.id == item_id || gantt.isChildOf(task.id, item_id) || filter(task.id, task) === false) {\n\t\t\t\toptions.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\treturn options;\n\t}\n\treturn ParentControl;\n};","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction DurationControl() {\n\t\tvar self = _super.apply(this, arguments) || this; \n\n\t\treturn self; \n\t}\n\n\t__extends(DurationControl, _super);\n\n\tDurationControl.prototype.render = function(sns) {\n\t\tvar time = \"<div class='gantt_time_selects'>\" + gantt.form_blocks.getTimePicker.call(this, sns) + \"</div>\";\n\t\tvar label = gantt.locale.labels[gantt.config.duration_unit + \"s\"];\n\t\tvar singleDate = sns.single_date ? \" style='display:none'\" : \"\";\n\t\tvar readonly = sns.readonly ? \" disabled='disabled'\" : \"\";\n\t\tvar ariaAttr = gantt._waiAria.lightboxDurationInputAttrString(sns);\n\t\tvar duration = \"<div class='gantt_duration' \" + singleDate + \">\" +\n\t\t\t\"<input type='button' class='gantt_duration_dec' value='−'\" + readonly + \">\" +\n\t\t\t\"<input type='text' value='5' class='gantt_duration_value'\" + readonly + \" \" + ariaAttr + \">\" +\n\t\t\t\"<input type='button' class='gantt_duration_inc' value='+'\" + readonly + \"> \" + label + \" <span></span>\" +\n\t\t\t\"</div>\";\n\t\tvar html = \"<div style='height:\" + (sns.height || 30) + \"px;padding-top:0px;font-size:inherit;' class='gantt_section_time'>\" + time + \" \" + duration + \"</div>\";\n\t\treturn html;\n\t};\n\n\tDurationControl.prototype.set_value = function(node, value, ev, config) {\n\t\tvar cfg = config;\n\t\tvar s = node.getElementsByTagName(\"select\");\n\t\tvar inps = node.getElementsByTagName(\"input\");\n\t\tvar duration = inps[1];\n\t\tvar btns = [inps[0], inps[2]];\n\t\tvar endspan = node.getElementsByTagName(\"span\")[0];\n\t\tvar map = config._time_format_order;\n\t\tvar mapping;\n\t\tvar start_date;\n\t\tvar end_date;\n\t\tvar duration_val;\n\n\t\tfunction _calc_date() {\n\t\t\tvar start_date = _getStartDate.call(gantt, node, config);\n\t\t\tvar duration = _getDuration.call(gantt, node, config);\n\t\t\tvar end_date = gantt.calculateEndDate({start_date: start_date, duration: duration, task: ev});\n\n\t\t\tendspan.innerHTML = gantt.templates.task_date(end_date);\n\t\t}\n\n\t\tfunction _change_duration(step) {\n\t\t\tvar value = duration.value;\n\n\t\t\tvalue = parseInt(value, 10);\n\t\t\tif (window.isNaN(value))\n\t\t\t\tvalue = 0;\n\t\t\tvalue += step;\n\t\t\tif (value < 1) value = 1;\n\t\t\tduration.value = value;\n\t\t\t_calc_date();\n\t\t}\n\n\t\tbtns[0].onclick = gantt.bind(function() {\n\t\t\t_change_duration(-1 * gantt.config.duration_step);\n\t\t}, this);\n\t\tbtns[1].onclick = gantt.bind(function() {\n\t\t\t_change_duration(1 * gantt.config.duration_step);\n\t\t}, this);\n\t\ts[0].onchange = _calc_date;\n\t\ts[1].onchange = _calc_date;\n\t\ts[2].onchange = _calc_date;\n\t\tif (s[3]) s[3].onchange = _calc_date;\n\n\t\tduration.onkeydown = gantt.bind(function(e) {\n\t\t\tvar code; \n\n\t\t\te = e || window.event;\n\t\t\tcode = (e.charCode || e.keyCode || e.which);\n\t\t\t\n\t\t\tif (code == gantt.constants.KEY_CODES.DOWN) {\n\t\t\t\t_change_duration(-1 * gantt.config.duration_step);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (code == gantt.constants.KEY_CODES.UP) {\n\t\t\t\t_change_duration(1 * gantt.config.duration_step);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\twindow.setTimeout(_calc_date, 1);\n\t\t}, this);\n\n\t\tduration.onchange = gantt.bind(_calc_date, this);\n\n\t\tmapping = gantt._resolve_default_mapping(config);\n\t\tif (typeof(mapping) === \"string\") mapping = {start_date: mapping};\n\n\t\tstart_date = ev[mapping.start_date] || new Date();\n\t\tend_date = ev[mapping.end_date] || gantt.calculateEndDate({\n\t\t\tstart_date: start_date,\n\t\t\tduration: 1,\n\t\t\ttask: ev\n\t\t});\n\t\tduration_val = Math.round(ev[mapping.duration]) || gantt.calculateDuration({\n\t\t\tstart_date: start_date,\n\t\t\tend_date: end_date,\n\t\t\ttask: ev\n\t\t});\n\n\t\tgantt.form_blocks._fill_lightbox_select(s, 0, start_date, map, cfg);\n\t\tduration.value = duration_val;\n\t\t_calc_date();\n\t};\n\n\tDurationControl.prototype.get_value = function(node, ev, config) {\n\t\tvar startDate = _getStartDate(node, config);\n\t\tvar duration = _getDuration(node, config);\n\t\tvar endDate = gantt.calculateEndDate({start_date: startDate, duration: duration, task: ev});\n\n\t\tif (typeof gantt._resolve_default_mapping(config) == \"string\") {\n\t\t\treturn startDate;\n\t\t}\n\n\t\treturn {\n\t\t\tstart_date: startDate,\n\t\t\tend_date: endDate,\n\t\t\tduration: duration\n\t\t};\n\t};\n\n\tDurationControl.prototype.focus = function(node) {\n\t\tgantt._focus(node.getElementsByTagName(\"select\")[0]);\n\t};\n\n\n\tfunction _getStartDate(node, config) {\n\t\tvar s = node.getElementsByTagName(\"select\");\n\t\tvar map = config._time_format_order;\n\t\tvar hours = 0;\n\t\tvar minutes = 0;\n\n\t\tif (gantt.defined(map[3])) {\n\t\t\tvar input = s[map[3]];\n\t\t\tvar time = parseInt(input.value, 10);\n\t\t\tif (isNaN(time) && input.hasAttribute(\"data-value\")) {\n\t\t\t\ttime = parseInt(input.getAttribute(\"data-value\"), 10);\n\t\t\t}\n\n\t\t\thours = Math.floor(time / 60);\n\t\t\tminutes = time % 60;\n\t\t}\n\t\treturn new Date(s[map[2]].value, s[map[1]].value, s[map[0]].value, hours, minutes);\n\t}\n\n\tfunction _getDuration(node) {\n\t\tvar duration = node.getElementsByTagName(\"input\")[1];\n\n\t\tduration = parseInt(duration.value, 10);\n\t\tif (!duration || window.isNaN(duration)) duration = 1;\n\t\tif (duration < 0) duration *= -1;\n\t\treturn duration;\n\t}\n\n\n\treturn DurationControl; \n};","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction RadioControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\n\t\treturn self; \n\t}\n\n\t__extends(RadioControl, _super);\n\n\tRadioControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"23\") + \"px\";\n\t\tvar html = \"<div class='gantt_cal_ltext' style='height:\" + height + \";'>\";\n\n\t\tif (sns.options && sns.options.length) {\n\t\t\tfor (var i = 0; i < sns.options.length; i++) {\n\t\t\t\thtml += \"<label><input type='radio' value='\" + sns.options[i].key + \"' name='\" + sns.name + \"'>\" + sns.options[i].label + \"</label>\";\n\t\t\t}\n\t\t}\n\n\t\thtml += \"</div>\";\n\t\treturn html;\n\t};\n\n\tRadioControl.prototype.set_value = function(node, value, ev, sns) {\n\t\tvar radio;\n\n\t\tif (!sns.options || !sns.options.length) return;\n\n\t\tradio = node.querySelector(\"input[type=radio][value='\" + value + \"']\") ||\n\t\t\t\tnode.querySelector(\"input[type=radio][value='\" + sns.default_value + \"']\");\n\n\t\tif (!radio) return;\n\n\t\tif (!node._dhx_onchange && sns.onchange) {\n\t\t\tnode.onchange = sns.onchange;\n\t\t\tnode._dhx_onchange = true;\n\t\t}\n\n\t\tradio.checked = true;\n\t};\n\n\tRadioControl.prototype.get_value = function(node, ev) {\n\t\tvar result = node.querySelector(\"input[type=radio]:checked\");\n\n\t\treturn result ? result.value : \"\";\n\t};\n\n\tRadioControl.prototype.focus = function(node) {\n\t\tgantt._focus(node.querySelector(\"input[type=radio]\"));\n\t};\n\n\treturn RadioControl;\n};","var helpers = require(\"../../../utils/helpers\");\nvar __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction CheckboxControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\n\t\treturn self; \n\t}\n\n\t__extends(CheckboxControl, _super);\n\n\tCheckboxControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"23\") + \"px\";\n\t\tvar html = \"<div class='gantt_cal_ltext' style='height:\" + height + \";'>\";\n\n\t\tif (sns.options && sns.options.length) {\n\t\t\tfor (var i = 0; i < sns.options.length; i++) {\n\t\t\t\thtml += \"<label><input type='checkbox' value='\" + sns.options[i].key + \"' name='\" + sns.name + \"'>\" + sns.options[i].label + \"</label>\";\n\t\t\t}\n\t\t}\n\t\thtml += \"</div>\";\n\t\treturn html;\n\t};\n\n\tCheckboxControl.prototype.set_value = function(node, value, ev, sns) {\n\t\tvar checkboxes = Array.prototype.slice.call(node.querySelectorAll(\"input[type=checkbox]\"));\n\n\t\tif (!node._dhx_onchange && sns.onchange) {\n\t\t\tnode.onchange = sns.onchange;\n\t\t\tnode._dhx_onchange = true;\n\t\t}\n\n\t\thelpers.forEach(checkboxes, function(entry) {\n\t\t\tentry.checked = value ? value.indexOf(entry.value) >= 0 : false;\n\t\t});\n\t};\n\n\tCheckboxControl.prototype.get_value = function(node) {\n\t\treturn helpers.arrayMap(Array.prototype.slice.call(node.querySelectorAll(\"input[type=checkbox]:checked\")), function(entry) {\n\t\t\treturn entry.value;\n\t\t});\n\t};\n\n\tCheckboxControl.prototype.focus = function(node) {\n\t\tgantt._focus(node.querySelector(\"input[type=checkbox]\"));\n\t};\n\n\treturn CheckboxControl;\n};","var helpers = require(\"./helpers\");\n\nvar htmlHelpers = {\n\tgetHtmlSelect: function(options, attributes, value) {\n\t\tvar innerHTML = \"\";\n\t\tvar _this = this;\n\n\t\toptions = options || [];\n\t\t\n\t\thelpers.forEach(options, function(entry) {\n\t\t\tvar _attributes = [{ key: \"value\", value: entry.key }];\n\n\t\t\tif (value == entry.key) {\n\t\t\t\t_attributes[_attributes.length] = { key: \"selected\", value: \"selected\" };\n\t\t\t}\n\t\t\tif (entry.attributes) {\n\t\t\t\t_attributes = _attributes.concat(entry.attributes);\n\t\t\t}\n\t\t\tinnerHTML += _this.getHtmlOption({ innerHTML: entry.label }, _attributes);\n\t\t});\n\n\t\treturn _getHtmlContainer(\"select\", { innerHTML: innerHTML }, attributes);\n\t},\n\tgetHtmlOption: function(options, attributes) { return _getHtmlContainer(\"option\", options, attributes); },\n\tgetHtmlButton: function(options, attributes) { return _getHtmlContainer(\"button\", options, attributes); },\n\tgetHtmlDiv: function(options, attributes) { return _getHtmlContainer(\"div\", options, attributes); },\n\tgetHtmlLabel: function(options, attributes) { return _getHtmlContainer(\"label\", options, attributes); },\n\tgetHtmlInput: function(attributes) {\n\t\treturn \"<input\" + _getHtmlAttributes(attributes || []) + \">\";\n\t}\n};\n\nfunction _getHtmlContainer(tag, options, attributes) {\n\tvar html;\n\n\toptions = options || [];\n\t\n\thtml = \"<\" + tag + _getHtmlAttributes(attributes || []) + \">\" + (options.innerHTML || \"\") + \"</\" + tag +\">\";\n\treturn html;\n\n}\n\nfunction _getHtmlAttributes(attributes) {\n\tvar html = \"\";\n\n\thelpers.forEach(attributes, function(entry) {\n\t\thtml += \" \" + entry.key + \"='\" + entry.value + \"'\";\n\t});\n\treturn html;\n}\n\nmodule.exports = htmlHelpers;","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction TimeControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\n\t\treturn self; \n\t}\n\n\t__extends(TimeControl, _super);\n\n\n\tTimeControl.prototype.render = function(sns) {\n\t\tvar time = gantt.form_blocks.getTimePicker.call(this, sns);\n\t\tvar html = \"<div style='height:\" + (sns.height || 30) + \"px;padding-top:0px;font-size:inherit;text-align:center;' class='gantt_section_time'>\";\n\t\thtml += time;\n\n\t\tif (sns.single_date) {\n\t\t\ttime = gantt.form_blocks.getTimePicker.call(this, sns, true);\n\t\t\thtml += \"<span></span>\";\n\t\t} else {\n\t\t\thtml += \"<span style='font-weight:normal; font-size:10pt;'> &nbsp;&ndash;&nbsp; </span>\";\n\t\t}\n\n\t\thtml += time;\n\t\thtml += \"</div>\";\n\t\treturn html;\n\t};\n\n\tTimeControl.prototype.set_value = function(node, value, ev, config) {\n\t\tvar cfg = config;\n\t\tvar s = node.getElementsByTagName(\"select\");\n\t\tvar map = config._time_format_order;\n\n\t\tif (cfg.auto_end_date) {\n\t\t\tvar _update_lightbox_select = function() {\n\t\t\t\tstart_date = new Date(s[map[2]].value, s[map[1]].value, s[map[0]].value, 0, 0);\n\t\t\t\tend_date = gantt.calculateEndDate({start_date: start_date, duration: 1, task: ev});\n\t\t\t\tgantt.form_blocks._fill_lightbox_select(s, map.size, end_date, map, cfg);\n\t\t\t};\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\ts[i].onchange = _update_lightbox_select;\n\t\t\t}\n\t\t}\n\n\t\tvar mapping = gantt._resolve_default_mapping(config);\n\n\t\tif (typeof(mapping) === \"string\") mapping = {start_date: mapping};\n\n\t\tvar start_date = ev[mapping.start_date] || new Date();\n\t\tvar end_date = ev[mapping.end_date] || gantt.calculateEndDate({\n\t\t\tstart_date: start_date,\n\t\t\tduration: 1,\n\t\t\ttask: ev\n\t\t});\n\n\t\tgantt.form_blocks._fill_lightbox_select(s, 0, start_date, map, cfg);\n\t\tgantt.form_blocks._fill_lightbox_select(s, map.size, end_date, map, cfg);\n\t};\n\n\tTimeControl.prototype.get_value = function(node, ev, config) {\n\t\tvar selects = node.getElementsByTagName(\"select\");\n\t\tvar map = config._time_format_order;\n\t\tvar needSetTime = gantt.defined(map[3]);\n\t\tvar startDate;\n\n\t\tfunction _getEndDate(selects, map, needSetTime, startDate) {\n\t\t\tvar endDate = _getDate(selects, map, needSetTime, map.size);\n\n\t\t\tif (endDate <= startDate) {\n\t\t\t\treturn gantt.date.add(startDate, gantt._get_timepicker_step(), \"minute\");\n\t\t\t}\n\t\t\treturn endDate;\n\t\t}\n\n\t\tfunction _getDate(selects, map, needSetTime, mapOffset) {\n\t\t\tvar time;\n\t\t\tvar hours = 0;\n\t\t\tvar minutes = 0;\n\n\t\t\tmapOffset = mapOffset || 0;\n\n\t\t\tif (needSetTime) {\n\t\t\t\ttime = parseInt(selects[map[3] + mapOffset].value, 10);\n\t\t\t\thours = Math.floor(time / 60);\n\t\t\t\tminutes = time % 60;\n\t\t\t}\n\t\t\treturn new Date(selects[map[2] + mapOffset].value, selects[map[1] + mapOffset].value, selects[map[0] + mapOffset].value, hours, minutes);\n\t\t}\n\n\t\tstartDate = _getDate(selects, map, needSetTime);\n\n\t\tif (typeof gantt._resolve_default_mapping(config) === \"string\") {\n\t\t\treturn startDate;\n\t\t}\n\n\t\treturn {\n\t\t\tstart_date: startDate,\n\t\t\tend_date: _getEndDate(selects, map, needSetTime, startDate)\n\t\t};\n\t};\n\n\tTimeControl.prototype.focus = function(node) {\n\t\tgantt._focus(node.getElementsByTagName(\"select\")[0]);\n\t};\n\n\treturn TimeControl;\n};","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction TextareaControl() {\n\t\tvar self = _super.apply(this, arguments) || this;\n\n\t\treturn self; \n\t}\n\n\t__extends(TextareaControl, _super);\n\n\tTextareaControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"130\") + \"px\";\n\t\treturn \"<div class='gantt_cal_ltext' style='height:\" + height + \";'><textarea></textarea></div>\";\n\t};\n\n\tTextareaControl.prototype.set_value = function(node, value) {\n\t\tgantt.form_blocks.textarea._get_input(node).value = value || \"\";\n\t};\n\n\tTextareaControl.prototype.get_value = function(node) {\n\t\treturn gantt.form_blocks.textarea._get_input(node).value;\n\t};\n\n\tTextareaControl.prototype.focus = function(node) {\n\t\tvar a = gantt.form_blocks.textarea._get_input(node);\n\t\tgantt._focus(a, true);\n\t};\n\n\tTextareaControl.prototype._get_input = function(node) {\n\t\treturn node.querySelector(\"textarea\");\n\t};\n\n\treturn TextareaControl;\n};","var __extends = require(\"../../../utils/extends\");\n\nmodule.exports = function(gantt) {\n\tvar _super = require(\"./base_control\")(gantt);\n\n\tfunction TemplateControl() {\n\t\tvar self = _super.apply(this, arguments) || this; \n\t\treturn self; \n\t}\n\n\t__extends(TemplateControl, _super);\n\n\n\tTemplateControl.prototype.render = function(sns) {\n\t\tvar height = (sns.height || \"30\") + \"px\";\n\t\treturn \"<div class='gantt_cal_ltext gantt_cal_template' style='height:\" + height + \";'></div>\";\n\t};\n\n\tTemplateControl.prototype.set_value = function(node, value) {\n\t\tnode.innerHTML = value || \"\";\n\t};\n\n\tTemplateControl.prototype.get_value = function(node) {\n\t\treturn node.innerHTML || \"\";\n\t};\n\n\tTemplateControl.prototype.focus = function() {};\n\n\treturn TemplateControl;\n};","module.exports = function(gantt) {\n\tvar domHelpers = require(\"../../utils/dom_helpers\");\n\tvar helpers = require(\"../../utils/helpers\");\n\n\tvar TemplateControl = require(\"./controls/template_control\")(gantt);\n\tvar TextareaControl = require(\"./controls/textarea_control\")(gantt);\n\tvar TimeControl = require(\"./controls/time_control\")(gantt);\n\tvar SelectControl = require(\"./controls/select_control\")(gantt);\n\tvar CheckboxControl = require(\"./controls/checkbox_control\")(gantt);\n\tvar RadioControl = require(\"./controls/radio_control\")(gantt);\n\tvar DurationControl = require(\"./controls/duration_control\")(gantt);\n\tvar ParentControl = require(\"./controls/parent_control\")(gantt);\n\tvar ResourcesControl = require(\"./controls/resources_control\")(gantt);\n\n\n\tgantt._lightbox_methods = {};\n\tgantt._lightbox_template = \"<div class='gantt_cal_ltitle'><span class='gantt_mark'>&nbsp;</span><span class='gantt_time'></span><span class='gantt_title'></span></div><div class='gantt_cal_larea'></div>\";\n\n\n\t//TODO: gantt._lightbox_id is changed from data.js and accessed from autoscheduling, check if it can be removed from gantt object\n\tvar state = gantt.$services.getService(\"state\");\n\tstate.registerProvider(\"lightbox\", function(){\n\t\treturn {\n\t\t\tlightbox: gantt._lightbox_id\n\t\t};\n\t});\n\n\tgantt.showLightbox = function(id) {\n\t\tif (!id || gantt.isReadonly(this.getTask(id))) return;\n\t\tif (!this.callEvent(\"onBeforeLightbox\", [id])) return;\n\n\t\tvar task = this.getTask(id);\n\n\t\tvar box = this.getLightbox(this.getTaskType(task.type));\n\t\tthis._center_lightbox(box);\n\t\tthis.showCover();\n\t\tthis._fill_lightbox(id, box);\n\n\t\tthis._waiAria.lightboxVisibleAttr(box);\n\n\t\tthis.callEvent(\"onLightbox\", [id]);\n\t};\n\n\tfunction _is_chart_visible(gantt) {\n\t\tvar timeline = gantt.$ui.getView(\"timeline\");\n\t\tif(timeline && timeline.isVisible()){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgantt._get_timepicker_step = function() {\n\t\tif (this.config.round_dnd_dates) {\n\t\t\tvar step;\n\t\t\tif (_is_chart_visible(this)) {\n\t\t\t\tvar scale = gantt.getScale();\n\t\t\t\tstep = (helpers.getSecondsInUnit(scale.unit) * scale.step) / 60;//timepicker step is measured in minutes\n\t\t\t}\n\n\t\t\tif(!step || step >= 60 * 24){\n\t\t\t\tstep = this.config.time_step;\n\t\t\t}\n\t\t\treturn step;\n\t\t}\n\t\treturn this.config.time_step;\n\t};\n\tgantt.getLabel = function(property, key) {\n\t\tvar sections = this._get_typed_lightbox_config();\n\t\tfor (var i = 0; i < sections.length; i++) {\n\t\t\tif (sections[i].map_to == property) {\n\t\t\t\tvar options = sections[i].options;\n\t\t\t\tfor (var j = 0; j < options.length; j++) {\n\t\t\t\t\tif (options[j].key == key) {\n\t\t\t\t\t\treturn options[j].label;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn \"\";\n\t};\n\n\tgantt.updateCollection = function(list_name, collection) {\n\t\tcollection = collection.slice(0);\n\t\tvar list = gantt.serverList(list_name);\n\t\tif (!list) return false;\n\t\tlist.splice(0, list.length);\n\t\tlist.push.apply(list, collection || []);\n\t\tgantt.resetLightbox();\n\t};\n\tgantt.getLightboxType = function() {\n\t\treturn this.getTaskType(this._lightbox_type);\n\t};\n\tgantt.getLightbox = function(type) {\n\t\tvar lightboxDiv;\n\t\tvar fullWidth;\n\t\tvar html;\n\t\tvar sns;\n\t\tvar ds;\n\t\tvar classNames = \"\";\n\n\t\tif (type === undefined)\n\t\t\ttype = this.getLightboxType();\n\n\t\tif (!this._lightbox || this.getLightboxType() != this.getTaskType(type)) {\n\t\t\tthis._lightbox_type = this.getTaskType(type);\n\t\t\tlightboxDiv = document.createElement(\"div\");\n\t\t\tclassNames = \"gantt_cal_light\";\n\t\t\tfullWidth = this._is_lightbox_timepicker();\n\n\t\t\tif (gantt.config.wide_form || fullWidth)\n\t\t\t\tclassNames += \" gantt_cal_light_wide\";\n\n\t\t\tif (fullWidth) {\n\t\t\t\tgantt.config.wide_form = true;\n\t\t\t\tclassNames += \" gantt_cal_light_full\";\n\t\t\t}\n\n\t\t\tlightboxDiv.className = classNames;\n\n\t\t\tlightboxDiv.style.visibility = \"hidden\";\n\t\t\thtml = this._lightbox_template;\n\n\t\t\thtml += getHtmlButtons(this.config.buttons_left);\n\t\t\thtml += getHtmlButtons(this.config.buttons_right, true);\n\n\t\t\tlightboxDiv.innerHTML = html;\n\n\t\t\tgantt._waiAria.lightboxAttr(lightboxDiv);\n\n\t\t\tif (gantt.config.drag_lightbox) {\n\t\t\t\tlightboxDiv.firstChild.onmousedown = gantt._ready_to_dnd;\n\t\t\t\tlightboxDiv.firstChild.onselectstart = function() {\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t\tlightboxDiv.firstChild.style.cursor = \"pointer\";\n\t\t\t\tgantt._init_dnd_events();\n\t\t\t}\n\n\t\t\tdocument.body.insertBefore(lightboxDiv, document.body.firstChild);\n\t\t\tthis._lightbox = lightboxDiv;\n\n\t\t\tsns = this._get_typed_lightbox_config(type);\n\t\t\thtml = this._render_sections(sns);\n\n\t\t\tds = lightboxDiv.querySelector(\"div.gantt_cal_larea\");\n\t\t\tds.innerHTML = html;\n\n\t\t\tbindLabelsToInputs(sns);\n\n\t\t\t//sizes\n\t\t\tthis.resizeLightbox();\n\n\t\t\tthis._init_lightbox_events(this);\n\t\t\tlightboxDiv.style.display = \"none\";\n\t\t\tlightboxDiv.style.visibility = \"visible\";\n\t\t}\n\t\treturn this._lightbox;\n\t};\n\n\tgantt._render_sections = function(sns) {\n\t\tvar html = \"\";\n\t\tfor (var i = 0; i < sns.length; i++) {\n\t\t\tvar block = this.form_blocks[sns[i].type];\n\t\t\tif (!block) continue; //ignore incorrect blocks\n\t\t\tsns[i].id = \"area_\" + this.uid();\n\n\t\t\tvar display = sns[i].hidden ? \" style='display:none'\" : \"\";\n\t\t\tvar button = \"\";\n\t\t\tif (sns[i].button) {\n\t\t\t\tbutton = \"<div class='gantt_custom_button' data-index='\" + i + \"'><div class='gantt_custom_button_\" + sns[i].button + \"'></div><div class='gantt_custom_button_label'>\" + this.locale.labels[\"button_\" + sns[i].button] + \"</div></div>\";\n\t\t\t}\n\t\t\tif (this.config.wide_form) {\n\t\t\t\thtml += \"<div class='gantt_wrap_section' \" + display + \">\";\n\t\t\t}\n\t\t\thtml += \"<div id='\" + sns[i].id + \"' class='gantt_cal_lsection'><label>\" + button + this.locale.labels[\"section_\" + sns[i].name] + \"</label></div>\" + block.render.call(this, sns[i]);\n\t\t\thtml += \"</div>\";\n\t\t}\n\t\treturn html;\n\t};\n\n\n\tgantt.resizeLightbox = function() {\n\t\tif (!this._lightbox) return;\n\n\t\tvar con = this._lightbox.childNodes[1];\n\t\tcon.style.height = \"0px\";\n\t\tcon.style.height = con.scrollHeight + \"px\";\n\t\tthis._lightbox.style.height = con.scrollHeight + this.config.lightbox_additional_height + \"px\";\n\t\tcon.style.height = con.scrollHeight + \"px\"; //it is incredible , how ugly IE can be\n\t};\n\n\tgantt._center_lightbox = function(box) {\n\t\tif (box) {\n\t\t\tbox.style.display = \"block\";\n\n\t\t\tvar scroll_top = window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop;\n\t\t\tvar scroll_left = window.pageXOffset || document.body.scrollLeft || document.documentElement.scrollLeft;\n\n\t\t\tvar view_height = window.innerHeight || document.documentElement.clientHeight;\n\n\t\t\tif (scroll_top) // if vertical scroll on window\n\t\t\t\tbox.style.top = Math.round(scroll_top + Math.max((view_height - box.offsetHeight) / 2, 0)) + \"px\";\n\t\t\telse // vertical scroll on body\n\t\t\t\tbox.style.top = Math.round(Math.max(((view_height - box.offsetHeight) / 2), 0) + 9) + \"px\"; // +9 for compatibility with auto tests\n\n\t\t\t// not quite accurate but used for compatibility reasons\n\t\t\tif (document.documentElement.scrollWidth > document.body.offsetWidth) // if horizontal scroll on the window\n\t\t\t\tbox.style.left = Math.round(scroll_left + (document.body.offsetWidth - box.offsetWidth) / 2) + \"px\";\n\t\t\telse // horizontal scroll on the body\n\t\t\t\tbox.style.left = Math.round((document.body.offsetWidth - box.offsetWidth) / 2) + \"px\";\n\t\t}\n\t};\n\tgantt.showCover = function() {\n\t\tif (this._cover) return;\n\n\t\tthis._cover = document.createElement(\"DIV\");\n\t\tthis._cover.className = \"gantt_cal_cover\";\n\t\tvar _document_height = ((document.height !== undefined) ? document.height : document.body.offsetHeight);\n\t\tvar _scroll_height = ((document.documentElement) ? document.documentElement.scrollHeight : 0);\n\t\tthis._cover.style.height = Math.max(_document_height, _scroll_height) + \"px\";\n\t\tdocument.body.appendChild(this._cover);\n\t};\n\n\n\tgantt._init_lightbox_events = function() {\n\t\tgantt.lightbox_events = {};\n\n\n\t\tgantt.lightbox_events.gantt_save_btn = function() {\n\t\t\tgantt._save_lightbox();\n\t\t};\n\n\n\t\tgantt.lightbox_events.gantt_delete_btn = function() {\n\t\t\tif (!gantt.callEvent(\"onLightboxDelete\", [gantt._lightbox_id]))\n\t\t\t\treturn;\n\n\t\t\tif (gantt.isTaskExists(gantt._lightbox_id)) {\n\t\t\t\tgantt.$click.buttons[\"delete\"](gantt._lightbox_id);\n\t\t\t} else {\n\t\t\t\tgantt.hideLightbox();\n\t\t\t}\n\n\t\t};\n\n\n\t\tgantt.lightbox_events.gantt_cancel_btn = function() {\n\t\t\tgantt._cancel_lightbox();\n\t\t};\n\n\n\t\tgantt.lightbox_events[\"default\"] = function(e, src) {\n\t\t\tif (src.getAttribute(\"data-dhx-button\")) {\n\t\t\t\tgantt.callEvent(\"onLightboxButton\", [src.className, src, e]);\n\t\t\t} else {\n\t\t\t\tvar index, block, sec;\n\n\t\t\t\tvar className = domHelpers.getClassName(src);\n\t\t\t\tif (className.indexOf(\"gantt_custom_button\") != -1) {\n\t\t\t\t\tif (className.indexOf(\"gantt_custom_button_\") != -1) {\n\t\t\t\t\t\tindex = src.parentNode.getAttribute(\"data-index\");\n\t\t\t\t\t\tsec = src;\n\t\t\t\t\t\twhile (sec && domHelpers.getClassName(sec).indexOf(\"gantt_cal_lsection\") == -1) {\n\t\t\t\t\t\t\tsec = sec.parentNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindex = src.getAttribute(\"data-index\");\n\t\t\t\t\t\tsec = src.parentNode;\n\t\t\t\t\t\tsrc = src.firstChild;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar sections = gantt._get_typed_lightbox_config();\n\n\t\t\t\tif (index) {\n\t\t\t\t\tindex = index * 1;\n\t\t\t\t\tblock = gantt.form_blocks[sections[index * 1].type];\n\t\t\t\t\tblock.button_click(index, src, sec, sec.nextSibling);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.event(gantt.getLightbox(), \"click\", function(e) {\n\t\t\te = e || window.event;\n\t\t\tvar src = e.target ? e.target : e.srcElement;\n\n\t\t\tvar className = domHelpers.getClassName(src);\n\t\t\tif (!className) {\n\t\t\t\tsrc = src.previousSibling;\n\t\t\t\tclassName = domHelpers.getClassName(src);\n\t\t\t}\n\t\t\tif (src && className && className.indexOf(\"gantt_btn_set\") === 0) {\n\t\t\t\tsrc = src.firstChild;\n\t\t\t\tclassName = domHelpers.getClassName(src);\n\t\t\t}\n\t\t\tif (src && className) {\n\t\t\t\tvar func = gantt.defined(gantt.lightbox_events[src.className]) ? gantt.lightbox_events[src.className] : gantt.lightbox_events[\"default\"];\n\t\t\t\treturn func(e, src);\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tgantt.getLightbox().onkeydown = function(e) {\n\t\t\tvar event = e || window.event;\n\t\t\tvar target = e.target || e.srcElement;\n\t\t\tvar buttonTarget = domHelpers.getClassName(target).indexOf(\"gantt_btn_set\") > -1;\n\n\t\t\tswitch ((e || event).keyCode) {\n\t\t\tcase gantt.constants.KEY_CODES.SPACE: {\n\t\t\t\tif ((e || event).shiftKey) return;\n\t\t\t\tif (buttonTarget && target.click) {\n\t\t\t\t\ttarget.click();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase gantt.keys.edit_save:\n\t\t\t\tif ((e || event).shiftKey) return;\n\t\t\t\tif (buttonTarget && target.click) {\n\t\t\t\t\ttarget.click();\n\t\t\t\t} else {\n\t\t\t\t\tgantt._save_lightbox();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase gantt.keys.edit_cancel:\n\t\t\t\tgantt._cancel_lightbox();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\t};\n\n\tgantt._cancel_lightbox = function() {\n\t\tvar task = this.getLightboxValues();\n\t\tthis.callEvent(\"onLightboxCancel\", [this._lightbox_id, task.$new]);\n\t\tif (gantt.isTaskExists(task.id) && task.$new) {\n\t\t\tthis.silent(function(){\n\t\t\t\tgantt.$data.tasksStore.removeItem(task.id);\n\t\t\t\tgantt._update_flags(task.id, null);\n\t\t\t});\n\t\t}\n\n\t\tthis.refreshData();\n\t\tthis.hideLightbox();\n\t};\n\n\tgantt._save_lightbox = function() {\n\t\tvar task = this.getLightboxValues();\n\t\tif (!this.callEvent(\"onLightboxSave\", [this._lightbox_id, task, !!task.$new]))\n\t\t\treturn;\n\n\t\tif (task.$new) {\n\t\t\tdelete task.$new;\n\t\t\tthis.addTask(task);\n\t\t}else if(this.isTaskExists(task.id)){\n\t\t\tthis.mixin(this.getTask(task.id), task, true);\n\t\t\tthis.refreshTask(task.id);\n\t\t\tthis.updateTask(task.id);\n\t\t}\n\t\tthis.refreshData();\n\n\t\t// TODO: do we need any blockable events here to prevent closing lightbox?\n\t\tthis.hideLightbox();\n\t};\n\n\tgantt._resolve_default_mapping = function(section) {\n\t\tvar mapping = section.map_to;\n\t\tvar time_controls = {\"time\": true, \"time_optional\": true, \"duration\": true, \"duration_optional\": true};\n\t\tif (time_controls[section.type]) {\n\t\t\tif (section.map_to == \"auto\") {\n\t\t\t\tmapping = {start_date: \"start_date\", end_date: \"end_date\", duration: \"duration\"};\n\t\t\t} else if (typeof(section.map_to) === \"string\") {\n\t\t\t\tmapping = {start_date: section.map_to};\n\t\t\t}\n\t\t}\n\n\t\treturn mapping;\n\t};\n\n\tgantt.getLightboxValues = function() {\n\t\tvar task = {};\n\n\t\tif (gantt.isTaskExists(this._lightbox_id)) {\n\t\t\ttask = this.mixin({}, this.getTask(this._lightbox_id));\n\t\t}\n\n\t\tvar sns = this._get_typed_lightbox_config();\n\t\tfor (var i = 0; i < sns.length; i++) {\n\t\t\tvar node = document.getElementById(sns[i].id);\n\t\t\tnode = (node ? node.nextSibling : node);\n\t\t\tvar block = this.form_blocks[sns[i].type];\n\t\t\tif (!block) continue;\n\t\t\tvar res = block.get_value.call(this, node, task, sns[i]);\n\t\t\tvar map_to = gantt._resolve_default_mapping(sns[i]);\n\t\t\tif (typeof map_to == \"string\" && map_to != \"auto\") {\n\t\t\t\ttask[map_to] = res;\n\t\t\t} else if (typeof map_to == \"object\") {\n\t\t\t\tfor (var property in map_to) {\n\t\t\t\t\tif (map_to[property])\n\t\t\t\t\t\ttask[map_to[property]] = res[property];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn task;\n\t};\n\n\n\tgantt.hideLightbox = function() {\n\t\tvar box = this.getLightbox();\n\t\tif (box) box.style.display = \"none\";\n\n\t\tthis._waiAria.lightboxHiddenAttr(box);\n\t\tthis._lightbox_id = null;\n\n\t\tthis.hideCover();\n\t\tthis.callEvent(\"onAfterLightbox\", []);\n\t};\n\tgantt.hideCover = function() {\n\t\tif (this._cover)\n\t\t\tthis._cover.parentNode.removeChild(this._cover);\n\t\tthis._cover = null;\n\t};\n\n\tgantt.resetLightbox = function() {\n\t\tif (gantt._lightbox && !gantt._custom_lightbox)\n\t\t\tgantt._lightbox.parentNode.removeChild(gantt._lightbox);\n\t\tgantt._lightbox = null;\n\t};\n\tgantt._set_lightbox_values = function(data, box) {\n\t\tvar task = data;\n\t\tvar s = box.getElementsByTagName(\"span\");\n\t\tvar lightboxHeader = [];\n\t\tif (gantt.templates.lightbox_header) {\n\t\t\tlightboxHeader.push(\"\");\n\t\t\tlightboxHeader.push(gantt.templates.lightbox_header(task.start_date, task.end_date, task));\n\t\t\ts[1].innerHTML = \"\";\n\t\t\ts[2].innerHTML = gantt.templates.lightbox_header(task.start_date, task.end_date, task);\n\t\t} else {\n\t\t\tlightboxHeader.push(this.templates.task_time(task.start_date, task.end_date, task));\n\t\t\tlightboxHeader.push((this.templates.task_text(task.start_date, task.end_date, task) || \"\").substr(0, 70)); //IE6 fix\n\t\t\ts[1].innerHTML = this.templates.task_time(task.start_date, task.end_date, task);\n\t\t\ts[2].innerHTML = (this.templates.task_text(task.start_date, task.end_date, task) || \"\").substr(0, 70); //IE6 fix\n\t\t}\n\t\ts[1].innerHTML = lightboxHeader[0];\n\t\ts[2].innerHTML = lightboxHeader[1];\n\n\t\tgantt._waiAria.lightboxHeader(box, lightboxHeader.join(\" \"));\n\n\t\tvar sns = this._get_typed_lightbox_config(this.getLightboxType());\n\t\tfor (var i = 0; i < sns.length; i++) {\n\t\t\tvar section = sns[i];\n\n\t\t\tif (!this.form_blocks[section.type]) {\n\t\t\t\tcontinue;//skip incorrect sections, same check is done during rendering\n\t\t\t}\n\n\n\t\t\tvar node = document.getElementById(section.id).nextSibling;\n\t\t\tvar block = this.form_blocks[section.type];\n\t\t\tvar map_to = gantt._resolve_default_mapping(sns[i]);\n\t\t\tvar value = this.defined(task[map_to]) ? task[map_to] : section.default_value;\n\t\t\tblock.set_value.call(gantt, node, value, task, section);\n\n\t\t\tif (section.focus)\n\t\t\t\tblock.focus.call(gantt, node);\n\t\t}\n\t\tif (data.id)\n\t\t\tgantt._lightbox_id = data.id;\n\t};\n\tgantt._fill_lightbox = function(id, box) {\n\t\tvar task = this.getTask(id);\n\t\tthis._set_lightbox_values(task, box);\n\t};\n\n\n\tgantt.getLightboxSection = function(name) {\n\t\tvar config = this._get_typed_lightbox_config();\n\t\tvar i = 0;\n\t\tfor (i; i < config.length; i++)\n\t\t\tif (config[i].name == name)\n\t\t\t\tbreak;\n\t\tvar section = config[i];\n\t\tif (!section)\n\t\t\treturn null;\n\n\t\tif (!this._lightbox)\n\t\t\tthis.getLightbox();\n\t\tvar header = document.getElementById(section.id);\n\t\tvar node = header.nextSibling;\n\n\t\tvar result = {\n\t\t\tsection: section,\n\t\t\theader: header,\n\t\t\tnode: node,\n\t\t\tgetValue: function(ev) {\n\t\t\t\treturn gantt.form_blocks[section.type].get_value.call(gantt, node, (ev || {}), section);\n\t\t\t},\n\t\t\tsetValue: function(value, ev) {\n\t\t\t\treturn gantt.form_blocks[section.type].set_value.call(gantt, node, value, (ev || {}), section);\n\t\t\t}\n\t\t};\n\n\t\tvar handler = this._lightbox_methods[\"get_\" + section.type + \"_control\"];\n\t\treturn handler ? handler(result) : result;\n\t};\n\n\tgantt._lightbox_methods.get_template_control = function(result) {\n\t\tresult.control = result.node;\n\t\treturn result;\n\t};\n\tgantt._lightbox_methods.get_select_control = function(result) {\n\t\tresult.control = result.node.getElementsByTagName(\"select\")[0];\n\t\treturn result;\n\t};\n\tgantt._lightbox_methods.get_textarea_control = function(result) {\n\t\tresult.control = result.node.getElementsByTagName(\"textarea\")[0];\n\t\treturn result;\n\t};\n\tgantt._lightbox_methods.get_time_control = function(result) {\n\t\tresult.control = result.node.getElementsByTagName(\"select\"); // array\n\t\treturn result;\n\t};\n\n\n\tgantt._init_dnd_events = function() {\n\t\tthis.event(document.body, \"mousemove\", gantt._move_while_dnd);\n\t\tthis.event(document.body, \"mouseup\", gantt._finish_dnd);\n\t\tgantt._init_dnd_events = function() {\n\t\t};\n\t};\n\tgantt._move_while_dnd = function(e) {\n\t\tif (gantt._dnd_start_lb) {\n\t\t\tif (!document.gantt_unselectable) {\n\t\t\t\tdocument.body.className += \" gantt_unselectable\";\n\t\t\t\tdocument.gantt_unselectable = true;\n\t\t\t}\n\t\t\tvar lb = gantt.getLightbox();\n\t\t\tvar now = (e && e.target) ? [e.pageX, e.pageY] : [event.clientX, event.clientY];\n\t\t\tlb.style.top = gantt._lb_start[1] + now[1] - gantt._dnd_start_lb[1] + \"px\";\n\t\t\tlb.style.left = gantt._lb_start[0] + now[0] - gantt._dnd_start_lb[0] + \"px\";\n\t\t}\n\t};\n\tgantt._ready_to_dnd = function(e) {\n\t\tvar lb = gantt.getLightbox();\n\t\tgantt._lb_start = [parseInt(lb.style.left, 10), parseInt(lb.style.top, 10)];\n\t\tgantt._dnd_start_lb = (e && e.target) ? [e.pageX, e.pageY] : [event.clientX, event.clientY];\n\t};\n\tgantt._finish_dnd = function() {\n\t\tif (gantt._lb_start) {\n\t\t\tgantt._lb_start = gantt._dnd_start_lb = false;\n\t\t\tdocument.body.className = document.body.className.replace(\" gantt_unselectable\", \"\");\n\t\t\tdocument.gantt_unselectable = false;\n\t\t}\n\t};\n\n\n\tgantt._focus = function(node, select) {\n\t\tif (node && node.focus) {\n\t\t\tif (gantt.config.touch) {\n\t\t\t\t//do not focus editor, to prevent auto-zoom\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tif (select && node.select) node.select();\n\t\t\t\t\tnode.focus();\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// silent errors\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\n\tgantt.form_blocks = {\n\t\tgetTimePicker: function(sns, hidden) {\n\t\t\tvar html = \"\";\n\t\t\tvar cfg = this.config;\n\t\t\tvar i;\n\t\t\tvar options;\n\t\t\tvar ariaAttrs;\n\t\t\tvar readonly;\n\t\t\tvar display;\n\t\t\tvar settings = {\n\t\t\t\tfirst: 0,\n\t\t\t\tlast: 24 * 60,\n\t\t\t\tdate: this.date.date_part(new Date(gantt._min_date.valueOf())),\n\t\t\t\ttimeFormat: getTimeFormat(sns)\n\t\t\t};\n\n\t\t\t// map: default order => real one\n\t\t\tsns._time_format_order = {size: 0};\n\n\t\t\tif (gantt.config.limit_time_select) {\n\t\t\t\tsettings.first = 60 * cfg.first_hour;\n\t\t\t\tsettings.last = 60 * cfg.last_hour + 1;\n\t\t\t\tsettings.date.setHours(cfg.first_hour);\n\t\t\t}\n\n\t\t\tfor (i = 0; i < settings.timeFormat.length; i++) {\n\t\t\t\t// adding spaces between selects\n\t\t\t\tif (i > 0) {\n\t\t\t\t\thtml += \" \";\n\t\t\t\t}\n\n\t\t\t\toptions = getHtmlTimePickerOptions(sns, i, settings);\n\n\t\t\t\tif (options) {\n\t\t\t\t\tariaAttrs = gantt._waiAria.lightboxSelectAttrString(settings.timeFormat[i]);\n\t\t\t\t\treadonly = sns.readonly ? \"disabled='disabled'\" : \"\";\n\t\t\t\t\tdisplay = hidden ? \" style='display:none' \" : \"\";\n\t\t\t\t\thtml += \"<select \" + readonly + display + ariaAttrs + \">\" + options + \"</select>\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn html;\n\t\t},\n\t\t_fill_lightbox_select: function(s, i, d, map) {\n\t\t\ts[i + map[0]].value = d.getDate();\n\t\t\ts[i + map[1]].value = d.getMonth();\n\t\t\ts[i + map[2]].value = d.getFullYear();\n\t\t\tif (gantt.defined(map[3])) {\n\t\t\t\tvar v = d.getHours() * 60 + d.getMinutes();\n\t\t\t\tv = Math.round(v / gantt._get_timepicker_step()) * gantt._get_timepicker_step();\n\t\t\t\tvar input = s[i + map[3]];\n\t\t\t\tinput.value = v;\n\t\t\t\t//in case option not shown\n\t\t\t\tinput.setAttribute(\"data-value\", v);\n\t\t\t}\n\t\t},\n\t\ttemplate: new TemplateControl(),\n\t\ttextarea: new TextareaControl(),\n\t\tselect: new SelectControl(),\n\t\ttime: new TimeControl(),\n\t\tduration: new DurationControl(),\n\t\tparent: new ParentControl(),\n\t\tradio: new RadioControl(),\n\t\tcheckbox: new CheckboxControl(),\n\t\tresources: new ResourcesControl()\n\t};\n\n\tgantt._is_lightbox_timepicker = function() {\n\t\tvar s = this._get_typed_lightbox_config();\n\t\tfor (var i = 0; i < s.length; i++)\n\t\t\tif (s[i].name == \"time\" && s[i].type == \"time\")\n\t\t\t\treturn true;\n\t\treturn false;\n\t};\n\n\tgantt._dhtmlx_confirm = function(message, title, callback, ok) {\n\t\tif (!message)\n\t\t\treturn callback();\n\t\tvar opts = {text: message};\n\t\tif (title)\n\t\t\topts.title = title;\n\t\tif (ok) {\n\t\t\topts.ok = ok;\n\t\t}\n\t\tif (callback) {\n\t\t\topts.callback = function(result) {\n\t\t\t\tif (result)\n\t\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\tgantt.confirm(opts);\n\t};\n\n\tfunction _get_type_name(type_value) {\n\t\tfor (var i in this.config.types) {\n\t\t\tif (this.config.types[i] == type_value) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn \"task\";\n\t}\n\n\tgantt._get_typed_lightbox_config = function(type) {\n\t\tif (type === undefined) {\n\t\t\ttype = this.getLightboxType();\n\t\t}\n\n\t\tvar field = _get_type_name.call(this, type);\n\n\t\tif (gantt.config.lightbox[field + \"_sections\"]) {\n\t\t\treturn gantt.config.lightbox[field + \"_sections\"];\n\t\t} else {\n\t\t\treturn gantt.config.lightbox.sections;\n\t\t}\n\t};\n\n\tgantt._silent_redraw_lightbox = function(type) {\n\t\tvar oldType = this.getLightboxType();\n\n\t\tif (this.getState().lightbox) {\n\t\t\tvar taskId = this.getState().lightbox;\n\t\t\tvar formData = this.getLightboxValues(),\n\t\t\t\ttask = this.copy(this.getTask(taskId));\n\n\t\t\tthis.resetLightbox();\n\n\t\t\tvar updTask = this.mixin(task, formData, true);\n\t\t\tvar box = this.getLightbox(type ? type : undefined);\n\t\t\tthis._center_lightbox(this.getLightbox());\n\t\t\tthis._set_lightbox_values(updTask, box);\n\t\t} else {\n\t\t\tthis.resetLightbox();\n\t\t\tthis.getLightbox(type ? type : undefined);\n\t\t}\n\t\tthis.callEvent(\"onLightboxChange\", [oldType, this.getLightboxType()]);\n\t};\n\n\tfunction bindLabelsToInputs(sns) {\n\t\tvar section;\n\t\tvar label;\n\t\tvar labelBlock;\n\t\tvar inputBlock;\n\t\tvar input;\n\t\tvar i;\n\n\t\tfor (i = 0; i < sns.length; i++) {\n\t\t\tsection = sns[i];\n\t\t\tlabelBlock = document.getElementById(section.id);\n\t\t\t\n\t\t\tif (!section.id || !labelBlock) continue;\n\n\t\t\tlabel = labelBlock.querySelector(\"label\");\n\t\t\tinputBlock = labelBlock.nextSibling;\n\t\t\t\n\t\t\tif (!inputBlock) continue;\n\n\t\t\tinput = inputBlock.querySelector(\"input, select, textarea\");\n\t\t\tif (input) {\n\t\t\t\tinput.id = input.id || \"input_\" + gantt.uid();\n\t\t\t\tsection.inputId = input.id;\n\t\t\t\tlabel.setAttribute(\"for\", section.inputId);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getHtmlButtons(buttons, floatRight) {\n\t\tvar button;\n\t\tvar ariaAttr;\n\t\tvar html = \"\";\n\t\tvar i;\n\n\t\tfor (i = 0; i < buttons.length; i++) {\n\t\t\t// needed to migrate from 'dhx_something' to 'gantt_something' naming in a lightbox\n\t\t\tbutton = gantt.config._migrate_buttons[buttons[i]] ? gantt.config._migrate_buttons[buttons[i]] : buttons[i];\n\n\t\t\tariaAttr = gantt._waiAria.lightboxButtonAttrString(button);\n\t\t\thtml += \"<div \" + ariaAttr + \" class='gantt_btn_set gantt_left_btn_set \" + button + \"_set'\" + (floatRight ? \" style='float:right;'\" : \"\") + \"><div dhx_button='1' data-dhx-button='1' class='\" + button + \"'></div><div>\" + gantt.locale.labels[button] + \"</div></div>\";\n\t\t}\n\t\treturn html;\n\t}\n\n\tfunction getTimeFormat(sns) {\n\t\tvar scale;\n\t\tvar unit;\n\t\tvar result;\n\n\t\tif (sns.time_format) return sns.time_format;\n\n\t\t// default order\n\t\tresult = [\"%d\", \"%m\", \"%Y\"];\n\t\tscale = gantt.getScale();\n\t\tunit = scale ? scale.unit : gantt.config.duration_unit;\n\t\tif (helpers.getSecondsInUnit(unit) < helpers.getSecondsInUnit(\"day\")) {\n\t\t\tresult.push(\"%H:%i\");\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction getHtmlTimePickerOptions(sns, index, settings) {\n\t\tvar range;\n\t\tvar offset;\n\t\tvar start_year;\n\t\tvar end_year;\n\t\tvar i;\n\t\tvar time;\n\t\tvar diff;\n\t\tvar tdate;\n\t\tvar html = \"\";\n\n\t\tswitch (settings.timeFormat[index]) {\n\t\tcase \"%Y\":\n\t\t\tsns._time_format_order[2] = index;\n\t\t\tsns._time_format_order.size++;\n\t\t\t//year\n\n\t\t\tif (sns.year_range) {\n\t\t\t\tif (!isNaN(sns.year_range)) {\n\t\t\t\t\trange = sns.year_range;\n\t\t\t\t} else if (sns.year_range.push) {\n\t\t\t\t\t// if\n\t\t\t\t\tstart_year = sns.year_range[0];\n\t\t\t\t\tend_year = sns.year_range[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trange = range || 10;\n\t\t\toffset = offset || Math.floor(range / 2);\n\t\t\tstart_year = start_year || settings.date.getFullYear() - offset;\n\t\t\tend_year = end_year || start_year + range;\n\n\t\t\tfor (i = start_year; i < end_year; i++)\n\t\t\t\thtml += \"<option value='\" + (i) + \"'>\" + (i) + \"</option>\";\n\t\t\tbreak;\n\t\tcase \"%m\":\n\t\t\tsns._time_format_order[1] = index;\n\t\t\tsns._time_format_order.size++;\n\t\t\t//month\n\t\t\tfor (i = 0; i < 12; i++)\n\t\t\t\thtml += \"<option value='\" + i + \"'>\" + gantt.locale.date.month_full[i] + \"</option>\";\n\t\t\tbreak;\n\t\tcase \"%d\":\n\t\t\tsns._time_format_order[0] = index;\n\t\t\tsns._time_format_order.size++;\n\t\t\t//days\n\t\t\tfor (i = 1; i < 32; i++)\n\t\t\t\thtml += \"<option value='\" + i + \"'>\" + i + \"</option>\";\n\t\t\tbreak;\n\t\tcase \"%H:%i\":\n\t\t\t//  var last = 24*60, first = 0;\n\t\t\tsns._time_format_order[3] = index;\n\t\t\tsns._time_format_order.size++;\n\t\t\t//hours\n\t\t\ti = settings.first;\n\t\t\ttdate = settings.date.getDate();\n\t\t\tsns._time_values = [];\n\n\t\t\twhile (i < settings.last) {\n\t\t\t\ttime = gantt.templates.time_picker(settings.date);\n\t\t\t\thtml += \"<option value='\" + i + \"'>\" + time + \"</option>\";\n\t\t\t\tsns._time_values.push(i);\n\t\t\t\tsettings.date.setTime(settings.date.valueOf() + gantt._get_timepicker_step() * 60 * 1000);\n\t\t\t\tdiff = (settings.date.getDate() != tdate) ? 1 : 0; // moved or not to the next day\n\t\t\t\ti = diff * 24 * 60 + settings.date.getHours() * 60 + settings.date.getMinutes();\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t\treturn html;\n\t}\n};","var helpers = require(\"../utils/helpers\");\n\nmodule.exports = function(gantt) {\n\n\tgantt.isUnscheduledTask = function (task) {\n\t\tgantt.assert(task && task instanceof Object, \"Invalid argument <b>task</b>=\"+task+\" of gantt.isUnscheduledTask. Task object was expected\");\n\t\treturn (!!task.unscheduled || !task.start_date);\n\t};\n\n\tgantt._isAllowedUnscheduledTask = function (task) {\n\t\treturn !!(task.unscheduled && gantt.config.show_unscheduled);\n\t};\n\n\tgantt.isTaskVisible = function (id) {\n\t\tif (!this.isTaskExists(id))\n\t\t\treturn false;\n\n\t\tvar task = this.getTask(id);\n\n\t\tvar taskStart = task.start_date ? task.start_date.valueOf() : null;\n\t\tvar taskEnd = task.end_date ? task.end_date.valueOf() : null;\n\n\t\tif (!(gantt._isAllowedUnscheduledTask(task) || (taskStart && taskEnd && taskStart <= this._max_date.valueOf() && taskEnd >= this._min_date.valueOf()))){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(gantt.getGlobalTaskIndex(id) >= 0);\n\t};\n\n\tgantt._defaultTaskDate = function (item, parent_id) {\n\t\tvar parent = (parent_id && parent_id != this.config.root_id) ? this.getTask(parent_id) : false,\n\t\t\tstartDate = '';\n\t\tif (parent) {\n\t\t\tstartDate = parent.start_date;\n\t\t} else {\n\t\t\tvar first = this.getTaskByIndex(0);\n\t\t\tstartDate = first ? (first.start_date ? first.start_date : (first.end_date ? this.calculateEndDate({\n\t\t\t\tstart_date: first.end_date,\n\t\t\t\tduration: -this.config.duration_step\n\t\t\t}) : '')) : this.config.start_date || this.getState().min_date;\n\t\t}\n\t\tgantt.assert(startDate, \"Invalid dates\");\n\t\treturn new Date(startDate);\n\t};\n\n\tgantt._set_default_task_timing = function (task) {\n\t\ttask.start_date = task.start_date || gantt._defaultTaskDate(task, this.getParent(task));\n\t\ttask.duration = task.duration || this.config.duration_step;\n\t\ttask.end_date = task.end_date || this.calculateEndDate(task);\n\t};\n\n\tgantt.createTask = function (item, parent, index) {\n\t\titem = item || {};\n\t\tif (!gantt.defined(item.id))\n\t\t\titem.id = gantt.uid();\n\n\t\tif (!item.start_date) {\n\t\t\titem.start_date = gantt._defaultTaskDate(item, parent);\n\t\t}\n\t\tif (item.text === undefined) {\n\t\t\titem.text = gantt.locale.labels.new_task;\n\t\t}\n\t\tif (item.duration === undefined) {\n\t\t\titem.duration = 1;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tthis.setParent(item, parent, true);\n\t\t\tvar parentObj = this.getTask(parent);\n\t\t\tparentObj.$open = true;\n\t\t}\n\n\t\tif (!this.callEvent(\"onTaskCreated\", [item])) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.config.details_on_create) {\n\t\t\titem.$new = true;\n\t\t\tthis.silent(function(){\n\t\t\t\tgantt.$data.tasksStore.addItem(item, index);\n\t\t\t});\n\t\t\tthis.selectTask(item.id);\n\t\t\tthis.refreshData();\n\t\t\tthis.showLightbox(item.id);\n\t\t} else {\n\t\t\tif (this.addTask(item, parent, index)) {\n\t\t\t\tthis.showTask(item.id);\n\t\t\t\tthis.selectTask(item.id);\n\t\t\t}\n\t\t}\n\t\treturn item.id;\n\t};\n\n\tgantt._update_flags = function (oldid, newid) {\n\t\t//  TODO: need a proper way to update all possible flags\n\t\tvar store = gantt.$data.tasksStore;\n\t\tif (oldid === undefined) {\n\t\t\tthis._lightbox_id = null;\n\n\t\t\tstore.silent(function(){\n\t\t\t\tstore.unselect();\n\t\t\t});\n\n\t\t\tif (this._tasks_dnd && this._tasks_dnd.drag) {\n\t\t\t\tthis._tasks_dnd.drag.id = null;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._lightbox_id == oldid)\n\t\t\t\tthis._lightbox_id = newid;\n\n\t\t\t// TODO: probably can be removed\n\t\t\tif (store.getSelectedId() == oldid) {\n\t\t\t\tstore.silent(function(){\n\t\t\t\t\tstore.unselect(oldid);\n\t\t\t\t\tstore.select(newid);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (this._tasks_dnd && this._tasks_dnd.drag && this._tasks_dnd.drag.id == oldid) {\n\t\t\t\tthis._tasks_dnd.drag.id = newid;\n\t\t\t}\n\t\t}\n\t};\n\n\tgantt._get_task_timing_mode = function (task, force) {\n\t\tvar task_type = this.getTaskType(task.type);\n\n\t\tvar state = {\n\t\t\ttype: task_type,\n\t\t\t$no_start: false,\n\t\t\t$no_end: false\n\t\t};\n\n\t\tif (!force && task_type == task.$rendered_type) {\n\t\t\tstate.$no_start = task.$no_start;\n\t\t\tstate.$no_end = task.$no_end;\n\t\t\treturn state;\n\t\t}\n\n\t\tif (task_type == this.config.types.project) {\n\t\t\t//project duration is always defined by children duration\n\t\t\tstate.$no_end = state.$no_start = true;\n\t\t} else if (task_type != this.config.types.milestone) {\n\t\t\t//tasks can have fixed duration, children duration(as projects), or one date fixed, and other defined by nested items\n\t\t\tstate.$no_end = !(task.end_date || task.duration);\n\t\t\tstate.$no_start = !task.start_date;\n\n\t\t\tif (this._isAllowedUnscheduledTask(task)) {\n\t\t\t\tstate.$no_end = state.$no_start = false;\n\t\t\t}\n\t\t}\n\n\t\treturn state;\n\t};\n\n\tgantt._init_task_timing = function (task) {\n\t\tvar task_mode = gantt._get_task_timing_mode(task, true);\n\n\t\tvar dirty = task.$rendered_type != task_mode.type;\n\n\t\tvar task_type = task_mode.type;\n\n\t\tif (dirty) {\n\t\t\ttask.$no_start = task_mode.$no_start;\n\t\t\ttask.$no_end = task_mode.$no_end;\n\t\t\ttask.$rendered_type = task_mode.type;\n\t\t}\n\n\t\tif (dirty && task_type != this.config.types.milestone) {\n\t\t\tif (task_type == this.config.types.project) {\n\t\t\t\t//project duration is always defined by children duration\n\t\t\t\tthis._set_default_task_timing(task);\n\t\t\t}\n\t\t}\n\n\t\tif (task_type == this.config.types.milestone) {\n\t\t\ttask.end_date = task.start_date;\n\t\t}\n\t\tif (task.start_date && task.end_date) {\n\t\t\ttask.duration = this.calculateDuration(task);\n\t\t}\n\n\t\tif (!task.end_date) {\n\t\t\ttask.end_date = task.start_date;\n\t\t}\n\n\t\ttask.duration = task.duration || 0;\n\t};\n\n\tgantt.isSummaryTask = function (task) {\n\t\tgantt.assert(task && task instanceof Object, \"Invalid argument <b>task</b>=\"+task+\" of gantt.isSummaryTask. Task object was expected\");\n\t\t\n\t\tvar mode = gantt._get_task_timing_mode(task);\n\n\t\treturn !!(mode.$no_end || mode.$no_start);\n\t};\n\n// downward calculation of project duration\n\tgantt.resetProjectDates = function (task) {\n\t\tvar taskMode = this._get_task_timing_mode(task);\n\t\tif (taskMode.$no_end || taskMode.$no_start) {\n\t\t\tvar dates = this.getSubtaskDates(task.id);\n\t\t\tthis._assign_project_dates(task, dates.start_date, dates.end_date);\n\t\t}\n\t};\n\n\tgantt.getSubtaskDuration = function (task_id) {\n\t\tvar res = 0,\n\t\t\troot = task_id !== undefined ? task_id : gantt.config.root_id;\n\n\t\tthis.eachTask(function (child) {\n\t\t\tif (this.getTaskType(child.type) == gantt.config.types.project || this.isUnscheduledTask(child))\n\t\t\t\treturn;\n\n\t\t\tres += child.duration;\n\t\t}, root);\n\n\t\treturn res;\n\t};\n\n\tgantt.getSubtaskDates = function (task_id) {\n\t\tvar min = null,\n\t\t\tmax = null,\n\t\t\troot = task_id !== undefined ? task_id : gantt.config.root_id;\n\n\t\tthis.eachTask(function (child) {\n\t\t\tif (this.getTaskType(child.type) == gantt.config.types.project || this.isUnscheduledTask(child))\n\t\t\t\treturn;\n\n\t\t\tif ((child.start_date && !child.$no_start) && (!min || min > child.start_date.valueOf()))\n\t\t\t\tmin = child.start_date.valueOf();\n\t\t\tif ((child.end_date && !child.$no_end) && (!max || max < child.end_date.valueOf()))\n\t\t\t\tmax = child.end_date.valueOf();\n\t\t}, root);\n\n\t\treturn {\n\t\t\tstart_date: min ? new Date(min) : null,\n\t\t\tend_date: max ? new Date(max) : null\n\t\t};\n\t};\n\n\tgantt._assign_project_dates = function (task, from, to) {\n\t\tvar taskTiming = this._get_task_timing_mode(task);\n\t\tif (taskTiming.$no_start) {\n\t\t\tif (from && from != Infinity) {\n\t\t\t\ttask.start_date = new Date(from);\n\t\t\t} else {\n\t\t\t\ttask.start_date = this._defaultTaskDate(task, this.getParent(task));\n\t\t\t}\n\t\t}\n\n\t\tif (taskTiming.$no_end) {\n\t\t\tif (to && to != -Infinity) {\n\t\t\t\ttask.end_date = new Date(to);\n\t\t\t} else {\n\t\t\t\ttask.end_date = this.calculateEndDate({\n\t\t\t\t\tstart_date: task.start_date,\n\t\t\t\t\tduration: this.config.duration_step,\n\t\t\t\t\ttask: task\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (taskTiming.$no_start || taskTiming.$no_end) {\n\t\t\tthis._init_task_timing(task);\n\t\t}\n\t};\n\n// upward calculation of project duration\n\tgantt._update_parents = function (taskId, silent) {\n\t\tif (!taskId) return;\n\n\t\tvar task = this.getTask(taskId);\n\t\tvar pid = this.getParent(task);\n\n\t\tvar taskTiming = this._get_task_timing_mode(task);\n\n\t\tvar has_changed = true;\n\n\t\tif (taskTiming.$no_start || taskTiming.$no_end) {\n\t\t\tvar oldStart = task.start_date.valueOf(),\n\t\t\t\toldEnd = task.end_date.valueOf();\n\n\t\t\tgantt.resetProjectDates(task);\n\n\t\t\t// not refresh parent projects if dates hasn't changed\n\t\t\tif (oldStart == task.start_date.valueOf() && oldEnd == task.end_date.valueOf()) {\n\t\t\t\thas_changed = false;\n\t\t\t}\n\n\t\t\tif (has_changed && !silent) {\n\t\t\t\tthis.refreshTask(task.id, true);\n\t\t\t}\n\t\t}\n\n\n\t\tif (has_changed && pid && this.isTaskExists(pid)) {\n\t\t\tthis._update_parents(pid, silent);\n\t\t}\n\t};\n\n\tgantt.roundDate = function (config) {\n\t\tvar scale = gantt.getScale();\n\n\t\tif (helpers.isDate(config)) {\n\t\t\tconfig = {\n\t\t\t\tdate: config,\n\t\t\t\tunit: scale ? scale.unit : gantt.config.duration_unit,\n\t\t\t\tstep: scale ?  scale.step : gantt.config.duration_step\n\t\t\t};\n\t\t}\n\t\tvar date = config.date,\n\t\t\tsteps = config.step,\n\t\t\tunit = config.unit;\n\n\t\tif(!scale){\n\t\t\treturn date;\n\t\t}\n\n\t\tvar upper, lower, colIndex;\n\t\tif (unit == scale.unit && steps == scale.step &&\n\t\t\t+date >= +scale.min_date && +date <= +scale.max_date) {\n\t\t\t//find date in time scale config\n\t\t\tcolIndex = Math.floor(gantt.columnIndexByDate(date));\n\n\t\t\tif (!scale.trace_x[colIndex]) {\n\t\t\t\tcolIndex -= 1;// end of time scale\n\t\t\t\tif(scale.rtl){\n\t\t\t\t\tcolIndex = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlower = new Date(scale.trace_x[colIndex]);\n\t\t\tupper = gantt.date.add(lower, steps, unit);\n\t\t} else {\n\t\t\tcolIndex = Math.floor(gantt.columnIndexByDate(date));\n\n\t\t\tupper = gantt.date[unit + \"_start\"](new Date(scale.min_date));\n\t\t\tif (scale.trace_x[colIndex]) {\n\t\t\t\tupper = gantt.date[unit + \"_start\"](scale.trace_x[colIndex]);// end of time scale\n\t\t\t}\n\n\t\t\twhile (+upper < +date) {\n\t\t\t\tupper = gantt.date[unit + \"_start\"](gantt.date.add(upper, steps, unit));\n\n\t\t\t\tvar tzOffset = upper.getTimezoneOffset();\n\n\t\t\t\tupper = gantt._correct_dst_change(upper, tzOffset, upper, unit);\n\t\t\t\tif (gantt.date[unit + '_start'])\n\t\t\t\t\tupper = gantt.date[unit + '_start'](upper);\n\t\t\t}\n\n\t\t\tlower = gantt.date.add(upper, -1 * steps, unit);\n\n\t\t}\n\t\tif (config.dir && config.dir == 'future')\n\t\t\treturn upper;\n\t\tif (config.dir && config.dir == 'past')\n\t\t\treturn lower;\n\n\t\tif (Math.abs(date - lower) < Math.abs(upper - date)) {\n\t\t\treturn lower;\n\t\t} else {\n\t\t\treturn upper;\n\t\t}\n\n\t};\n\n\tgantt.correctTaskWorkTime = function (task) {\n\t\tif (gantt.config.work_time && gantt.config.correct_work_time) {\n\t\t\tif (!this.isWorkTime(task.start_date, undefined, task)) {\n\t\t\t\ttask.start_date = this.getClosestWorkTime({date: task.start_date, dir: 'future', task: task});\n\t\t\t\ttask.end_date = this.calculateEndDate(task);\n\t\t\t} else if (!this.isWorkTime(new Date(+task.end_date - 1), undefined, task)) {\n\t\t\t\ttask.end_date = this.calculateEndDate(task);\n\t\t\t}\n\t\t}\n\t};\n\n\tgantt.attachEvent(\"onBeforeTaskUpdate\", function (id, task) {\n\t\tgantt._init_task_timing(task);\n\t\treturn true;\n\t});\n\tgantt.attachEvent(\"onBeforeTaskAdd\", function (id, task) {\n\t\tgantt._init_task_timing(task);\n\t\treturn true;\n\t});\n\n};","// TODO: rework public api for date methods\nvar utils = require(\"../../utils/utils\");\n\nvar createWorktimeFacade = function(calendarManager, timeCalculator){\n\treturn {\n\t\tgetWorkHours: function (date) {\n\t\t\treturn timeCalculator.getWorkHours(date);\n\t\t},\n\n\t\tsetWorkTime: function (config) {\n\t\t\treturn timeCalculator.setWorkTime(config);\n\t\t},\n\n\t\tunsetWorkTime: function (config) {\n\t\t\ttimeCalculator.unsetWorkTime(config);\n\t\t},\n\n\t\tisWorkTime: function (date, unit, task) {\n\t\t\treturn timeCalculator.isWorkTime(date, unit, task);\n\t\t},\n\n\t\tgetClosestWorkTime: function (config) {\n\t\t\treturn timeCalculator.getClosestWorkTime(config);\n\t\t},\n\n\t\tcalculateDuration: function (start_date, end_date, task) {\n\t\t\treturn timeCalculator.calculateDuration(start_date, end_date, task);\n\t\t},\n\t\t_hasDuration: function (start_date, end_date, task) {\n\t\t\treturn timeCalculator.hasDuration(start_date, end_date, task);\n\t\t},\n\n\t\tcalculateEndDate: function (start, duration, unit, task) {\n\t\t\treturn timeCalculator.calculateEndDate(start, duration, unit, task);\n\t\t},\n\n\t\tcreateCalendar: utils.bind(calendarManager.createCalendar, calendarManager),\n\t\taddCalendar: utils.bind(calendarManager.addCalendar, calendarManager),\n\t\tgetCalendar: utils.bind(calendarManager.getCalendar, calendarManager),\n\t\tgetCalendars: utils.bind(calendarManager.getCalendars, calendarManager),\n\t\tgetTaskCalendar: utils.bind(calendarManager.getTaskCalendar, calendarManager),\n\t\tdeleteCalendar: utils.bind(calendarManager.deleteCalendar, calendarManager)\n\t};\n};\n\n\nmodule.exports = { create: createWorktimeFacade };\n","function CalendarDisabledTimeStrategy(gantt, argumentsHelper){\n\tthis.argumentsHelper = argumentsHelper;\n\tthis.$gantt = gantt;\n}\n\nCalendarDisabledTimeStrategy.prototype = {\n\tgetWorkHours: function () {\n\t\treturn [0, 24];\n\t},\n\tsetWorkTime: function () {\n\t\treturn true;\n\t},\n\tunsetWorkTime: function () {\n\t\treturn true;\n\t},\n\tisWorkTime: function () {\n\t\treturn true;\n\t},\n\tgetClosestWorkTime: function (config) {\n\t\tvar config = this.argumentsHelper.getClosestWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\t\treturn config.date;\n\t},\n\n\tcalculateDuration: function () {\n\t\tvar config = this.argumentsHelper.getDurationArguments.apply(this.argumentsHelper, arguments);\n\t\tvar from = config.start_date,\n\t\t\tto = config.end_date,\n\t\t\tunit = config.unit,\n\t\t\tstep = config.step;\n\n\t\treturn this._calculateDuration(from, to, unit, step);\n\t},\n\t_calculateDuration: function (start, end, unit, step) {\n\t\tvar dateHelper = this.$gantt.date;\n\t\tvar fixedUnits = {\n\t\t\t\"week\": 1000 * 60 * 60 * 24 * 7,\n\t\t\t\"day\": 1000 * 60 * 60 * 24,\n\t\t\t\"hour\": 1000 * 60 * 60,\n\t\t\t\"minute\": 1000 * 60\n\t\t};\n\n\t\tvar res = 0;\n\t\tif (fixedUnits[unit]) {\n\t\t\tres = Math.round((end - start) / (step * fixedUnits[unit]));\n\t\t} else {\n\t\t\tvar from = new Date(start),\n\t\t\t\tto = new Date(end);\n\t\t\twhile (from.valueOf() < to.valueOf()) {\n\t\t\t\tres += 1;\n\t\t\t\tfrom = dateHelper.add(from, step, unit);\n\t\t\t}\n\n\t\t\tif (from.valueOf() != end.valueOf()) {\n\t\t\t\tres += (to - from) / (dateHelper.add(from, step, unit) - from);\n\t\t\t}\n\t\t}\n\n\t\treturn Math.round(res);\n\t},\n\n\thasDuration: function () {\n\t\tvar config = this.argumentsHelper.getDurationArguments.apply(this.argumentsHelper, arguments);\n\t\tvar from = config.start_date,\n\t\t\tto = config.end_date,\n\t\t\tunit = config.unit;\n\n\t\tif (!unit) {\n\t\t\treturn false;\n\t\t}\n\t\tfrom = new Date(from);\n\t\tto = new Date(to);\n\n\t\treturn (from.valueOf() < to.valueOf());\n\t},\n\n\tcalculateEndDate: function () {\n\t\tvar config = this.argumentsHelper.calculateEndDateArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar start = config.start_date,\n\t\t\tduration = config.duration,\n\t\t\tunit = config.unit,\n\t\t\tstep = config.step;\n\n\t\treturn this.$gantt.date.add(start, step * duration, unit);\n\t}\n};\n\nmodule.exports = CalendarDisabledTimeStrategy;","var createArgumentsHelper = require(\"./calendar_arguments_helper\"),\n\tNoWorkTimeCalendar = require(\"./strategy/no_work_time\");\n\nfunction TimeCalculator(calendarManager){\n\n\tthis.$gantt = calendarManager.$gantt;\n\tthis.argumentsHelper = createArgumentsHelper(this.$gantt);\n\tthis.calendarManager = calendarManager;\n\tthis.$disabledCalendar = new NoWorkTimeCalendar(this.$gantt, this.argumentsHelper);\n}\n\nTimeCalculator.prototype = {\n\t_getCalendar: function (config) {\n\t\tvar calendar;\n\t\tif (!this.$gantt.$services.config().work_time) {\n\t\t\tcalendar = this.$disabledCalendar;\n\t\t} else {\n\t\t\tvar manager = this.calendarManager;\n\t\t\tif (config.task) {\n\t\t\t\tcalendar = manager.getTaskCalendar(config.task);\n\t\t\t} else if (config.id) {\n\t\t\t\tcalendar = manager.getTaskCalendar(config);\n\t\t\t} else if (config.calendar) {\n\t\t\t\tcalendar = config.calendar;\n\t\t\t}\n\t\t\tif (!calendar) {\n\t\t\t\tcalendar = manager.getTaskCalendar();\n\t\t\t}\n\t\t}\n\t\treturn calendar;\n\t},\n\n\tgetWorkHours: function (config) {\n\t\tconfig = this.argumentsHelper.getWorkHoursArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar calendar = this._getCalendar(config);\n\n\t\treturn calendar.getWorkHours(config.date);\n\t},\n\n\tsetWorkTime: function (config, calendar) {\n\t\tconfig = this.argumentsHelper.setWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\n\t\tif (!calendar)\n\t\t\tcalendar = this.calendarManager.getCalendar(); // Global\n\t\treturn calendar.setWorkTime(config);\n\t},\n\n\tunsetWorkTime: function (config, calendar) {\n\t\tconfig = this.argumentsHelper.unsetWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\n\t\tif (!calendar)\n\t\t\tcalendar = this.calendarManager.getCalendar(); // Global\n\t\treturn calendar.unsetWorkTime(config);\n\t},\n\tisWorkTime: function (date, unit, task, calendar) {\n\t\tvar config = this.argumentsHelper.isWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\n\t\tcalendar = this._getCalendar(config);\n\t\treturn calendar.isWorkTime(config);\n\t},\n\tgetClosestWorkTime: function (config) {\n\t\tconfig = this.argumentsHelper.getClosestWorkTimeArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar calendar = this._getCalendar(config);\n\n\t\treturn calendar.getClosestWorkTime(config);\n\t},\n\n\tcalculateDuration: function () { // start_date_date, end_date, task\n\t\tvar config = this.argumentsHelper.getDurationArguments.apply(this.argumentsHelper, arguments);\n\n\n\t\tvar calendar = this._getCalendar(config);\n\t\treturn calendar.calculateDuration(config);\n\t},\n\thasDuration: function () {\n\t\tvar config = this.argumentsHelper.hasDurationArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar calendar = this._getCalendar(config);\n\n\t\treturn calendar.hasDuration(config);\n\t},\n\tcalculateEndDate: function (config) { // start_date, duration, unit, task\n\t\tvar config = this.argumentsHelper.calculateEndDateArguments.apply(this.argumentsHelper, arguments);\n\n\t\tvar calendar = this._getCalendar(config);\n\t\treturn calendar.calculateEndDate(config);\n\t}\n};\n\nmodule.exports = TimeCalculator;\n\n","function WorkUnitsCache() {\n\tthis._cache = {};\n}\n\nWorkUnitsCache.prototype = {\n\t// cache previously calculated worktime\n\tget: function (unit, date) {\n\t\tvar result = -1;// default value (if not existed in the cache)\n\n\t\tvar cache = this._cache;\n\t\tif (cache && cache[unit]) {\n\t\t\tvar units = cache[unit];\n\t\t\tvar time = date.getTime();\n\t\t\tif (units[time] !== undefined)\n\t\t\t\tresult = units[time];\n\t\t}\n\t\treturn result;\n\t},\n\n\tput: function (unit, date, value) {\n\t\tif (!unit || !date) return false;\n\n\t\tvar cache = this._cache;\n\n\t\tvar time = date.getTime();\n\n\t\tvalue = !!value;\n\n\t\tif (!cache) return false;\n\t\tif (!cache[unit]) cache[unit] = {};\n\t\tcache[unit][time] = value;\n\t\treturn true;\n\t},\n\n\tclear: function () {\n\t\tthis._cache = {};\n\t}\n};\n\nmodule.exports = WorkUnitsCache;","var Cache = require(\"./calendar_workunit_cache\"),\n\tutils = require(\"../../../utils/utils\");\n\nfunction CalendarWorkTimeStrategy(gantt, argumentsHelper){\n\tthis.argumentsHelper = argumentsHelper;\n\tthis.$gantt = gantt;\n\tthis._workingUnitsCache = new Cache();\n}\n\nCalendarWorkTimeStrategy.prototype = {\n\tunits: [\n\t\t\"year\",\n\t\t\"month\",\n\t\t\"week\",\n\t\t\"day\",\n\t\t\"hour\",\n\t\t\"minute\"\n\t],\n\t// cache previously calculated worktime\n\t_getUnitOrder: function (unit) {\n\t\tfor (var i = 0, len = this.units.length; i < len; i++) {\n\t\t\tif (this.units[i] == unit)\n\t\t\t\treturn i;\n\t\t}\n\t},\n\t_timestamp: function (settings) {\n\n\t\tvar timestamp = null;\n\t\tif ((settings.day || settings.day === 0)) {\n\t\t\ttimestamp = settings.day;\n\t\t} else if (settings.date) {\n\t\t\t// store worktime datestamp in utc so it could be recognized in different timezones (e.g. opened locally and sent to the export service in different timezone)\n\t\t\ttimestamp = Date.UTC(settings.date.getFullYear(), settings.date.getMonth(), settings.date.getDate());\n\t\t}\n\t\treturn timestamp;\n\t},\n\t_checkIfWorkingUnit: function (date, unit, order) {\n\t\tif (order === undefined) {\n\t\t\torder = this._getUnitOrder(unit);\n\t\t}\n\n\t\t// disable worktime check for custom time units\n\t\tif (order === undefined) {\n\t\t\treturn true;\n\t\t}\n\t\tif (order) {\n\t\t\t//check if bigger time unit is a work time (hour < day < month...)\n\t\t\t//i.e. don't check particular hour if the whole day is marked as not working\n\t\t\tif (!this._isWorkTime(date, this.units[order - 1], order - 1))\n\t\t\t\treturn false;\n\t\t}\n\t\tif (!this[\"_is_work_\" + unit])\n\t\t\treturn true;\n\t\treturn this[\"_is_work_\" + unit](date);\n\t},\n\t//checkings for particular time units\n\t//methods for month-year-week can be defined, otherwise always return 'true'\n\t_is_work_day: function (date) {\n\t\tvar val = this._getWorkHours(date);\n\n\t\tif (val instanceof Array) {\n\t\t\treturn val.length > 0;\n\t\t}\n\t\treturn false;\n\t},\n\t_is_work_hour: function (date) {\n\t\tvar hours = this._getWorkHours(date); // [7,12] or []\n\t\tvar hour = date.getHours();\n\t\tfor (var i = 0; i < hours.length; i += 2) {\n\t\t\tif (hours[i + 1] === undefined) {\n\t\t\t\treturn hours[i] == hour;\n\t\t\t} else {\n\t\t\t\tif (hour >= hours[i] && hour < hours[i + 1])\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\t_internDatesPull: {},\n\t_nextDate: function (start, unit, step) {\n\t\tvar dateHelper = this.$gantt.date;\n\t\treturn dateHelper.add(start, step, unit);\n\n\t\t/*var start_value = +start,\n\t\t\tkey = unit + \"_\" + step;\n\t\tvar interned = this._internDatesPull[key];\n\t\tif(!interned){\n\t\t\tinterned = this._internDatesPull[key] = {};\n\t\t}\n\t\tvar calculated;\n\t\tif(!interned[start_value]){\n\t\t\tinterned[start_value] = calculated = dateHelper.add(start, step, unit);\n\t\t\t//interned[start_value] = dateHelper.add(start, step, unit);\n\t\t}\n\t\treturn calculated || interned[start_value];*/\n\t},\n\t_getWorkUnitsBetweenGeneric: function (from, to, unit, step) {\n\t\tvar dateHelper = this.$gantt.date;\n\t\tvar start = new Date(from),\n\t\t\tend = new Date(to);\n\t\tstep = step || 1;\n\t\tvar units = 0;\n\n\n\t\tvar next = null;\n\t\tvar stepStart,\n\t\t\tstepEnd;\n\n\t\t// calculating decimal durations, i.e. 2016-09-20 00:05:00 - 2016-09-20 01:00:00 ~ 0.95 instead of 1\n\t\t// and also  2016-09-20 00:00:00 - 2016-09-20 00:05:00 ~ 0.05 instead of 1\n\t\t// durations must be rounded later\n\t\tvar checkFirst = false;\n\t\tstepStart = dateHelper[unit + \"_start\"](new Date(start));\n\t\tif (stepStart.valueOf() != start.valueOf()) {\n\t\t\tcheckFirst = true;\n\t\t}\n\t\tvar checkLast = false;\n\t\tstepEnd = dateHelper[unit + \"_start\"](new Date(to));\n\t\tif (stepEnd.valueOf() != to.valueOf()) {\n\t\t\tcheckLast = true;\n\t\t}\n\n\t\tvar isLastStep = false;\n\t\twhile (start.valueOf() < end.valueOf()) {\n\t\t\tnext = this._nextDate(start, unit, step);\n\t\t\tisLastStep = (next.valueOf() > end.valueOf());\n\n\t\t\tif (this._isWorkTime(start, unit)) {\n\t\t\t\tif (checkFirst || (checkLast && isLastStep)) {\n\t\t\t\t\tstepStart = dateHelper[unit + \"_start\"](new Date(start));\n\t\t\t\t\tstepEnd = dateHelper.add(stepStart, step, unit);\n\t\t\t\t}\n\n\t\t\t\tif (checkFirst) {\n\t\t\t\t\tcheckFirst = false;\n\t\t\t\t\tnext = this._nextDate(stepStart, unit, step);\n\t\t\t\t\tunits += ((stepEnd.valueOf() - start.valueOf()) / (stepEnd.valueOf() - stepStart.valueOf()));\n\t\t\t\t} else if (checkLast && isLastStep) {\n\t\t\t\t\tcheckLast = false;\n\t\t\t\t\tunits += ((end.valueOf() - start.valueOf()) / (stepEnd.valueOf() - stepStart.valueOf()));\n\n\t\t\t\t} else {\n\t\t\t\t\tunits++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tstart = next;\n\t\t}\n\t\treturn units;\n\t},\n\t_getHoursPerDay: function (date) {\n\t\tvar hours = this._getWorkHours(date);\n\t\tvar res = 0;\n\t\tfor (var i = 0; i < hours.length; i += 2) {\n\t\t\tres += ((hours[i + 1] - hours[i]) || 0);\n\t\t}\n\t\treturn res;\n\t},\n\t_getWorkHoursForRange: function (from, to) {\n\t\tvar hours = 0;\n\t\tvar start = new Date(from),\n\t\t\tend = new Date(to);\n\n\t\twhile (start.valueOf() < end.valueOf()) {\n\t\t\tif (this._isWorkTime(start, \"day\"))\n\t\t\t\thours += this._getHoursPerDay(start);\n\t\t\tstart = this._nextDate(start, \"day\", 1);\n\t\t}\n\t\treturn hours;\n\t},\n\t_getWorkUnitsBetweenHours: function (from, to, unit, step) {\n\t\tvar start = new Date(from),\n\t\t\tend = new Date(to);\n\t\tstep = step || 1;\n\n\t\tvar firstDayStart = new Date(start);\n\t\tvar firstDayEnd = this.$gantt.date.add(this.$gantt.date.day_start(new Date(start)), 1, \"day\");\n\n\t\tif (end.valueOf() <= firstDayEnd.valueOf()) {\n\t\t\treturn this._getWorkUnitsBetweenGeneric(from, to, unit, step);\n\t\t} else {\n\n\t\t\tvar lastDayStart = this.$gantt.date.day_start(new Date(end));\n\t\t\tvar lastDayEnd = end;\n\n\t\t\tvar startPart = this._getWorkUnitsBetweenGeneric(firstDayStart, firstDayEnd, unit, step);\n\t\t\tvar endPart = this._getWorkUnitsBetweenGeneric(lastDayStart, lastDayEnd, unit, step);\n\n\t\t\tvar hourRange = this._getWorkHoursForRange(firstDayEnd, lastDayStart);\n\t\t\thourRange = ((hourRange / step) + startPart + endPart);\n\n\t\t\treturn hourRange;\n\t\t}\n\t},\n\n\t_getCalendar: function () {\n\t\treturn this.worktime;\n\t},\n\t_setCalendar: function (settings) {\n\t\tthis.worktime = settings;\n\t},\n\n\t_tryChangeCalendarSettings: function (payload) {\n\t\tvar backup = JSON.stringify(this._getCalendar());\n\t\tpayload();\n\t\tif (this._isEmptyCalendar(this._getCalendar())) {\n\t\t\tthis.$gantt.assert(false, \"Invalid calendar settings, no worktime available\");\n\t\t\tthis._setCalendar(JSON.parse(backup));\n\t\t\tthis._workingUnitsCache.clear();\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\n\t},\n\n\t_isEmptyCalendar: function (settings) {\n\t\tvar result = false,\n\t\t\tdatesArray = [],\n\t\t\tisFullWeekSet = true;\n\t\tfor (var i in settings.dates) {\n\t\t\tresult |= !!settings.dates[i];\n\t\t\tdatesArray.push(i);\n\t\t}\n\n\t\tvar checkFullArray = [];\n\t\tfor (var i = 0; i < datesArray.length; i++) {\n\t\t\tif (datesArray[i] < 10) {\n\t\t\t\tcheckFullArray.push(datesArray[i]);\n\t\t\t}\n\t\t}\n\t\tcheckFullArray.sort();\n\n\t\tfor (var i = 0; i < 7; i++) {\n\t\t\tif (checkFullArray[i] != i)\n\t\t\t\tisFullWeekSet = false;\n\t\t}\n\t\tif (isFullWeekSet)\n\t\t\treturn !result;\n\t\treturn !(result || !!settings.hours); // can still return false if separated dates are set to true\n\t},\n\n\tgetWorkHours: function () {\n\t\tvar config = this.argumentsHelper.getWorkHoursArguments.apply(this.argumentsHelper, arguments);\n\t\treturn this._getWorkHours(config.date);\n\t},\n\t_getWorkHours: function (date) {\n\t\tvar t = this._timestamp({date: date});\n\t\tvar hours = true;\n\t\tvar calendar = this._getCalendar();\n\t\tif (calendar.dates[t] !== undefined) {\n\t\t\thours = calendar.dates[t];//custom day\n\t\t} else if (calendar.dates[date.getDay()] !== undefined) {\n\t\t\thours = calendar.dates[date.getDay()];//week day\n\t\t}\n\t\tif (hours === true) {\n\t\t\treturn calendar.hours;\n\t\t} else if (hours) {\n\t\t\treturn hours;\n\t\t}\n\t\treturn [];\n\t},\n\n\tsetWorkTime: function (settings) {\n\t\treturn this._tryChangeCalendarSettings(utils.bind(function () {\n\t\t\tvar hours = settings.hours !== undefined ? settings.hours : true;\n\t\t\tvar timestamp = this._timestamp(settings);\n\t\t\tif (timestamp !== null) {\n\t\t\t\tthis._getCalendar().dates[timestamp] = hours;\n\t\t\t} else {\n\t\t\t\tthis._getCalendar().hours = hours;\n\t\t\t}\n\t\t\tthis._workingUnitsCache.clear();\n\t\t}, this));\n\t},\n\n\tunsetWorkTime: function (settings) {\n\t\treturn this._tryChangeCalendarSettings(utils.bind(function () {\n\t\t\tif (!settings) {\n\t\t\t\tthis.reset_calendar();\n\t\t\t} else {\n\n\t\t\t\tvar timestamp = this._timestamp(settings);\n\n\t\t\t\tif (timestamp !== null) {\n\t\t\t\t\tdelete this._getCalendar().dates[timestamp];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Clear work units cache\n\t\t\tthis._workingUnitsCache.clear();\n\t\t}, this));\n\t},\n\n\t_isWorkTime: function (date, unit, order) {\n\t\t//Check if this item has in the cache\n\t\tvar is_work_unit = this._workingUnitsCache.get(unit, date);\n\n\t\tif (is_work_unit == -1) {\n\t\t\t// calculate if not cached\n\t\t\tis_work_unit = this._checkIfWorkingUnit(date, unit, order);\n\t\t\tthis._workingUnitsCache.put(unit, date, is_work_unit);\n\t\t}\n\n\t\treturn is_work_unit;\n\t},\n\n\tisWorkTime: function () {\n\t\tvar config =  this.argumentsHelper.isWorkTimeArguments.apply( this.argumentsHelper, arguments);\n\t\treturn this._isWorkTime(config.date, config.unit);\n\t},\n\n\tcalculateDuration: function () {\n\t\tvar config =  this.argumentsHelper.getDurationArguments.apply( this.argumentsHelper, arguments);\n\n\t\tif (!config.unit) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar res = 0;\n\t\tif (config.unit == \"hour\") {\n\t\t\tres = this._getWorkUnitsBetweenHours(config.start_date, config.end_date, config.unit, config.step);\n\t\t} else {\n\t\t\tres = this._getWorkUnitsBetweenGeneric(config.start_date, config.end_date, config.unit, config.step);\n\t\t}\n\n\t\t// getDuration.. returns decimal durations\n\t\treturn Math.round(res);\n\t},\n\thasDuration: function () {\n\t\tvar config =  this.argumentsHelper.getDurationArguments.apply( this.argumentsHelper, arguments);\n\n\t\tvar from = config.start_date,\n\t\t\tto = config.end_date,\n\t\t\tunit = config.unit,\n\t\t\tstep = config.step;\n\n\t\tif (!unit) {\n\t\t\treturn false;\n\t\t}\n\t\tvar start = new Date(from),\n\t\t\tend = new Date(to);\n\t\tstep = step || 1;\n\n\t\twhile (start.valueOf() < end.valueOf()) {\n\t\t\tif (this._isWorkTime(start, unit))\n\t\t\t\treturn true;\n\t\t\tstart = this._nextDate(start, unit, step);\n\t\t}\n\t\treturn false;\n\t},\n\n\tcalculateEndDate: function () {\n\t\tvar config =  this.argumentsHelper.calculateEndDateArguments.apply( this.argumentsHelper, arguments);\n\n\t\tvar from = config.start_date,\n\t\t\tduration = config.duration,\n\t\t\tunit = config.unit,\n\t\t\tstep = config.step;\n\n\t\tvar mult = (config.duration >= 0) ? 1 : -1;\n\t\treturn this._calculateEndDate(from, duration, unit, step * mult);\n\t},\n\t_calculateEndDate: function (from, duration, unit, step) {\n\t\tif (!unit)\n\t\t\treturn false;\n\n\t\tvar start = new Date(from),\n\t\t\tadded = 0;\n\t\tstep = step || 1;\n\t\tduration = Math.abs(duration * 1);\n\n\t\twhile (added < duration) {\n\t\t\tvar next = this._nextDate(start, unit, step);\n\t\t\t//if(this.isWorkTime(step > 0 ? start : next, unit))\n\t\t\tif (this._isWorkTime(step > 0 ? new Date(next.valueOf() - 1) : new Date(next.valueOf() + 1), unit))\n\t\t\t\tadded++;\n\t\t\tstart = next;\n\t\t}\n\t\treturn start;\n\t},\n\n\tgetClosestWorkTime: function () {\n\t\tvar config =  this.argumentsHelper.getClosestWorkTimeArguments.apply( this.argumentsHelper, arguments);\n\t\treturn this._getClosestWorkTime(config);\n\t},\n\n\t_getClosestWorkTime: function (settings) {\n\t\tif (this._isWorkTime(settings.date, settings.unit))\n\t\t\treturn settings.date;\n\n\t\tvar unit = settings.unit;\n\n\t\tvar curr = this.$gantt.date[unit + '_start'](new Date(settings.date));\n\n\t\tvar future_target = new Date(curr),\n\t\t\tprev_target = new Date(curr),\n\t\t\ttick = true,\n\t\t\tmaximum_loop = 3000,//be extra sure we won't fall into infinite loop, 3k seems big enough\n\t\t\tcount = 0,\n\t\t\tboth_directins = (settings.dir == 'any' || !settings.dir);\n\n\t\tvar inc = 1;\n\t\tif (settings.dir == 'past')\n\t\t\tinc = -1;\n\n\t\tvar unitOrder = this._getUnitOrder(unit),\n\t\t\tbiggerTimeUnit = this.units[unitOrder - 1];\n\n\t\t//will seek closest working hour in future or in past, one step in one direction per iteration\n\t\twhile (!this._isWorkTime(curr, unit)) {\n\n\t\t\tif(biggerTimeUnit && !this._isWorkTime(curr, biggerTimeUnit)){\n\t\t\t\t// no need to check every hour/minute if we know that the whole day is not working\n\t\t\t\tvar biggerTimeUnitSettings = this.$gantt.copy(settings);\n\t\t\t\tbiggerTimeUnitSettings.date = curr;\n\t\t\t\tbiggerTimeUnitSettings.unit = biggerTimeUnit;\n\n\t\t\t\treturn this._getClosestWorkTime(biggerTimeUnitSettings);\n\t\t\t}\n\n\t\t\tif (both_directins) {\n\t\t\t\tcurr = tick ? future_target : prev_target;\n\t\t\t\tinc = inc * (-1);\n\t\t\t}\n\t\t\tvar tzOffset = curr.getTimezoneOffset();\n\t\t\tcurr = this.$gantt.date.add(curr, inc, unit);\n\n\t\t\tcurr = this.$gantt._correct_dst_change(curr, tzOffset, inc, unit);\n\t\t\tif (this.$gantt.date[unit + '_start'])\n\t\t\t\tcurr = this.$gantt.date[unit + '_start'](curr);\n\n\t\t\tif (both_directins) {\n\t\t\t\tif (tick) {\n\t\t\t\t\tfuture_target = curr;\n\t\t\t\t} else {\n\t\t\t\t\tprev_target = curr;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick = !tick;\n\t\t\tcount++;\n\t\t\tif (count > maximum_loop) {\n\t\t\t\tthis.$gantt.assert(false, \"Invalid working time check\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (curr == prev_target || settings.dir == 'past') {\n\t\t\tcurr = this.$gantt.date.add(curr, 1, unit);\n\t\t}\n\n\t\treturn curr;\n\t}\n};\n\nmodule.exports = CalendarWorkTimeStrategy;","var utils = require(\"../../utils/utils\");\nvar createArgumentsHelper = require(\"./calendar_arguments_helper\");\nvar CalendarWorktimeStrategy = require(\"./strategy/calendar_strategy\");\n\nfunction CalendarManager (gantt){\n\tthis.$gantt = gantt;\n\tthis._calendars = {};\n}\n\nCalendarManager.prototype = {\n\t_calendars: {},\n\t_getDayHoursForMultiple: function (calendars, date) {\n\t\tvar units = [],\n\t\t\ttick = true,\n\t\t\tcurrPos = 0,\n\t\t\tis_work_hour = false,\n\t\t\tstart = this.$gantt.date.day_start(new Date(date));\n\t\tfor (var hour = 0; hour < 24; hour++) {\n\t\t\tis_work_hour = calendars.reduce(function (acc, calendar) {\n\t\t\t\treturn acc && calendar._is_work_hour(start);\n\t\t\t}, true);\n\t\t\tif (is_work_hour) {\n\t\t\t\tif (tick) {\n\t\t\t\t\tunits[currPos] = hour;\n\t\t\t\t\tunits[currPos + 1] = (hour + 1);\n\t\t\t\t\tcurrPos += 2;\n\t\t\t\t} else {\n\t\t\t\t\tunits[currPos - 1] += 1;\n\t\t\t\t}\n\t\t\t\ttick = false;\n\t\t\t} else if (!tick) {\n\t\t\t\ttick = true;\n\t\t\t}\n\t\t\tstart = this.$gantt.date.add(start, 1, \"hour\");\n\t\t}\n\t\tif (!units.length)\n\t\t\tunits = false;\n\t\treturn units;\n\t},\n\tmergeCalendars: function () {\n\t\tvar newCalendar = this.createCalendar(),\n\t\t\tday,\n\t\t\tunits = [];\n\t\tvar calendars = Array.prototype.slice.call(arguments, 0);\n\t\tnewCalendar.worktime.hours = [0, 24];\n\t\tnewCalendar.worktime.dates = {};\n\t\tvar start = this.$gantt.date.day_start(new Date(259200000)); // 1970 day=0\n\t\tfor (day = 0; day < 7; day++) {\n\t\t\tunits = this._getDayHoursForMultiple(calendars, start);\n\t\t\tnewCalendar.worktime.dates[day] = units;\n\t\t\tstart = this.$gantt.date.add(start, 1, \"day\");\n\t\t}\n\t\tfor (var i = 0; i < calendars.length; i++) {\n\t\t\tfor (var value in calendars[i].worktime.dates) if (+value > 10000) {\n\t\t\t\tunits = this._getDayHoursForMultiple(calendars, new Date(+value));\n\t\t\t\tnewCalendar.worktime.dates[value] = units;\n\t\t\t}\n\t\t}\n\t\treturn newCalendar;\n\t},\n\n\t_convertWorktimeSettings: function (settings) {\n\t\tvar days = settings.days;\n\t\tif (days) {\n\t\t\tsettings.dates = settings.dates || {};\n\t\t\tfor (var i = 0; i < days.length; i++) {\n\t\t\t\tsettings.dates[i] = days[i];\n\t\t\t\tif (!(days[i] instanceof Array)) {\n\t\t\t\t\tsettings.dates[i] = !!days[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete settings.days;\n\t\t}\n\t\treturn settings;\n\t},\n\n\tcreateCalendar: function (parentCalendar) {\n\t\tvar settings;\n\n\t\tif (!parentCalendar) {\n\t\t\tparentCalendar = {};\n\t\t}\n\n\t\tif (parentCalendar.worktime) {\n\t\t\tsettings = utils.copy(parentCalendar.worktime);\n\t\t} else {\n\t\t\tsettings = utils.copy(parentCalendar);\n\t\t}\n\n\t\tvar defaults = utils.copy(this.defaults.fulltime.worktime);\n\t\tutils.mixin(settings, defaults);\n\n\t\tvar id = utils.uid();\n\t\tvar calendar = {\n\t\t\tid: id + \"\",\n\t\t\tworktime: this._convertWorktimeSettings(settings)\n\t\t};\n\n\t\tvar apiCore = new CalendarWorktimeStrategy(this.$gantt, createArgumentsHelper(this.$gantt));\n\t\tutils.mixin(apiCore, calendar);\n\n\t\t// validate/check if empty calendar\n\t\tif (!apiCore._tryChangeCalendarSettings(function () {\n\t\t\t})) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn apiCore;\n\t\t}\n\t},\n\n\tgetCalendar: function (id) {\n\t\tid = id || \"global\";\n\t\tthis.createDefaultCalendars();\n\t\treturn this._calendars[id];\n\t},\n\n\tgetCalendars: function () {\n\t\tvar res = [];\n\t\tfor (var i in this._calendars) {\n\t\t\tres.push(this.getCalendar(i));\n\t\t}\n\t\treturn res;\n\t},\n\n\tgetTaskCalendar: function (task) {\n\t\tvar config = this.$gantt.$services.config();\n\t\tif (!task) {\n\t\t\treturn this.getCalendar();\n\t\t} else if (task[config.calendar_property]) {\n\t\t\treturn this.getCalendar(task[config.calendar_property]);\n\t\t} else if (config.resource_calendars) {\n\n\t\t\tfor (var field in config.resource_calendars) {\n\t\t\t\tvar resource = config.resource_calendars[field];\n\t\t\t\tif (task[field]) {\n\t\t\t\t\tvar calendarId = resource[task[field]];\n\t\t\t\t\tif (calendarId) {\n\t\t\t\t\t\treturn this.getCalendar(calendarId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.getCalendar();\n\t},\n\n\taddCalendar: function (calendar) { // puts new calendar to Global Storage - gantt.calendarManager._calendars {}\n\t\tif (!(calendar instanceof CalendarWorktimeStrategy)) {\n\t\t\tvar id = calendar.id;\n\t\t\tcalendar = this.createCalendar(calendar);\n\t\t\tcalendar.id = id;\n\t\t}\n\t\tvar config = this.$gantt.$services.config();\n\n\t\tcalendar.id = calendar.id || utils.uid();\n\t\tthis._calendars[calendar.id] = calendar;\n\t\tif (!config.worktimes)\n\t\t\tconfig.worktimes = {};\n\t\tconfig.worktimes[calendar.id] = calendar.worktime;\n\t\treturn calendar.id;\n\t},\n\n\tdeleteCalendar: function (calendar) {\n\t\tvar config = this.$gantt.$services.config();\n\t\tif (!calendar) return false;\n\t\tif (this._calendars[calendar]) {\n\t\t\tdelete this._calendars[calendar];\n\t\t\tif (config.worktimes && config.worktimes[calendar])\n\t\t\t\tdelete config.worktimes[calendar];\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\t},\n\n\trestoreConfigCalendars: function (configs) {\n\t\tfor (var i in configs) {\n\t\t\tif (this._calendars[i])\n\t\t\t\tcontinue;\n\n\t\t\tvar settings = configs[i];\n\t\t\tvar calendar = this.createCalendar(settings);\n\t\t\tcalendar.id = i;\n\t\t\tthis.addCalendar(calendar);\n\t\t}\n\t},\n\n\tdefaults: {\n\t\tglobal: {\n\t\t\tid: \"global\",\n\t\t\tworktime: {\n\t\t\t\thours: [8, 17],\n\t\t\t\tdays: [0, 1, 1, 1, 1, 1, 0]\n\t\t\t}\n\t\t},\n\t\tfulltime: {\n\t\t\tid: \"fulltime\",\n\t\t\tworktime: {\n\t\t\t\thours: [0, 24],\n\t\t\t\tdays: [1, 1, 1, 1, 1, 1, 1]\n\t\t\t}\n\t\t}\n\t},\n\n\tcreateDefaultCalendars: function () {\n\t\tvar config = this.$gantt.$services.config();\n\t\tthis.restoreConfigCalendars(this.defaults);\n\t\tthis.restoreConfigCalendars(config.worktimes);\n\t}\n};\n\nmodule.exports = CalendarManager;","var CalendarManager = require(\"./calendar_manager\"),\n\tTimeCalculator = require(\"./time_calculator\"),\n\tworktimeFacadeFactory = require(\"../facades/worktime_calendars\"),\n\tutils = require(\"../../utils/utils\");\n\nmodule.exports = function (gantt) {\n\tvar manager = new CalendarManager(gantt),\n\ttimeCalculator = new TimeCalculator(manager);\n\tvar facade = worktimeFacadeFactory.create(manager, timeCalculator);\n\tutils.mixin(gantt, facade);\n};\n","var helpers = require(\"../utils/helpers\");\n\nmodule.exports = function(gantt) {\n\n\tgantt.load = function (url, type, callback) {\n\t\tthis._load_url = url;\n\t\tthis.assert(arguments.length, \"Invalid load arguments\");\n\n\t\tvar tp = 'json', cl = null;\n\t\tif (arguments.length >= 3) {\n\t\t\ttp = type;\n\t\t\tcl = callback;\n\t\t} else {\n\t\t\tif (typeof arguments[1] == \"string\")\n\t\t\t\ttp = arguments[1];\n\t\t\telse if (typeof arguments[1] == \"function\")\n\t\t\t\tcl = arguments[1];\n\t\t}\n\n\t\tthis._load_type = tp;\n\n\t\tthis.callEvent(\"onLoadStart\", [url, tp]);\n\n\t\tthis.ajax.get(url, gantt.bind(function (l) {\n\t\t\tthis.on_load(l, tp);\n\t\t\tthis.callEvent(\"onLoadEnd\", [url, tp]);\n\t\t\tif (typeof cl == \"function\")\n\t\t\t\tcl.call(this);\n\t\t}, this));\n\t};\n\tgantt.parse = function (data, type) {\n\t\tthis.on_load({xmlDoc: {responseText: data}}, type);\n\t};\n\n\tgantt.serialize = function (type) {\n\t\ttype = type || \"json\";\n\t\treturn this[type].serialize();\n\t};\n\n\t/*\n\ttasks and relations\n\t{\n\tdata:[\n\t\t{\n\t\t\t\"id\":\"string\",\n\t\t\t\"text\":\"...\",\n\t\t\t\"start_date\":\"Date or string\",\n\t\t\t\"end_date\":\"Date or string\",\n\t\t\t\"duration\":\"number\",\n\t\t\t\"progress\":\"0..1\",\n\t\t\t\"parent_id\":\"string\",\n\t\t\t\"order\":\"number\"\n\t\t},...],\n\tlinks:[\n\t\t{\n\t\t\tid:\"string\",\n\t\t\tsource:\"string\",\n\t\t\ttarget:\"string\",\n\t\t\ttype:\"string\"\n\t\t},...],\n\tcollections:{\n\t\t\tcollectionName:[\n\t\t\t\t{key:, label:, optional:...},...\n\t\t\t],...\n\t\t}\n\t}\n\n\t* */\n\n\tgantt.on_load = function (resp, type) {\n\t\tthis.callEvent(\"onBeforeParse\", []);\n\t\tif (!type)\n\t\t\ttype = \"json\";\n\t\tthis.assert(this[type], \"Invalid data type:'\" + type + \"'\");\n\n\t\tvar raw = resp.xmlDoc.responseText;\n\n\t\tvar data = this[type].parse(raw, resp);\n\t\tthis._process_loading(data);\n\t};\n\n\tgantt._process_loading = function (data) {\n\t\tif(data.collections)\n\t\t\tthis._load_collections(data.collections);\n\n\t\tthis.$data.tasksStore.parse(data.data);\n\t\tvar links = data.links || (data.collections ? data.collections.links : []);\n\t\tthis.$data.linksStore.parse(links);\n\n\t\t//this._sync_links();\n\t\tthis.callEvent(\"onParse\", []);\n\t\tthis.render();\n\t\tif(this.config.initial_scroll){\n\t\t\tvar firstTask = this.getTaskByIndex(0);\n\t\t\tvar id = firstTask ? firstTask.id : this.config.root_id;\n\t\t\tif(this.isTaskExists(id))\n\t\t\t\tthis.showTask(id);\n\t\t}\n\t};\n\n\n\tgantt._load_collections = function (collections) {\n\t\tvar collections_loaded = false;\n\t\tfor (var key in collections) {\n\t\t\tif (collections.hasOwnProperty(key)) {\n\t\t\t\tcollections_loaded = true;\n\t\t\t\tvar collection = collections[key];\n\t\t\t\tvar arr = this.serverList[key];\n\t\t\t\tif (!arr) continue;\n\t\t\t\tarr.splice(0, arr.length); //clear old options\n\t\t\t\tfor (var j = 0; j < collection.length; j++) {\n\t\t\t\t\tvar option = collection[j];\n\t\t\t\t\tvar obj = this.copy(option);\n\t\t\t\t\tobj.key = obj.value;// resulting option object\n\n\t\t\t\t\tfor (var option_key in option) {\n\t\t\t\t\t\tif (option.hasOwnProperty(option_key)) {\n\t\t\t\t\t\t\tif (option_key == \"value\" || option_key == \"label\")\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\tobj[option_key] = option[option_key]; // obj['value'] = option['value']\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tarr.push(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (collections_loaded)\n\t\t\tthis.callEvent(\"onOptionsLoad\", []);\n\t};\n\n\tgantt.attachEvent(\"onBeforeTaskDisplay\", function (id, task) {\n\t\treturn !task.$ignore;\n\t});\n\n\tgantt.json = {\n\t\tparse: function (data) {\n\t\t\tgantt.assert(data, \"Invalid data\");\n\n\t\t\tif (typeof data == \"string\") {\n\t\t\t\tif (window.JSON)\n\t\t\t\t\tdata = JSON.parse(data);\n\t\t\t\telse {\n\t\t\t\t\tgantt.assert(false, \"JSON is not supported\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.dhx_security)\n\t\t\t\tgantt.security_key = data.dhx_security;\n\t\t\treturn data;\n\t\t},\n\t\tserializeTask: function (task) {\n\t\t\treturn this._copyObject(task);\n\t\t},\n\t\tserializeLink: function (link) {\n\t\t\treturn this._copyLink(link);\n\t\t},\n\t\t_copyLink: function (obj) {\n\t\t\tvar copy = {};\n\t\t\tfor (var key in obj)\n\t\t\t\tcopy[key] = obj[key];\n\t\t\treturn copy;\n\t\t},\n\t\t_copyObject: function (obj) {\n\t\t\tvar copy = {};\n\t\t\tfor (var key in obj) {\n\t\t\t\tif (key.charAt(0) == \"$\")\n\t\t\t\t\tcontinue;\n\t\t\t\tcopy[key] = obj[key];\n\n\t\t\t\tif (helpers.isDate(copy[key])) {\n\t\t\t\t\tcopy[key] = gantt.templates.xml_format(copy[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn copy;\n\t\t},\n\t\tserialize: function () {\n\t\t\tvar tasks = [];\n\t\t\tvar links = [];\n\n\t\t\tgantt.eachTask(function (obj) {\n\t\t\t\tgantt.resetProjectDates(obj);\n\t\t\t\ttasks.push(this.serializeTask(obj));\n\t\t\t}, gantt.config.root_id, this);\n\n\t\t\tvar rawLinks = gantt.getLinks();\n\t\t\tfor (var i = 0; i < rawLinks.length; i++) {\n\t\t\t\tlinks.push(this.serializeLink(rawLinks[i]));\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: tasks,\n\t\t\t\tlinks: links\n\t\t\t};\n\t\t}\n\t};\n\n\t/*\n\t<data>\n\t\t<task id:\"some\" parent_id=\"0\" progress=\"0.5\">\n\t\t\t<text>My task 1</text>\n\t\t\t<start_date>16.08.2013</start_date>\n\t\t\t<end_date>22.08.2013</end_date>\n\t\t</task>\n\t\t<coll_options>\n\t\t\t<links>\n\t\t\t\t<link source='a1' target='b2' type='c3' />\n\t\t\t</links>\n\t\t</coll_options>\n\t</data>\n\t*/\n\n\tgantt.xml = {\n\t\t_xmlNodeToJSON: function (node, attrs_only) {\n\t\t\tvar t = {};\n\t\t\tfor (var i = 0; i < node.attributes.length; i++)\n\t\t\t\tt[node.attributes[i].name] = node.attributes[i].value;\n\n\t\t\tif (!attrs_only) {\n\t\t\t\tfor (var i = 0; i < node.childNodes.length; i++) {\n\t\t\t\t\tvar child = node.childNodes[i];\n\t\t\t\t\tif (child.nodeType == 1)\n\t\t\t\t\t\tt[child.tagName] = child.firstChild ? child.firstChild.nodeValue : \"\";\n\t\t\t\t}\n\n\t\t\t\tif (!t.text) t.text = node.firstChild ? node.firstChild.nodeValue : \"\";\n\t\t\t}\n\n\t\t\treturn t;\n\t\t},\n\t\t_getCollections: function (loader) {\n\t\t\tvar collection = {};\n\t\t\tvar opts = gantt.ajax.xpath(\"//coll_options\", loader);\n\t\t\tfor (var i = 0; i < opts.length; i++) {\n\t\t\t\tvar bind = opts[i].getAttribute(\"for\");\n\t\t\t\tvar arr = collection[bind] = [];\n\t\t\t\tvar itms = gantt.ajax.xpath(\".//item\", opts[i]);\n\t\t\t\tfor (var j = 0; j < itms.length; j++) {\n\t\t\t\t\tvar itm = itms[j];\n\t\t\t\t\tvar attrs = itm.attributes;\n\t\t\t\t\tvar obj = {key: itms[j].getAttribute(\"value\"), label: itms[j].getAttribute(\"label\")};\n\t\t\t\t\tfor (var k = 0; k < attrs.length; k++) {\n\t\t\t\t\t\tvar attr = attrs[k];\n\t\t\t\t\t\tif (attr.nodeName == \"value\" || attr.nodeName == \"label\")\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tobj[attr.nodeName] = attr.nodeValue;\n\t\t\t\t\t}\n\t\t\t\t\tarr.push(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn collection;\n\t\t},\n\t\t_getXML: function (text, loader, toptag) {\n\t\t\ttoptag = toptag || \"data\";\n\t\t\tif (!loader.getXMLTopNode) {\n\t\t\t\tloader = gantt.ajax.parse(loader);\n\t\t\t}\n\n\t\t\tvar xml = gantt.ajax.xmltop(toptag, loader.xmlDoc);\n\t\t\tif (!xml || xml.tagName != toptag) throw \"Invalid XML data\";\n\n\t\t\tvar skey = xml.getAttribute(\"dhx_security\");\n\t\t\tif (skey)\n\t\t\t\tgantt.security_key = skey;\n\n\t\t\treturn xml;\n\t\t},\n\t\tparse: function (text, loader) {\n\t\t\tloader = this._getXML(text, loader);\n\t\t\tvar data = {};\n\n\t\t\tvar evs = data.data = [];\n\t\t\tvar xml = gantt.ajax.xpath(\"//task\", loader);\n\n\t\t\tfor (var i = 0; i < xml.length; i++)\n\t\t\t\tevs[i] = this._xmlNodeToJSON(xml[i]);\n\n\t\t\tdata.collections = this._getCollections(loader);\n\t\t\treturn data;\n\t\t},\n\t\t_copyLink: function (obj) {\n\t\t\treturn \"<item id='\" + obj.id + \"' source='\" + obj.source + \"' target='\" + obj.target + \"' type='\" + obj.type + \"' />\";\n\t\t},\n\t\t_copyObject: function (obj) {\n\t\t\treturn \"<task id='\" + obj.id + \"' parent='\" + (obj.parent || \"\") + \"' start_date='\" + obj.start_date + \"' duration='\" + obj.duration + \"' open='\" + (!!obj.open) + \"' progress='\" + obj.progress + \"' end_date='\" + obj.end_date + \"'><![CDATA[\" + obj.text + \"]]></task>\";\n\t\t},\n\t\tserialize: function () {\n\t\t\tvar tasks = [];\n\t\t\tvar links = [];\n\n\t\t\tvar json = gantt.json.serialize();\n\t\t\tfor (var i = 0, len = json.data.length; i < len; i++) {\n\t\t\t\ttasks.push(this._copyObject(json.data[i]));\n\t\t\t}\n\t\t\tfor (var i = 0, len = json.links.length; i < len; i++) {\n\t\t\t\tlinks.push(this._copyLink(json.links[i]));\n\t\t\t}\n\t\t\treturn \"<data>\" + tasks.join(\"\") + \"<coll_options for='links'>\" + links.join(\"\") + \"</coll_options></data>\";\n\t\t}\n\t};\n\n\n\tgantt.oldxml = {\n\t\tparse: function (text, loader) {\n\t\t\tloader = gantt.xml._getXML(text, loader, \"projects\");\n\t\t\tvar data = {collections: {links: []}};\n\n\t\t\tvar evs = data.data = [];\n\t\t\tvar xml = gantt.ajax.xpath(\"//task\", loader);\n\n\t\t\tfor (var i = 0; i < xml.length; i++) {\n\t\t\t\tevs[i] = gantt.xml._xmlNodeToJSON(xml[i]);\n\t\t\t\tvar parent = xml[i].parentNode;\n\n\t\t\t\tif (parent.tagName == \"project\")\n\t\t\t\t\tevs[i].parent = \"project-\" + parent.getAttribute(\"id\");\n\t\t\t\telse\n\t\t\t\t\tevs[i].parent = parent.parentNode.getAttribute(\"id\");\n\t\t\t}\n\n\t\t\txml = gantt.ajax.xpath(\"//project\", loader);\n\t\t\tfor (var i = 0; i < xml.length; i++) {\n\t\t\t\tvar ev = gantt.xml._xmlNodeToJSON(xml[i], true);\n\t\t\t\tev.id = \"project-\" + ev.id;\n\t\t\t\tevs.push(ev);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < evs.length; i++) {\n\t\t\t\tvar ev = evs[i];\n\t\t\t\tev.start_date = ev.startdate || ev.est;\n\t\t\t\tev.end_date = ev.enddate;\n\t\t\t\tev.text = ev.name;\n\t\t\t\tev.duration = ev.duration / 8;\n\t\t\t\tev.open = 1;\n\t\t\t\tif (!ev.duration && !ev.end_date) ev.duration = 1;\n\t\t\t\tif (ev.predecessortasks)\n\t\t\t\t\tdata.collections.links.push({\n\t\t\t\t\t\ttarget: ev.id,\n\t\t\t\t\t\tsource: ev.predecessortasks,\n\t\t\t\t\t\ttype: gantt.config.links.finish_to_start\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn data;\n\t\t},\n\t\tserialize: function () {\n\t\t\tgantt.message(\"Serialization to 'old XML' is not implemented\");\n\t\t}\n\t};\n\n\tgantt.serverList = function (name, array) {\n\t\tif (array) {\n\t\t\tthis.serverList[name] = array.slice(0);\n\t\t} else if (!this.serverList[name]) {\n\t\t\tthis.serverList[name] = [];\n\t\t}\n\t\treturn this.serverList[name];\n\t};\n\n};","module.exports = function(gantt) {\n\tgantt.isReadonly = function (item) {\n\t\tif (item && item[this.config.editable_property]) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn (item && item[this.config.readonly_property]) || this.config.readonly;\n\t\t}\n\t};\n};","module.exports = function(gantt){\n\t// TODO: why eslint fails on regexp?\n\t// eslint-disable-next-line no-control-regex\n\tvar htmlTags = new RegExp(\"<(?:.|\\n)*?>\", \"gm\");\n\tvar extraSpaces = new RegExp(\" +\", \"gm\");\n\n\tfunction stripHTMLLite(htmlText){\n\t\treturn (htmlText + \"\")\n\t\t\t.replace(htmlTags, \" \").\n\t\t\treplace(extraSpaces, \" \");\n\t}\n\n\tvar singleQuotes = new RegExp(\"'\", \"gm\");\n\tfunction escapeQuotes(text){\n\t\treturn (text + \"\").replace(singleQuotes, \"&#39;\");\n\t}\n\n\tgantt._waiAria = {\n\t\tgetAttributeString: function(attr){\n\t\t\tvar attributes = [\" \"];\n\t\t\tfor(var i in attr){\n\t\t\t\tvar text = escapeQuotes(stripHTMLLite(attr[i]));\n\t\t\t\tattributes.push(i + \"='\" + text + \"'\");\n\t\t\t}\n\t\t\tattributes.push(\" \");\n\t\t\treturn attributes.join(\" \");\n\n\t\t},\n\n\t\tgetTimelineCellAttr:function(dateString){\n\n\t\t\treturn gantt._waiAria.getAttributeString({\"aria-label\": dateString});\n\t\t},\n\n\n\t\t_taskCommonAttr: function(task, div){\n\n\t\t\tif(!(task.start_date && task.end_date))\n\t\t\t\treturn;\n\n\t\t\tdiv.setAttribute(\"aria-label\", stripHTMLLite(gantt.templates.tooltip_text(task.start_date, task.end_date, task)));\n\n\t\t\tif(gantt.isReadonly(task)){\n\t\t\t\tdiv.setAttribute(\"aria-readonly\", true);\n\n\n\t\t\t}\n\n\t\t\tif(task.$dataprocessor_class){\n\t\t\t\tdiv.setAttribute(\"aria-busy\", true);\n\t\t\t}\n\n\n\t\t\tdiv.setAttribute(\"aria-selected\",\n\t\t\t\t(gantt.getState().selected_task == task.id || (gantt.isSelectedTask && gantt.isSelectedTask(task.id))) ? \"true\" : \"false\");\n\t\t},\n\n\t\tsetTaskBarAttr: function(task, div){\n\t\t\tthis._taskCommonAttr(task, div);\n\n\t\t\tif(!gantt.isReadonly(task) && gantt.config.drag_move){\n\t\t\t\tif(task.id != gantt.getState().drag_id){\n\t\t\t\t\tdiv.setAttribute(\"aria-grabbed\", false);\n\t\t\t\t}else{\n\t\t\t\t\tdiv.setAttribute(\"aria-grabbed\", true);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\ttaskRowAttr: function(task, div){\n\n\t\t\tthis._taskCommonAttr(task, div);\n\n\t\t\tif(!gantt.isReadonly(task) && gantt.config.order_branch){\n\t\t\t\tdiv.setAttribute(\"aria-grabbed\", false);\n\t\t\t}\n\n\t\t\tdiv.setAttribute(\"role\", \"row\");\n\n\t\t\tdiv.setAttribute(\"aria-level\", task.$level);\n\n\t\t\tif(gantt.hasChild(task.id)){\n\t\t\t\tdiv.setAttribute(\"aria-expanded\", task.$open ? \"true\" : \"false\");\n\t\t\t}\n\t\t},\n\n\t\tlinkAttr: function(link, div){\n\n\t\t\tvar linkTypes = gantt.config.links;\n\n\t\t\tvar toStart = link.type == linkTypes.finish_to_start || link.type == linkTypes.start_to_start;\n\t\t\tvar fromStart = link.type == linkTypes.start_to_start || link.type == linkTypes.start_to_finish;\n\n\t\t\tvar content = gantt.locale.labels.link + \" \" +  gantt.templates.drag_link(link.source, fromStart, link.target, toStart);\n\n\t\t\tdiv.setAttribute(\"aria-label\", stripHTMLLite(content));\n\t\t\tif(gantt.isReadonly(link)){\n\t\t\t\tdiv.setAttribute(\"aria-readonly\", true);\n\t\t\t}\n\t\t},\n\n\t\tgridSeparatorAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"separator\");\n\t\t},\n\n\t\tlightboxHiddenAttr: function(div){\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"true\");\n\t\t},\n\n\t\tlightboxVisibleAttr: function(div){\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"false\");\n\t\t},\n\n\t\tlightboxAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"dialog\");\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"true\");\n\t\t\tdiv.firstChild.setAttribute(\"role\", \"heading\");\n\t\t},\n\n\t\tlightboxButtonAttrString:function(buttonName){\n\t\t\treturn this.getAttributeString({\"role\":\"button\", \"aria-label\":gantt.locale.labels[buttonName], \"tabindex\":\"0\"});\n\t\t},\n\n\t\tlightboxHeader: function(div, headerText){\n\t\t\tdiv.setAttribute(\"aria-label\", headerText);\n\t\t},\n\n\t\tlightboxSelectAttrString: function(time_option){\n\t\t\tvar label = \"\";\n\n\t\t\tswitch (time_option) {\n\t\t\t\tcase \"%Y\":\n\t\t\t\t\tlabel = gantt.locale.labels.years;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%m\":\n\t\t\t\t\tlabel = gantt.locale.labels.months;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%d\":\n\t\t\t\t\tlabel = gantt.locale.labels.days;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%H:%i\":\n\t\t\t\t\tlabel = gantt.locale.labels.hours + gantt.locale.labels.minutes;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn gantt._waiAria.getAttributeString({\"aria-label\": label});\n\t\t},\n\n\t\tlightboxDurationInputAttrString: function(section){\n\t\t\treturn this.getAttributeString({\"aria-label\": gantt.locale.labels.column_duration, \"aria-valuemin\": \"0\"});\n\t\t},\n\n\t\tgridAttrString: function(){\n\t\t\treturn [\" role='treegrid'\", gantt.config.multiselect ? \"aria-multiselectable='true'\" : \"aria-multiselectable='false'\", \" \"].join(\" \");\n\t\t},\n\n\n\t\tgridScaleRowAttrString: function(){\n\t\t\treturn \"role='row'\";\n\t\t},\n\n\t\tgridScaleCellAttrString: function(column, label){\n\t\t\tvar attrs = \"\";\n\t\t\tif(column.name == \"add\"){\n\t\t\t\tattrs = this.getAttributeString({\"role\":\"button\", \"aria-label\": gantt.locale.labels.new_task});\n\t\t\t}else{\n\n\t\t\t\tvar attributes = {\n\t\t\t\t\t\"role\":\"columnheader\",\n\t\t\t\t\t\"aria-label\": label\n\t\t\t\t};\n\n\t\t\t\tif(gantt._sort && gantt._sort.name == column.name){\n\t\t\t\t\tif(gantt._sort.direction == \"asc\"){\n\t\t\t\t\t\tattributes[\"aria-sort\"] = \"ascending\";\n\t\t\t\t\t}else{\n\t\t\t\t\t\tattributes[\"aria-sort\"] = \"descending\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tattrs = this.getAttributeString(attributes);\n\t\t\t}\n\t\t\treturn attrs;\n\t\t},\n\n\t\tgridDataAttrString: function(){\n\t\t\treturn \"role='rowgroup'\";\n\t\t},\n\n\t\tgridCellAttrString: function(column, textValue){\n\t\t\treturn this.getAttributeString({\"role\":\"gridcell\", \"aria-label\": textValue});\n\t\t},\n\n\t\tgridAddButtonAttrString: function(column){\n\t\t\treturn this.getAttributeString({\"role\":\"button\", \"aria-label\": gantt.locale.labels.new_task});\n\t\t},\n\n\t\tmessageButtonAttrString: function(buttonLabel){\n\t\t\treturn \"tabindex='0' role='button' aria-label='\"+buttonLabel+\"'\";\n\t\t},\n\n\t\tmessageInfoAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"alert\");\n\t\t\t//div.setAttribute(\"tabindex\", \"-1\");\n\t\t},\n\n\t\tmessageModalAttr: function(div, uid){\n\t\t\tdiv.setAttribute(\"role\", \"dialog\");\n\t\t\tif(uid){\n\t\t\t\tdiv.setAttribute(\"aria-labelledby\", uid);\n\t\t\t}\n\n\t\t//\tdiv.setAttribute(\"tabindex\", \"-1\");\n\t\t},\n\n\t\tquickInfoAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"dialog\");\n\t\t},\n\n\t\tquickInfoHeaderAttrString: function(){\n\t\t\treturn \" role='heading' \";\n\t\t},\n\n\t\tquickInfoHeader: function(div, header){\n\t\t\tdiv.setAttribute(\"aria-label\", header);\n\t\t},\n\n\t\tquickInfoButtonAttrString: function(label){\n\t\t\treturn gantt._waiAria.getAttributeString({\"role\":\"button\", \"aria-label\":label, \"tabindex\":\"0\"});\n\t\t},\n\n\t\ttooltipAttr: function(div){\n\t\t\tdiv.setAttribute(\"role\", \"tooltip\");\n\t\t},\n\n\t\ttooltipVisibleAttr: function(div){\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"false\");\n\t\t},\n\n\t\ttooltipHiddenAttr: function(div){\n\t\t\tdiv.setAttribute(\"aria-hidden\", \"true\");\n\t\t}\n\t};\n\n\tfunction isDisabled(){\n\t\treturn !gantt.config.wai_aria_attributes;\n\t}\n\n\tfor(var i in gantt._waiAria){\n\t\tgantt._waiAria[i] = (function(payload){\n\t\t\treturn function(){\n\t\t\t\tif(isDisabled()){\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t\treturn payload.apply(this, arguments);\n\t\t\t};\n\t\t})(gantt._waiAria[i]);\n\t}\n\n\n};","module.exports = function(gantt) {\n\tgantt.getGridColumn = function(name) {\n\t\tvar columns = gantt.config.columns;\n\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tif (columns[i].name == name)\n\t\t\t\treturn columns[i];\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tgantt.getGridColumns = function() {\n\t\treturn gantt.config.columns.slice();\n\t};\n};","module.exports = function(gantt) {\n};","module.exports = function(gantt) {\n\tfunction isEnabled() {\n\t\treturn gantt.config.auto_types && // if enabled\n\t\t\t(gantt.getTaskType(gantt.config.types.project) == gantt.config.types.project);// and supported\n\t}\n\n\tfunction callIfEnabled(callback) {\n\t\treturn function() {\n\t\t\tif (!isEnabled()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn callback.apply(this, arguments);\n\t\t};\n\t}\n\n\tfunction updateParents(childId) {\n\t\tgantt.batchUpdate(function() {\n\t\t\tcheckParent(childId);\n\t\t});\n\t}\n\n\tvar delTaskParent;\n\n\tfunction checkParent(id) {\n\t\tsetTaskType(id);\n\t\tvar parent = gantt.getParent(id);\n\n\t\tif (parent != gantt.config.root_id) {\n\t\t\tcheckParent(parent);\n\t\t}\n\t}\n\n\tfunction setTaskType(id) {\n\t\tid = id.id || id;\n\t\tvar task = gantt.getTask(id);\n\t\tvar targetType = getTaskTypeToUpdate(task);\n\n\t\tif (targetType !== false) {\n\t\t\tupdateTaskType(task, targetType);\n\t\t}\n\t}\n\n\tfunction updateTaskType(task, targetType) {\n\t\ttask.type = targetType;\n\t\tgantt.updateTask(task.id);\n\t}\n\n\tfunction getTaskTypeToUpdate(task) {\n\t\tvar allTypes = gantt.config.types;\n\t\tvar hasChildren = gantt.hasChild(task.id);\n\t\tvar taskType = gantt.getTaskType(task.type);\n\n\t\tif (hasChildren && taskType === allTypes.task) {\n\t\t\treturn allTypes.project;\n\t\t}\n\n\t\tif (!hasChildren && taskType === allTypes.project) {\n\t\t\treturn allTypes.task;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tvar isParsingDone = true;\n\n\tgantt.attachEvent(\"onParse\", callIfEnabled(function() {\n\t\tisParsingDone = false;\n\n\t\tgantt.batchUpdate(function() {\n\t\t\tgantt.eachTask(function(task) {\n\t\t\t\tvar targetType = getTaskTypeToUpdate(task);\n\t\t\t\tif (targetType !== false) {\n\t\t\t\t\tupdateTaskType(task, targetType);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tisParsingDone = true;\n\t}));\n\n\tgantt.attachEvent(\"onAfterTaskAdd\",  function() {\n\t\tif (isParsingDone)\n\t\t\tcallIfEnabled(updateParents);\n\t});\n\n\tgantt.attachEvent(\"onAfterTaskUpdate\", function() {\n\t\tif (isParsingDone)\n\t\t\tcallIfEnabled(updateParents);\n\t});\n\n\n\tfunction updateAfterRemoveChild(id){\n\t\tif (id != gantt.config.root_id && gantt.isTaskExists(id)) {\n\t\t\tupdateParents(id);\n\t\t}\n\t}\n\n\tgantt.attachEvent(\"onBeforeTaskDelete\",  callIfEnabled(function(id, task) {\n\t\tdelTaskParent = gantt.getParent(id);\n\t\treturn true;\n\t}));\n\n\tgantt.attachEvent(\"onAfterTaskDelete\", callIfEnabled(function(id, task) {\n\t\tupdateAfterRemoveChild(delTaskParent);\n\t}));\n\n\n\tvar originalRowDndParent;\n\n\tgantt.attachEvent(\"onRowDragStart\", callIfEnabled(function(id, target, e) {\n\t\toriginalRowDndParent = gantt.getParent(id);\n\t\treturn true;\n\t}));\n\n\tgantt.attachEvent(\"onRowDragEnd\", callIfEnabled(function(id, target) {\n\t\tupdateAfterRemoveChild(originalRowDndParent);\n\t\tupdateParents(id);\n\t}));\n\n\tvar originalMoveTaskParent;\n\n\tgantt.attachEvent(\"onBeforeTaskMove\", callIfEnabled(function(sid, parent, tindex) {\n\t\toriginalMoveTaskParent = gantt.getParent(sid);\n\t\treturn true;\n\t}));\n\n\tgantt.attachEvent(\"onAfterTaskMove\", callIfEnabled(function(id, parent, tindex) {\n\t\tif (document.querySelector(\".gantt_drag_marker\")) {\n\t\t\t// vertical dnd in progress\n\t\t\treturn;\n\t\t}\n\t\tupdateAfterRemoveChild(originalMoveTaskParent);\n\t\tupdateParents(id);\n\t}));\n};","module.exports = function addPlaceholder(gantt){\n\tfunction isEnabled(){\n\t\treturn gantt.config.placeholder_task;\n\t}\n\n\tfunction callIfEnabled(callback){\n\t\treturn function(){\n\t\t\tif(!isEnabled()){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn callback.apply(this, arguments);\n\t\t};\n\t}\n\n\tfunction silenceDataProcessor(dataProcessor){\n\t\tif(dataProcessor && !dataProcessor._silencedPlaceholder){\n\t\t\tdataProcessor._silencedPlaceholder = true;\n\t\t\tdataProcessor.attachEvent(\"onBeforeUpdate\", callIfEnabled(function(id, state, data){\n\t\t\t\tif(data.type == gantt.config.types.placeholder){\n\t\t\t\t\tdataProcessor.setUpdated(id, false);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}));\n\t\t}\n\t}\n\n\tfunction insertPlaceholder(){\n\t\tvar placeholders = gantt.getTaskBy(\"type\", gantt.config.types.placeholder);\n\t\tif(!placeholders.length || !gantt.isTaskExists(placeholders[0].id)){\n\t\t\tvar placeholder = {\n\t\t\t\tunscheduled: true,\n\t\t\t\ttype: gantt.config.types.placeholder,\n\t\t\t\tduration:0,\n\t\t\t\ttext: gantt.locale.labels.new_task\n\t\t\t};\n\t\t\tif(gantt.callEvent(\"onTaskCreated\", [placeholder]) === false){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgantt.addTask(placeholder);\n\t\t\t\n\t\t}\n\t}\n\n\tfunction afterEdit(id){\n\t\tvar item = gantt.getTask(id);\n\t\tif(item.type == gantt.config.types.placeholder) {\n\t\t\tif(item.start_date && item.end_date && item.unscheduled){\n\t\t\t\titem.unscheduled = false;\n\t\t\t}\n\n\t\t\tgantt.batchUpdate(function(){\n\t\t\t\tvar newTask = gantt.copy(item);\n\t\t\t\tgantt.silent(function(){\n\t\t\t\t\tgantt.deleteTask(item.id);\n\t\t\t\t});\n\n\t\t\t\tdelete newTask[\"!nativeeditor_status\"];\n\t\t\t\tnewTask.type = gantt.config.types.task;\n\t\t\t\tnewTask.id = gantt.uid();\n\t\t\t\tgantt.addTask(newTask);\n\n\t\t\t\t//insertPlaceholder();\n\t\t\t});\n\n\t\t}\n\t}\n\n\tgantt.config.types.placeholder = \"placeholder\";\n\tgantt.attachEvent(\"onDataProcessorReady\", callIfEnabled(silenceDataProcessor));\n\n\tvar ready = false;\n\tgantt.attachEvent(\"onGanttReady\", function(){\n\t\tif(ready){\n\t\t\treturn;\n\t\t}\n\t\tready = true;\n\t\tgantt.attachEvent(\"onAfterTaskUpdate\", callIfEnabled(afterEdit));\n\t\tgantt.attachEvent(\"onAfterTaskAdd\", callIfEnabled(function(id, task){\n\t\t\tif(task.type != gantt.config.types.placeholder){\n\t\t\t\tvar placeholders = gantt.getTaskBy(\"type\", gantt.config.types.placeholder);\n\t\t\t\tplaceholders.forEach(function(p){\n\t\t\t\t\tgantt.silent(function(){\n\t\t\t\t\t\tif(gantt.isTaskExists(p.id))\n\t\t\t\t\t\t\tgantt.deleteTask(p.id);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tinsertPlaceholder();\n\t\t\t}\n\t\t}));\n\t\tgantt.attachEvent(\"onParse\", callIfEnabled(insertPlaceholder));\n\t});\n\n\tgantt.attachEvent(\"onBeforeUndoStack\", function(action){\n\t\tfor(var i = 0; i < action.commands.length; i++){\n\t\t\tvar command = action.commands[i];\n\t\t\tif(command.entity === \"task\" && command.value.type === gantt.config.types.placeholder){\n\t\t\t\taction.commands.splice(i,1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t});\n\n};","var helpers = require(\"../../utils/helpers\");\n\nfunction createResourceMethods(gantt){\n\n\tvar resourceTaskCache = {};\n\n\tgantt.$data.tasksStore.attachEvent(\"onStoreUpdated\", function(){\n\t\tresourceTaskCache = {};\n\t});\n\n\tfunction getTaskBy(propertyName, propertyValue) {\n\t\tif (typeof propertyName == \"function\") {\n\t\t\treturn filterResourceTasks(propertyName);\n\t\t} else {\n\t\t\tif (helpers.isArray(propertyValue)) {\n\t\t\t\treturn getResourceTasks(propertyName, propertyValue);\n\t\t\t} else {\n\t\t\t\treturn getResourceTasks(propertyName, [propertyValue]);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction filterResourceTasks(filter) {\n\t\tvar res = [];\n\t\tgantt.eachTask(function (task) {\n\t\t\tif (filter(task)) {\n\t\t\t\tres.push(task);\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t}\n\n\tfunction getResourceTasks(property, resourceIds) {\n\t\tvar res;\n\n\t\tvar cacheKey = resourceIds.join(\"_\") + \"_\" + property;\n\n\t\tvar resourceHash = {};\n\t\tfor (var i = 0; i < resourceIds.length; i++) {\n\t\t\tresourceHash[resourceIds[i]] = true;\n\t\t}\n\n\t\tif (!resourceTaskCache[cacheKey]) {\n\t\t\tres = resourceTaskCache[cacheKey] = [];\n\t\t\tgantt.eachTask(function (task) {\n\t\t\t\tif (task.type == gantt.config.types.project)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar resourceValue;\n\t\t\t\tif (!helpers.isArray(task[property])) {\n\t\t\t\t\tresourceValue = [task[property]];\n\t\t\t\t} else {\n\t\t\t\t\tresourceValue = task[property];\n\t\t\t\t}\n\n\t\t\t\thelpers.forEach(resourceValue, function(value) {\n\t\t\t\t\tif(value && (resourceHash[value]  || resourceHash[value.resource_id])) {\n\t\t\t\t\t\tres.push(task);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tres = resourceTaskCache[cacheKey];\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tfunction getResourceLoad(resource, resourceProperty, scale, timeline){\n\t\tvar cacheKey = resource.id + \"_\" + resourceProperty  + \"_\" + scale.unit + \"_\" + scale.step;\n\t\tvar res;\n\t\tif (!resourceTaskCache[cacheKey]) {\n\t\t\tres = resourceTaskCache[cacheKey] = calculateResourceLoad(resource, resourceProperty, scale, timeline);\n\n\t\t} else {\n\t\t\tres = resourceTaskCache[cacheKey];\n\t\t}\n\t\treturn res;\n\t}\n\n\tfunction calculateResourceLoad(resource, resourceProperty, scale, timeline) {\n\n\t\tvar tasks;\n\t\tif(resource.$role == \"task\"){\n\t\t\ttasks = [];\n\t\t}else{\n\t\t\ttasks = getTaskBy(resourceProperty, resource.id);\n\t\t}\n\t\tvar step = scale.unit;\n\t\tvar timegrid = {};\n\n\t\tfor (var i = 0; i < tasks.length; i++) {\n\t\t\tvar task = tasks[i];\n\n\t\t\tvar currDate = gantt.date[step + \"_start\"](new Date(task.start_date));\n\n\t\t\twhile (currDate < task.end_date) {\n\n\t\t\t\tvar date = currDate;\n\t\t\t\tcurrDate = gantt.date.add(currDate, 1, step);\n\n\t\t\t\tif (!gantt.isWorkTime({date: date, task: task, unit: step})) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar timestamp = date.valueOf();\n\t\t\t\tif (!timegrid[timestamp]){\n\t\t\t\t\ttimegrid[timestamp] = [];\n\t\t\t\t}\n\n\t\t\t\ttimegrid[timestamp].push(task);\n\t\t\t}\n\t\t}\n\n\t\tvar timetable = [];\n\t\tvar start, end, tasks;\n\t\tvar config = timeline.$getConfig();\n\n\t\tfor(var i = 0; i < scale.trace_x.length; i++){\n\t\t\tstart = new Date(scale.trace_x[i]);\n\t\t\tend = gantt.date.add(start, 1, step);\n\t\t\ttasks = timegrid[start.valueOf()] || [];\n\t\t\tif(tasks.length || config.resource_render_empty_cells){\n\t\t\t\ttimetable.push({\n\t\t\t\t\tstart_date: start,\n\t\t\t\t\tend_date: end,\n\t\t\t\t\ttasks: tasks\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\n\t\treturn timetable;\n\t}\n\n\tfunction renderResourceLine(resource, timeline) {\n\t\tvar config = timeline.$getConfig(),\n\t\t\ttemplates = timeline.$getTemplates();\n\t\tvar timetable = getResourceLoad(resource, config.resource_property, timeline.getScale(), timeline);\n\n\t\tvar cells = [];\n\t\tfor (var i = 0; i < timetable.length; i++) {\n\n\t\t\tvar day = timetable[i];\n\n\t\t\tvar css = templates.resource_cell_class(day.start_date, day.end_date, resource, day.tasks);\n\t\t\tvar content = templates.resource_cell_value(day.start_date, day.end_date, resource, day.tasks);\n\n\t\t\tif (css || content){\n\t\t\t\tvar sizes = timeline.getItemPosition(resource, day.start_date, day.end_date);\n\t\t\t\tvar el = document.createElement('div');\n\t\t\t\tel.className = [\"gantt_resource_marker\", css].join(\" \");\n\n\t\t\t\tel.style.cssText = [\n\t\t\t\t\t'left:' + sizes.left + 'px',\n\t\t\t\t\t'width:' + sizes.width + 'px',\n\t\t\t\t\t'height:' + (config.row_height - 1) + 'px',\n\t\t\t\t\t'line-height:' + (config.row_height - 1) + 'px',\n\t\t\t\t\t'top:' + sizes.top + 'px'\n\t\t\t\t].join(\";\");\n\n\t\t\t\tif(content)\n\t\t\t\t\tel.innerHTML = content;\n\n\t\t\t\tcells.push(el);\n\t\t\t}\n\n\t\t}\n\n\t\tvar row = null;\n\t\tif(cells.length){\n\t\t\trow = document.createElement(\"div\");\n\t\t\tfor(var i = 0; i < cells.length; i++){\n\t\t\t\trow.appendChild(cells[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn row;\n\t}\n\n\n\tfunction renderBar(level, start, end, timeline){\n\t\tvar top = (1 - (level*1||0))*100;\n\t\tvar left = timeline.posFromDate(start);\n\t\tvar right = timeline.posFromDate(end);\n\t\tvar element = document.createElement(\"div\");\n\t\telement.className = \"gantt_histogram_hor_bar\";\n\t\telement.style.top = top + '%';\n\t\telement.style.left = left + \"px\";\n\t\telement.style.width = (right - left + 1) + \"px\";\n\t\treturn element;\n\t}\n\tfunction renderConnection(prevLevel, nextLevel, left){\n\t\tif(prevLevel === nextLevel){\n\t\t\treturn null;\n\t\t}\n\n\t\tvar top = 1 - Math.max(prevLevel, nextLevel);\n\t\tvar height = Math.abs(prevLevel - nextLevel);\n\t\tvar element = document.createElement(\"div\");\n\t\telement.className = \"gantt_histogram_vert_bar\";\n\t\telement.style.top = top*100 + \"%\";\n\t\telement.style.height = height*100 + \"%\";\n\t\telement.style.left = left + \"px\";\n\n\t\treturn element;\n\t}\n\n\tfunction renderHistogramLine(capacity, timeline, maxCapacity){\n\t\tvar scale = timeline.getScale();\n\n\t\tvar el = document.createElement(\"div\");\n\n\t\tfor(var i = 0; i < scale.trace_x.length; i++){\n\t\t\tvar colStart = scale.trace_x[i];\n\t\t\tvar colEnd = scale.trace_x[i + 1] || gantt.date.add(colStart, scale.step, scale.unit);\n\t\t\tvar col = scale.trace_x[i].valueOf();\n\t\t\tvar level = Math.min(capacity[col]/maxCapacity, 1) || 0;\n\t\t\tif(level < 0){\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar nextLevel = Math.min(capacity[colEnd.valueOf()]/maxCapacity, 1) || 0;\n\n\n\t\t\tvar bar = renderBar(level, colStart, colEnd, timeline);\n\t\t\tif(bar){\n\t\t\t\tel.appendChild(bar);\n\t\t\t}\n\t\t\tvar connection = renderConnection(level, nextLevel, timeline.posFromDate(colEnd));\n\t\t\tif(connection){\n\t\t\t\tel.appendChild(connection);\n\t\t\t}\n\n\t\t}\n\n\n\t\treturn el;\n\t}\n\n\tfunction renderResourceHistogram(resource, timeline) {\n\t\tvar config = timeline.$getConfig(),\n\t\t\ttemplates = timeline.$getTemplates();\n\t\tvar timetable = getResourceLoad(resource, config.resource_property, timeline.getScale(), timeline);\n\n\t\tvar cells = [];\n\t\tvar capacityMatrix = {};\n\t\tvar maxCapacity = resource.capacity || timeline.$config.capacity || 24;\n\t\tfor (var i = 0; i < timetable.length; i++) {\n\n\t\t\tvar day = timetable[i];\n\n\t\t\tvar css = templates.histogram_cell_class(day.start_date, day.end_date, resource, day.tasks);\n\t\t\tvar content = templates.histogram_cell_label(day.start_date, day.end_date, resource, day.tasks);\n\t\t\tvar fill = templates.histogram_cell_allocated(day.start_date, day.end_date, resource, day.tasks);\n\t\t\tvar capacity = templates.histogram_cell_capacity(day.start_date, day.end_date, resource, day.tasks);\n\t\t\tcapacityMatrix[day.start_date.valueOf()] = capacity || 0;\n\t\t\tif(css || content){\n\t\t\t\tvar sizes = timeline.getItemPosition(resource, day.start_date, day.end_date);\n\t\t\t\tvar el = document.createElement('div');\n\t\t\t\tel.className = [\"gantt_histogram_cell\", css].join(\" \");\n\n\t\t\t\tel.style.cssText = [\n\t\t\t\t\t'left:' + sizes.left + 'px',\n\t\t\t\t\t'width:' + sizes.width + 'px',\n\t\t\t\t\t'height:' + (config.row_height - 1) + 'px',\n\t\t\t\t\t'line-height:' + (config.row_height - 1) + 'px',\n\t\t\t\t\t'top:' + (sizes.top + 1) + 'px'\n\t\t\t\t].join(\";\");\n\n\n\t\t\t\tif (content) {\n\t\t\t\t\tcontent = \"<div class='gantt_histogram_label'>\" + content +\"</div>\";\n\t\t\t\t}\n\n\t\t\t\tif (fill) {\n\n\t\t\t\t\tcontent = \"<div class='gantt_histogram_fill' style='height:\"+(Math.min(fill/maxCapacity||0, 1)*100)+\"%;'></div>\" + content;\n\t\t\t\t}\n\n\t\t\t\tif (content)\n\t\t\t\t\tel.innerHTML = content;\n\n\t\t\t\tcells.push(el);\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar row = null;\n\t\tif (cells.length) {\n\t\t\trow = document.createElement(\"div\");\n\t\t\tfor (var i = 0; i < cells.length; i++) {\n\t\t\t\trow.appendChild(cells[i]);\n\t\t\t}\n\n\t\t\tvar capacityElement = renderHistogramLine(capacityMatrix, timeline, maxCapacity);\n\n\t\t\tif (capacityElement) {\n\t\t\t\tcapacityElement.setAttribute(\"data-resource-id\", resource.id);\n\t\t\t\tcapacityElement.style.position = \"absolute\";\n\t\t\t\tcapacityElement.style.top = (sizes.top + 1) + \"px\";\n\t\t\t\tcapacityElement.style.height = (config.row_height - 1) + \"px\";\n\t\t\t\tcapacityElement.style.left = 0;\n\t\t\t\trow.appendChild(capacityElement);\n\t\t\t}\n\t\t}\n\n\t\treturn row;\n\t}\n\n\tfunction selectAssignments(resourceId, taskId, result){\n\t\tvar property = gantt.config.resource_property;\n\t\tvar owners = [];\n\t\tif (gantt.getDatastore(\"task\").exists(taskId)) {\n\t\t\tvar task = gantt.getTask(taskId);\n\t\t\towners = task[property] || [];\n\t\t}\n\n\t\tif (!Array.isArray(owners)) {\n\t\t\towners = [owners];\n\t\t}\n\t\tfor (var i = 0; i < owners.length; i++) {\n\t\t\tif (owners[i].resource_id == resourceId) {\n\t\t\t\tresult.push({task_id: task.id, resource_id:owners[i].resource_id, value:owners[i].value});\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getResourceAssignments(resourceId, taskId){\n\t\t// resource assignment as an independent module:\n\t\t// {taskId:, resourceId, value}\n\t\t// TODO: probably should add a separate datastore for these\n\t\tvar assignments = [];\n\t\tvar property = gantt.config.resource_property;\n\t\tif(taskId !== undefined){\n\t\t\tselectAssignments(resourceId, taskId, assignments);\n\t\t}else{\n\t\t\tvar tasks = gantt.getTaskBy(property, resourceId);\n\t\t\ttasks.forEach(function(task){\n\t\t\t\tselectAssignments(resourceId, task.id, assignments);\n\t\t\t});\n\t\t}\n\t\treturn assignments;\n\t}\n\n\treturn {\n\t\trenderLine: renderResourceLine,\n\t\trenderHistogram: renderResourceHistogram,\n\t\tfilterTasks: getTaskBy,\n\t\tgetResourceAssignments: getResourceAssignments\n\t};\n}\n\nmodule.exports = function(gantt){\n\tvar methods = createResourceMethods(gantt);\n\n\tgantt.getTaskBy = methods.filterTasks;\n\tgantt.getResourceAssignments = methods.getResourceAssignments;\n\tgantt.$ui.layers.resourceRow = methods.renderLine;\n\tgantt.$ui.layers.resourceHistogram = methods.renderHistogram;\n\tgantt.config.resource_property = \"owner_id\";\n\tgantt.config.resource_store = \"resource\";\n\tgantt.config.resource_render_empty_cells = false;\n\n\t/**\n\t * these are placeholder functions that should be redefined by the user\n\t*/\n\tgantt.templates.histogram_cell_class = function(start_date, end_date, resource, tasks) {};\n\tgantt.templates.histogram_cell_label = function(start_date, end_date, resource, tasks) {\n\t\treturn tasks.length + \"/3\";\n\t};\n\tgantt.templates.histogram_cell_allocated = function(start_date, end_date, resource, tasks) {\n\t\treturn tasks.length / 3;\n\t};\n\tgantt.templates.histogram_cell_capacity = function(start_date, end_date, resource, tasks) {\n\t\treturn 0;\n\t};\n\n\n\n\tgantt.templates.resource_cell_class = function(start, end, resource, tasks) {\n\t\tvar css = \"\";\n\t\tif (tasks.length <= 1) {\n\t\t\tcss = \"gantt_resource_marker_ok\";\n\t\t} else {\n\t\t\tcss = \"gantt_resource_marker_overtime\";\n\t\t}\n\t\treturn css;\n\t};\n\n\tgantt.templates.resource_cell_value = function(start, end, resource, tasks) {\n\t\treturn tasks.length * 8;\n\t};\n};\n\n\n","if (window.dhtmlx){\n\n\tif (!window.dhtmlx.attaches)\n\twindow.dhtmlx.attaches = {};\n\n\twindow.dhtmlx.attaches.attachGantt=function(start, end, gantt){\n\t\tvar obj = document.createElement(\"DIV\");\n\n\t\tgantt = gantt || window.gantt;\n\n\t\tobj.id = \"gantt_\"+ gantt.uid();\n\t\tobj.style.width = \"100%\";\n\t\tobj.style.height = \"100%\";\n\t\tobj.cmp = \"grid\";\n\n\t\tdocument.body.appendChild(obj);\n\t\tthis.attachObject(obj.id);\n\t\tthis.dataType = \"gantt\";\n\t\tthis.dataObj = gantt;\n\n\t\tvar that = this.vs[this.av];\n\t\tthat.grid = gantt;\n\n\t\tgantt.init(obj.id, start, end);\n\t\tobj.firstChild.style.border = \"none\";\n\n\t\tthat.gridId = obj.id;\n\t\tthat.gridObj = obj;\n\n\t\tvar method_name=\"_viewRestore\";\n\t\treturn this.vs[this[method_name]()].grid;\n\t};\n\n}\nif (typeof(window.dhtmlXCellObject) != \"undefined\") {\n\n\twindow.dhtmlXCellObject.prototype.attachGantt=function(start, end, gantt){\n\t\tgantt = gantt || window.gantt;\n\n\t\tvar obj = document.createElement(\"DIV\");\n\t\tobj.id = \"gantt_\"+gantt.uid();\n\t\tobj.style.width = \"100%\";\n\t\tobj.style.height = \"100%\";\n\t\tobj.cmp = \"grid\";\n\n\t\tdocument.body.appendChild(obj);\n\t\tthis.attachObject(obj.id);\n\n\t\tthis.dataType = \"gantt\";\n\t\tthis.dataObj = gantt;\n\n\t\tgantt.init(obj.id, start, end);\n\t\tobj.firstChild.style.border = \"none\";\n\n\t\tobj = null;\n\t\tthis.callEvent(\"_onContentAttach\",[]);\n\n\t\treturn this.dataObj;\n\t};\n}\n\nmodule.exports = null;","if (window.jQuery){\n\n\t(function( $ ){\n\n\t\tvar methods = [];\n\t\t$.fn.dhx_gantt = function(config){\n\t\t\tconfig = config || {};\n\t\t\tif (typeof(config) === 'string') {\n\t\t\t\tif (methods[config] ) {\n\t\t\t\t\treturn methods[config].apply(this, []);\n\t\t\t\t}else {\n\t\t\t\t\t$.error('Method ' +  config + ' does not exist on jQuery.dhx_gantt');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar views = [];\n\t\t\t\tthis.each(function() {\n\t\t\t\t\tif (this && this.getAttribute){\n\t\t\t\t\t\tif (!this.gantt && !(window.gantt.$root == this)){\n\n\t\t\t\t\t\t\tvar newgantt = (window.gantt.$container && window.Gantt) ? window.Gantt.getGanttInstance():window.gantt;\n\t\t\t\t\t\t\tfor (var key in config)\n\t\t\t\t\t\t\t\tif (key!=\"data\")\n\t\t\t\t\t\t\t\t\tnewgantt.config[key] = config[key];\n\n\t\t\t\t\t\t\tnewgantt.init(this);\n\t\t\t\t\t\t\tif (config.data)\n\t\t\t\t\t\t\t\tnewgantt.parse(config.data);\n\n\t\t\t\t\t\t\tviews.push(newgantt);\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tviews.push(typeof this.gantt == \"object\" ? this.gantt : window.gantt);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\n\t\t\t\tif (views.length === 1) return views[0];\n\t\t\t\treturn views;\n\t\t\t}\n\t\t};\n\n\t})(window.jQuery);\n\n}\n\n\nmodule.exports = null;","var createWbs = (function(gantt){\n\treturn {\n\t_needRecalc: true,\n\treset: function(){\n\t\tthis._needRecalc = true;\n\t},\n\t_isRecalcNeeded: function(){\n\t\treturn (!this._isGroupSort() && this._needRecalc);\n\t},\n\t_isGroupSort: function() {\n\t\treturn !!(gantt._groups && gantt._groups.is_active());\n\t},\n\t_getWBSCode: function(task) {\n\t\tif(!task) return \"\";\n\n\t\tif(this._isRecalcNeeded()){\n\t\t\tthis._calcWBS();\n\t\t}\n\n\t\tif(task.$virtual) return \"\";\n\t\tif(this._isGroupSort()) return task.$wbs || \"\";\n\n\t\tif(!task.$wbs) {\n\t\t\tthis.reset();\n\t\t\tthis._calcWBS();\n\t\t}\n\t\treturn task.$wbs;\n\t},\n\t_setWBSCode: function(task, value) {\n\t\ttask.$wbs = value;\n\t},\n\tgetWBSCode: function(task) {\n\t\treturn this._getWBSCode(task);\n\t},\n\tgetByWBSCode: function(code){\n\t\tvar parts = code.split(\".\");\n\t\tvar currentNode = gantt.config.root_id;\n\t\tfor(var i = 0; i < parts.length; i++){\n\t\t\tvar children = gantt.getChildren(currentNode);\n\t\t\tvar index = parts[i]*1 - 1;\n\t\t\tif(gantt.isTaskExists(children[index])){\n\t\t\t\tcurrentNode = children[index];\n\t\t\t}else{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\tif(gantt.isTaskExists(currentNode)){\n\t\t\treturn gantt.getTask(currentNode);\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t},\n\t_calcWBS: function() {\n\t\tif(!this._isRecalcNeeded()) return;\n\n\t\tvar _isFirst = true;\n\t\tgantt.eachTask(function(ch) {\n\t\t\tif(_isFirst) {\n\t\t\t\t_isFirst = false;\n\t\t\t\tthis._setWBSCode(ch, \"1\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar _prevSibling = gantt.getPrevSibling(ch.id);\n\t\t\tif (_prevSibling !== null) {\n\t\t\t\tvar _wbs = gantt.getTask(_prevSibling).$wbs;\n\t\t\t\tif(_wbs) {\n\t\t\t\t\t_wbs = _wbs.split(\".\");\n\t\t\t\t\t_wbs[_wbs.length-1]++;\n\t\t\t\t\tthis._setWBSCode(ch, _wbs.join(\".\"));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _parent = gantt.getParent(ch.id);\n\t\t\t\tthis._setWBSCode(ch, gantt.getTask(_parent).$wbs + \".1\");\n\t\t\t}\n\t\t}, gantt.config.root_id, this);\n\n\t\tthis._needRecalc = false;\n\t}\n};\n});\n\nmodule.exports = function(gantt){\n\tvar wbs = createWbs(gantt);\n\tgantt.getWBSCode = function getWBSCode(task) {\n\t\treturn wbs.getWBSCode(task);\n\t};\n\n\tgantt.getTaskByWBSCode = function(code) {\n\t\treturn wbs.getByWBSCode(code);\n\t};\n\n\tfunction resetCache(){\n\t\twbs.reset();\n\t\treturn true;\n\t}\n\n\tgantt.attachEvent(\"onAfterTaskMove\", resetCache);\n\tgantt.attachEvent(\"onBeforeParse\", resetCache);\n\tgantt.attachEvent(\"onAfterTaskDelete\", resetCache);\n\tgantt.attachEvent(\"onAfterTaskAdd\", resetCache);\n\tgantt.attachEvent(\"onAfterSort\", resetCache);\n\n};\n","function createMethod(gantt){\n\tvar methods = {};\n\tvar isActive = false;\n\tfunction disableMethod(methodName, dummyMethod){\n\t\tdummyMethod = typeof dummyMethod == \"function\" ? dummyMethod : function(){};\n\n\t\tif(!methods[methodName]){\n\t\t\tmethods[methodName] = this[methodName];\n\t\t\tthis[methodName] = dummyMethod;\n\t\t}\n\t}\n\tfunction restoreMethod(methodName){\n\t\tif(methods[methodName]){\n\t\t\tthis[methodName] = methods[methodName];\n\t\t\tmethods[methodName] = null;\n\t\t}\n\t}\n\tfunction disableMethods(methodsHash){\n\t\tfor(var i in methodsHash){\n\t\t\tdisableMethod.call(this, i, methodsHash[i]);\n\t\t}\n\t}\n\tfunction restoreMethods(){\n\t\tfor(var i in methods){\n\t\t\trestoreMethod.call(this, i);\n\t\t}\n\t}\n\n\tfunction batchUpdatePayload(callback){\n\t\ttry{\n\t\t\tcallback();\n\t\t}catch(e){\n\t\t\twindow.console.error(e);\n\t\t}\n\t}\n\n\tvar state = gantt.$services.getService(\"state\");\n\tstate.registerProvider(\"batchUpdate\", function(){\n\t\treturn {\n\t\t\tbatch_update: isActive\n\t\t};\n\t}, true);\n\n\treturn function batchUpdate(callback, noRedraw) {\n\t\tif(isActive){\n\t\t\t// batch mode is already active\n\t\t\tbatchUpdatePayload(callback);\n\t\t\treturn;\n\t\t}\n\n\t\tvar call_dp = (this._dp && this._dp.updateMode != \"off\");\n\t\tvar dp_mode;\n\t\tif (call_dp){\n\t\t\tdp_mode = this._dp.updateMode;\n\t\t\tthis._dp.setUpdateMode(\"off\");\n\t\t}\n\n\t\t// temporary disable some methods while updating multiple tasks\n\t\tvar resetProjects = {};\n\t\tvar methods = {\n\t\t\t\"render\":true,\n\t\t\t\"refreshData\":true,\n\t\t\t\"refreshTask\":true,\n\t\t\t\"refreshLink\":true,\n\t\t\t\"resetProjectDates\":function(task){\n\t\t\t\tresetProjects[task.id] = task;\n\t\t\t}\n\t\t};\n\n\t\tdisableMethods.call(this, methods);\n\n\t\tisActive = true;\n\t\tthis.callEvent(\"onBeforeBatchUpdate\", []);\n\n\t\tbatchUpdatePayload(callback);\n\n\t\tthis.callEvent(\"onAfterBatchUpdate\", []);\n\n\t\trestoreMethods.call(this);\n\n\t\t// do required updates after changes applied\n\t\tfor(var i in resetProjects){\n\t\t\tthis.resetProjectDates(resetProjects[i]);\n\t\t}\n\n\t\tisActive = false;\n\n\t\tif(!noRedraw){\n\t\t\tthis.render();\n\t\t}\n\n\t\tif (call_dp) {\n\t\t\tthis._dp.setUpdateMode(dp_mode);\n\t\t\tthis._dp.setGanttMode(\"tasks\");\n\t\t\tthis._dp.sendData();\n\t\t\tthis._dp.setGanttMode(\"links\");\n\t\t\tthis._dp.sendData();\n\t\t}\n\t};\n\n\n\n}\n\nmodule.exports = function(gantt){\n\tgantt.batchUpdate = createMethod(gantt);\n};","var domHelpers = require(\"../../utils/dom_helpers\");\n\nmodule.exports = function(gantt){\n\n\tvar scrollRange = 50,\n\t\tscrollStep = 30,\n\t\tscrollDelay = 10,\n\t\tscrollSpeed = 50;\n\n\tvar interval = null,\n\t\tisMove = false,\n\t\tdelayTimeout = null,\n\t\tstartPos = {\n\t\t\tstarted: false\n\t\t},\n\t\teventPos = {};\n\n\tfunction getAutoscrollContainer(){\n\t\treturn gantt.$task || gantt.$grid || gantt.$root;\n\t}\n\n\tfunction isScrollState() {\n\t\tvar dragMarker = !!document.querySelector(\".gantt_drag_marker\");\n\t\tvar isResize = !!document.querySelector(\".gantt_drag_marker.gantt_grid_resize_area\");\n\t\tvar isLink = !!document.querySelector(\".gantt_link_direction\");\n\t\tisMove = dragMarker && !isResize && !isLink;\n\t\treturn !((!gantt.getState().drag_mode && !dragMarker) || isResize);\n\t}\n\n\tfunction defineDelayTimeout(state) {\n\t\tif (delayTimeout) {\n\t\t\tclearTimeout(delayTimeout);\n\t\t\tdelayTimeout = null;\n\t\t}\n\t\tif (state) {\n\t\t\tvar speed = gantt.config.autoscroll_speed;\n\t\t\tif (speed && speed < 10) // limit speed value to 10 \n\t\t\t\tspeed = 10;\n\n\t\t\tdelayTimeout = setTimeout(function() {\n\t\t\t\tinterval = setInterval(tick, speed || scrollSpeed);\n\t\t\t}, gantt.config.autoscroll_delay || scrollDelay);\n\t\t}\n\t}\n\n\tfunction defineScrollInterval(state) {\n\t\tif (state) {\n\t\t\tdefineDelayTimeout(true);\n\t\t\tif (!startPos.started) {\n\t\t\t\tstartPos.x = eventPos.x;\n\t\t\t\tstartPos.y = eventPos.y;\n\t\t\t\tstartPos.started = true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (interval) {\n\t\t\t\tclearInterval(interval);\n\t\t\t\tinterval = null;\n\t\t\t}\n\t\t\tdefineDelayTimeout(false);\n\t\t\tstartPos.started = false;\n\t\t}\n\t}\n\n\tfunction autoscrollInterval(event) {\n\n\t\tvar isScroll = isScrollState();\n\n\t\tif ((interval || delayTimeout) && !isScroll) { \n\t\t\tdefineScrollInterval(false);\n\t\t}\n\n\t\tif (!gantt.config.autoscroll || !isScroll) {\n\t\t\treturn false;\n\t\t}\n\n\t\teventPos = {\n\t\t\tx: event.clientX,\n\t\t\ty: event.clientY\n\t\t};\n\n\t\tif (!interval && isScroll) {\n\t\t\tdefineScrollInterval(true);\n\t\t}\n\t}\n\n\tfunction tick() {\n\n\t\tif (!isScrollState()) {\n\t\t\tdefineScrollInterval(false);\n\t\t\treturn false;\n\t\t}\n\n\t\tvar box = domHelpers.getNodePosition(getAutoscrollContainer());\n\t\tvar posX = eventPos.x - box.x; \n\t\tvar posY = eventPos.y - box.y;\n\n\t\tvar scrollLeft = isMove ? 0 : need_scroll(posX, box.width, startPos.x - box.x);\n\t\tvar scrollTop = need_scroll(posY, box.height, startPos.y - box.y);\n\n\t\tvar scrollState = gantt.getScrollState();\n\n\t\tvar currentScrollTop = scrollState.y,\n\t\t\tscrollOuterHeight = scrollState.inner_height,\n\t\t\tscrollInnerHeight = scrollState.height,\n\t\t\tcurrentScrollLeft = scrollState.x,\n\t\t\tscrollOuterWidth = scrollState.inner_width,\n\t\t\tscrollInnerWidth = scrollState.width;\n\n\t\t// do scrolling only if we have scrollable area to do so\n\t\tif (scrollTop && !scrollOuterHeight) {\n\t\t\tscrollTop = 0;\n\t\t} else if (scrollTop < 0 && !currentScrollTop) {\n\t\t\tscrollTop = 0;\n\t\t} else if (scrollTop > 0 && currentScrollTop + scrollOuterHeight >= scrollInnerHeight + 2) {\n\t\t\tscrollTop = 0;\n\t\t}\n\n\t\tif (scrollLeft && !scrollOuterWidth) {\n\t\t\tscrollLeft = 0;\n\t\t} else if (scrollLeft < 0 && !currentScrollLeft) {\n\t\t\tscrollLeft = 0;\n\t\t} else if (scrollLeft > 0 && currentScrollLeft + scrollOuterWidth >= scrollInnerWidth) {\n\t\t\tscrollLeft = 0;\n\t\t}\n\n\t\tvar step = gantt.config.autoscroll_step;\n\n\t\tif (step && step < 2) // limit step value to 2\n\t\t\tstep = 2;\n\n\t\tscrollLeft = scrollLeft * (step || scrollStep);\n\t\tscrollTop = scrollTop * (step || scrollStep);\n\n\t\tif (scrollLeft || scrollTop) {\n\t\t\tscroll(scrollLeft, scrollTop);\n\t\t} \n\n\t}\n\n\tfunction need_scroll(pos, boxSize, startCoord) {\n\t\tif ((pos - scrollRange < 0) && (pos < startCoord))\n\t\t\treturn -1;\n\t\telse if ((pos > boxSize - scrollRange) && (pos > startCoord))\n\t\t\treturn 1;\n\t\treturn 0;\n\t}\n\n\tfunction scroll(left, top) {\n\t\tvar scrollState = gantt.getScrollState();\n\n\t\tvar scrollLeft = null,\n\t\t\tscrollTop = null;\n\n\t\tif (left) {\n\t\t\tscrollLeft = scrollState.x + left;\n\t\t\tscrollLeft = Math.min(scrollState.width, scrollLeft);\n\t\t\tscrollLeft = Math.max(0, scrollLeft);\n\t\t}\n\n\t\tif (top) {\n\t\t\tscrollTop = scrollState.y + top;\n\t\t\tscrollTop = Math.min(scrollState.height, scrollTop);\n\t\t\tscrollTop = Math.max(0, scrollTop);\n\t\t}\n\n\t\tgantt.scrollTo(scrollLeft, scrollTop);\n\t}\n\n\tgantt.attachEvent(\"onGanttReady\", function() {\n\t\tgantt.eventRemove(document.body, \"mousemove\", autoscrollInterval);\n\t\tgantt.event(document.body, \"mousemove\", autoscrollInterval);\n\t});\n\n};","module.exports = function(gantt){\n\tvar modules = [\n\t\trequire(\"./autoscroll\"),\n\t\trequire(\"./batch_update\"),\n\t\trequire(\"./wbs\"),\n\t\trequire(\"./jquery_hooks\"),\n\t\trequire(\"./dhtmlx_hooks\"),\n\t\trequire(\"./resources\"),\n\t\trequire(\"./new_task_placeholder\"),\n\t\trequire(\"./auto_task_types\")\n\t];\n\n\tfor(var i = 0; i < modules.length; i++){\n\t\tif(modules[i])\n\t\t\tmodules[i](gantt);\n\t}\n};","var utils = require(\"../../utils/utils\");\nvar eventable = require(\"../../utils/eventable\");\n\n/**\n\t* \t@desc: constructor, data processor object \n\t*\t@param: serverProcessorURL - url used for update\n\t*\t@type: public\n\t*/\nvar dataProcessor = function (serverProcessorURL) {\n\tthis.serverProcessor = serverProcessorURL;\n\tthis.action_param = \"!nativeeditor_status\";\n\n\tthis.object = null;\n\tthis.updatedRows = []; //ids of updated rows\n\n\tthis.autoUpdate = true;\n\tthis.updateMode = \"cell\";\n\tthis._tMode = \"GET\";\n\tthis._headers = null;\n\tthis._payload = null;\n\tthis.post_delim = \"_\";\n\n\tthis._waitMode = 0;\n\tthis._in_progress = {};//?\n\tthis._invalid = {};\n\tthis.mandatoryFields = [];\n\tthis.messages = [];\n\n\tthis.styles = {\n\t\tupdated: \"font-weight:bold;\",\n\t\tinserted: \"font-weight:bold;\",\n\t\tdeleted: \"text-decoration : line-through;\",\n\t\tinvalid: \"background-color:FFE0E0;\",\n\t\tinvalid_cell: \"border-bottom:2px solid red;\",\n\t\terror: \"color:red;\",\n\t\tclear: \"font-weight:normal;text-decoration:none;\"\n\t};\n\n\tthis.enableUTFencoding(true);\n\teventable(this);\n\n\treturn this;\n};\n\ndataProcessor.prototype = {\n\tsetTransactionMode: function (mode, total) {\n\t\tif (typeof mode == \"object\") {\n\t\t\tthis._tMode = mode.mode || this._tMode;\n\n\t\t\tif (utils.defined(mode.headers)) {\n\t\t\t\tthis._headers = mode.headers;\n\t\t\t}\n\n\t\t\tif (utils.defined(mode.payload)) {\n\t\t\t\tthis._payload = mode.payload;\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis._tMode = mode;\n\t\t\tthis._tSend = total;\n\t\t}\n\n\t\tif (this._tMode == \"REST\") {\n\t\t\tthis._tSend = false;\n\t\t\tthis._endnm = true;\n\t\t}\n\n\t\tif (this._tMode == \"JSON\" || this._tMode == \"REST-JSON\") {\n\t\t\tthis._tSend = false;\n\t\t\tthis._endnm = true;\n\t\t\tthis._serialize_as_json = true;\n\t\t\tthis._headers = this._headers || {};\n\t\t\tthis._headers[\"Content-type\"] = \"application/json\";\n\t\t}\n\t},\n\tescape: function (data) {\n\t\tif (this._utf)\n\t\t\treturn encodeURIComponent(data);\n\t\telse\n\t\t\treturn escape(data);\n\t},\n    /**\n\t* \t@desc: allows to set escaping mode\n\t*\t@param: true - utf based escaping, simple - use current page encoding\n\t*\t@type: public\n\t*/\n\tenableUTFencoding: function (mode) {\n\t\tthis._utf = !!mode;\n\t},\n    /**\n\t* \t@desc: allows to define, which column may trigger update\n\t*\t@param: val - array or list of true/false values\n\t*\t@type: public\n\t*/\n\tsetDataColumns: function (val) {\n\t\tthis._columns = (typeof val == \"string\") ? val.split(\",\") : val;\n\t},\n    /**\n\t* \t@desc: get state of updating\n\t*\t@returns:   true - all in sync with server, false - some items not updated yet.\n\t*\t@type: public\n\t*/\n\tgetSyncState: function () {\n\t\treturn !this.updatedRows.length;\n\t},\n\t/**\n\t* \t@desc: enable/disable named field for data syncing, will use column ids for grid\n\t*\t@param:   mode - true/false\n\t*\t@type: public\n\t*/\n\tenableDataNames: function (mode) {\n\t\tthis._endnm = !!mode;\n\t},\n\t/**\n\t* \t@desc: enable/disable mode , when only changed fields and row id send to the server side, instead of all fields in default mode\n\t*\t@param:   mode - true/false\n\t*\t@type: public\n\t*/\n\tenablePartialDataSend: function (mode) {\n\t\tthis._changed = !!mode;\n\t},\n\t/**\n\t* \t@desc: set if rows should be send to server automaticaly\n\t*\t@param: mode - \"row\" - based on row selection changed, \"cell\" - based on cell editing finished, \"off\" - manual data sending\n\t*\t@type: public\n\t*/\n\tsetUpdateMode: function (mode, dnd) {\n\t\tthis.autoUpdate = (mode == \"cell\");\n\t\tthis.updateMode = mode;\n\t\tthis.dnd = dnd;\n\t},\n\tignore: function (code, master) {\n\t\tthis._silent_mode = true;\n\t\tcode.call(master || window);\n\t\tthis._silent_mode = false;\n\t},\n\t/**\n\t* \t@desc: mark row as updated/normal. check mandatory fields,initiate autoupdate (if turned on)\n\t*\t@param: rowId - id of row to set update-status for\n\t*\t@param: state - true for \"updated\", false for \"not updated\"\n\t*\t@param: mode - update mode name\n\t*\t@type: public\n\t*/\n\tsetUpdated: function (rowId, state, mode) {\n\t\tif (this._silent_mode) return;\n\t\tvar ind = this.findRow(rowId);\n\n\t\tmode = mode || \"updated\";\n\t\tvar existing = this.obj.getUserData(rowId, this.action_param);\n\t\tif (existing && mode == \"updated\") mode = existing;\n\t\tif (state) {\n\t\t\tthis.set_invalid(rowId, false); //clear previous error flag\n\t\t\tthis.updatedRows[ind] = rowId;\n\t\t\tthis.obj.setUserData(rowId, this.action_param, mode);\n\t\t\tif (this._in_progress[rowId])\n\t\t\t\tthis._in_progress[rowId] = \"wait\";\n\t\t} else {\n\t\t\tif (!this.is_invalid(rowId)) {\n\t\t\t\tthis.updatedRows.splice(ind, 1);\n\t\t\t\tthis.obj.setUserData(rowId, this.action_param, \"\");\n\t\t\t}\n\t\t}\n\n\t\t//clear changed flag\n\t\tif (!state)\n\t\t\tthis._clearUpdateFlag(rowId);\n\n\t\tthis.markRow(rowId, state, mode);\n\t\tif (state && this.autoUpdate) this.sendData(rowId);\n\t},\n\t_clearUpdateFlag: function (id) { },\n\tmarkRow: function (id, state, mode) {\n\t\tvar str = \"\";\n\t\tvar invalid = this.is_invalid(id);\n\t\tif (invalid) {\n\t\t\tstr = this.styles[invalid];\n\t\t\tstate = true;\n\t\t}\n\t\tif (this.callEvent(\"onRowMark\", [id, state, mode, invalid])) {\n\t\t\t//default logic\n\t\t\tstr = this.styles[state ? mode : \"clear\"] + str;\n\n\t\t\tthis.obj[this._methods[0]](id, str);\n\n\t\t\tif (invalid && invalid.details) {\n\t\t\t\tstr += this.styles[invalid + \"_cell\"];\n\t\t\t\tfor (var i = 0; i < invalid.details.length; i++)\n\t\t\t\t\tif (invalid.details[i])\n\t\t\t\t\t\tthis.obj[this._methods[1]](id, i, str);\n\t\t\t}\n\t\t}\n\t},\n\tgetState: function (id) {\n\t\treturn this.obj.getUserData(id, this.action_param);\n\t},\n\tis_invalid: function (id) {\n\t\treturn this._invalid[id];\n\t},\n\tset_invalid: function (id, mode, details) {\n\t\tif (details) mode = {\n\t\t\tvalue: mode,\n\t\t\tdetails: details,\n\t\t\ttoString: function () {\n\t\t\t\treturn this.value.toString();\n\t\t\t}\n\t\t};\n\t\tthis._invalid[id] = mode;\n\t},\n\t/**\n\t* \t@desc: check mandatory fields and varify values of cells, initiate update (if specified)\n\t*\t@param: rowId - id of row to set update-status for\n\t*\t@type: public\n\t*/\n\tcheckBeforeUpdate: function (rowId) {\n\t\treturn true;\n\t},\n\t/**\n\t* \t@desc: send row(s) values to server\n\t*\t@param: rowId - id of row which data to send. If not specified, then all \"updated\" rows will be send\n\t*\t@type: public\n\t*/\n\tsendData: function (rowId) {\n\t\tif (this._waitMode && (this.obj.mytype == \"tree\" || this.obj._h2)) return;\n\t\tif (this.obj.editStop) this.obj.editStop();\n\n\n\t\tif (typeof rowId == \"undefined\" || this._tSend) return this.sendAllData();\n\t\tif (this._in_progress[rowId]) return false;\n\n\t\tthis.messages = [];\n\t\tif (!this.checkBeforeUpdate(rowId) && this.callEvent(\"onValidationError\", [rowId, this.messages])) return false;\n\t\tthis._beforeSendData(this._getRowData(rowId), rowId);\n\t},\n\t_beforeSendData: function (data, rowId) {\n\t\tif (!this.callEvent(\"onBeforeUpdate\", [rowId, this.getState(rowId), data])) return false;\n\t\tthis._sendData(data, rowId);\n\t},\n\tserialize: function (data, id) {\n\t\tif (this._serialize_as_json) {\n\t\t\treturn  this._serializeAsJSON(data);\n\t\t}\n\n\t\tif (typeof data == \"string\")\n\t\t\treturn data;\n\t\tif (typeof id != \"undefined\")\n\t\t\treturn this.serialize_one(data, \"\");\n\t\telse {\n\t\t\tvar stack = [];\n\t\t\tvar keys = [];\n\t\t\tfor (var key in data)\n\t\t\t\tif (data.hasOwnProperty(key)) {\n\t\t\t\t\tstack.push(this.serialize_one(data[key], key + this.post_delim));\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\tstack.push(\"ids=\" + this.escape(keys.join(\",\")));\n\t\t\tif (this.$gantt.security_key)\n\t\t\t\tstack.push(\"dhx_security=\" + this.$gantt.security_key);\n\t\t\treturn stack.join(\"&\");\n\t\t}\n\t},\n\n\t_serializeAsJSON: function (data) {\n\t\tif (typeof data == \"string\")\n\t\t\treturn data;\n\n\t\tvar copy = utils.copy(data);\n\t\tif(this._tMode == \"REST-JSON\"){\n\t\t\tdelete copy.id;\n\t\t\tdelete copy[this.action_param];\n\t\t}\n\n\t\treturn JSON.stringify(copy);\n\t},\n\n\tserialize_one: function (data, pref) {\n\t\tif (typeof data == \"string\")\n\t\t\treturn data;\n\t\tvar stack = [];\n\t\tvar serialized = \"\";\n\t\tfor (var key in data)\n\t\t\tif (data.hasOwnProperty(key)) {\n\t\t\t\tif ((key == \"id\" || key == this.action_param) && this._tMode == \"REST\") continue;\n\t\t\t\tif (typeof data[key] === \"string\" || typeof data[key] === \"number\") {\n\t\t\t\t\tserialized = data[key];\n\t\t\t\t} else {\n\t\t\t\t\tserialized = JSON.stringify(data[key]);\n\t\t\t\t}\n\t\t\t\tstack.push(this.escape((pref || \"\") + key) + \"=\" + this.escape(serialized));\n\t\t\t}\n\t\treturn stack.join(\"&\");\n\t},\n\t_applyPayload: function (url) {\n\t\tvar ajax = this.$gantt.ajax;\n\t\tif (this._payload)\n\t\t\tfor (var key in this._payload)\n\t\t\t\turl = url + ajax.urlSeparator(url) + this.escape(key) + \"=\" + this.escape(this._payload[key]);\n\t\treturn url;\n\t},\n\t_sendData: function (a1, rowId) {\n\t\tif (!a1) return; //nothing to send\n\t\tif (!this.callEvent(\"onBeforeDataSending\", rowId ? [rowId, this.getState(rowId), a1] : [null, null, a1])) return false;\n\n\t\tif (rowId)\n\t\t\tthis._in_progress[rowId] = (new Date()).valueOf();\n\n\t\tvar _this = this;\n\n\t\tvar ajax = this.$gantt.ajax;\n\n\t\tvar queryParams = {\n\t\t\tcallback: function (xml) {\n\t\t\t\tvar ids = [];\n\t\t\t\tvar key;\n\n\t\t\t\tif (rowId)\n\t\t\t\t\tids.push(rowId);\n\t\t\t\telse if (a1)\n\t\t\t\t\tfor (key in a1)\n\t\t\t\t\t\tids.push(key);\n\n\t\t\t\treturn _this.afterUpdate(_this, xml, ids);\n\t\t\t},\n\t\t\theaders: this._headers\n\t\t};\n\n\t\tvar a3 = this.serverProcessor + (this._user ? (ajax.urlSeparator(this.serverProcessor) + [\"dhx_user=\" + this._user, \"dhx_version=\" + this.obj.getUserData(0, \"version\")].join(\"&\")) : \"\");\n\t\tvar a4 = this._applyPayload(a3);\n\n\t\tswitch (this._tMode) {\n\t\t\tcase \"GET\":\n\t\t\t\tqueryParams.url = a4 + ajax.urlSeparator(a4) + this.serialize(a1, rowId);\n\t\t\t\tqueryParams.method = \"GET\";\n\t\t\t\tbreak;\n\t\t\tcase \"POST\":\n\t\t\t\tqueryParams.url = a4;\n\t\t\t\tqueryParams.method = \"POST\";\n\t\t\t\tqueryParams.data = this.serialize(a1, rowId);\n\t\t\t\tbreak;\n\t\t\tcase \"JSON\":\n\t\t\t\tvar data = {};\n\t\t\t\tfor (var key in a1) {\n\t\t\t\t\tif (key === this.action_param || key === \"id\" || key === \"gr_id\") continue;\n\t\t\t\t\tdata[key] = a1[key];\n\t\t\t\t}\n\n\t\t\t\tqueryParams.url = a4;\n\t\t\t\tqueryParams.method = \"POST\";\n\t\t\t\tqueryParams.data = JSON.stringify({\n\t\t\t\t\tid: rowId,\n\t\t\t\t\taction: a1[this.action_param],\n\t\t\t\t\tdata: data\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"REST\":\n\t\t\tcase \"REST-JSON\":\n\t\t\t\tvar url = a3.replace(/(&|\\?)editing=true/, \"\");\n\t\t\t\tdata = \"\";\n\n\t\t\t\tswitch (this.getState(rowId)) {\n\t\t\t\t\tcase \"inserted\":\n\t\t\t\t\t\tqueryParams.method = \"POST\";\n\t\t\t\t\t\tqueryParams.data = this.serialize(a1, rowId);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"deleted\":\n\t\t\t\t\t\tqueryParams.method = \"DELETE\";\n\t\t\t\t\t\turl = url + (url.slice(-1) == \"/\" ? \"\" : \"/\") + rowId;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tqueryParams.method = \"PUT\";\n\t\t\t\t\t\tqueryParams.data = this.serialize(a1, rowId);\n\t\t\t\t\t\turl = url + (url.slice(-1) == \"/\" ? \"\" : \"/\") + rowId;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tqueryParams.url = this._applyPayload(url);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tajax.query(queryParams);\n\t\tthis._waitMode++;\n\t},\n\n\t_forEachUpdatedRow: function (code) {\n\t\tvar updatedRows = this.updatedRows.slice();\n\t\tfor (var i = 0; i < updatedRows.length; i++) {\n\t\t\tvar rowId = updatedRows[i];\n\t\t\tif (this.obj.getUserData(rowId, this.action_param)) {\n\t\t\t\tcode.call(this, rowId);\n\t\t\t}\n\t\t}\n\t},\n\n\tsendAllData: function () {\n\t\tif (!this.updatedRows.length) return;\n\n\t\tthis.messages = [];\n\t\tvar valid = true;\n\n\t\tthis._forEachUpdatedRow(function (rowId) {\n\t\t\tvalid &= this.checkBeforeUpdate(rowId);\n\t\t});\n\n\t\tif (!valid && !this.callEvent(\"onValidationError\", [\"\", this.messages])) return false;\n\n\t\tif (this._tSend) {\n\t\t\tthis._sendData(this._getAllData());\n\t\t} else {\n\t\t\tvar stop = false;\n\n\t\t\t// this.updatedRows can be spliced from onBeforeUpdate via dp.setUpdated false\n\t\t\t// use an iterator instead of for(var i = 0; i < this.updatedRows; i++) then\n\t\t\tthis._forEachUpdatedRow(function (rowId) {\n\t\t\t\tif (stop) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!this._in_progress[rowId]) {\n\t\t\t\t\tif (this.is_invalid(rowId)) return;\n\t\t\t\t\tthis._beforeSendData(this._getRowData(rowId), rowId);\n\t\t\t\t\tif (this._waitMode && (this.obj.mytype == \"tree\" || this.obj._h2)) {\n\t\t\t\t\t\tstop = true; //block send all for tree\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_getAllData: function (rowId) {\n\t\tvar out = {};\n\t\tvar has_one = false;\n\n\t\tthis._forEachUpdatedRow(function (id) {\n\t\t\tif (this._in_progress[id] || this.is_invalid(id)) return;\n\t\t\tvar row = this._getRowData(id);\n\t\t\tif (!this.callEvent(\"onBeforeUpdate\", [id, this.getState(id), row])) return;\n\t\t\tout[id] = row;\n\t\t\thas_one = true;\n\t\t\tthis._in_progress[id] = (new Date()).valueOf();\n\t\t});\n\n\t\treturn has_one ? out : null;\n\t},\n\n\n\t/**\n\t* \t@desc: specify column which value should be varified before sending to server\n\t*\t@param: ind - column index (0 based)\n\t*\t@param: verifFunction - function (object) which should verify cell value (if not specified, then value will be compared to empty string). Two arguments will be passed into it: value and column name\n\t*\t@type: public\n\t*/\n\tsetVerificator: function (ind, verifFunction) {\n\t\tthis.mandatoryFields[ind] = verifFunction || (function (value) { return (value !== \"\"); });\n\t},\n\t/**\n\t* \t@desc: remove column from list of those which should be verified\n\t*\t@param: ind - column Index (0 based)\n\t*\t@type: public\n\t*/\n\tclearVerificator: function (ind) {\n\t\tthis.mandatoryFields[ind] = false;\n\t},\n\n\n\n\n\n\tfindRow: function (pattern) {\n\t\tvar i = 0;\n\t\tfor (i = 0; i < this.updatedRows.length; i++)\n\t\t\tif (pattern == this.updatedRows[i]) break;\n\t\treturn i;\n\t},\n\n\t/**\n\t* \t@desc: define custom actions\n\t*\t@param: name - name of action, same as value of action attribute\n\t*\t@param: handler - custom function, which receives a XMl response content for action\n\t*\t@type: private\n\t*/\n\tdefineAction: function (name, handler) {\n\t\tif (!this._uActions) this._uActions = [];\n\t\tthis._uActions[name] = handler;\n\t},\n\n\t/**\n*     @desc: used in combination with setOnBeforeUpdateHandler to create custom client-server transport system\n*     @param: sid - id of item before update\n*     @param: tid - id of item after up0ate\n*     @param: action - action name\n*     @type: public\n*     @topic: 0\n*/\n\tafterUpdateCallback: function (sid, tid, action, btag) {\n\t\tvar marker = sid;\n\t\tvar correct = (action != \"error\" && action != \"invalid\");\n\t\tif (!correct) this.set_invalid(sid, action);\n\t\tif ((this._uActions) && (this._uActions[action]) && (!this._uActions[action](btag)))\n\t\t\treturn (delete this._in_progress[marker]);\n\n\t\tif (this._in_progress[marker] != \"wait\")\n\t\t\tthis.setUpdated(sid, false);\n\n\t\tvar soid = sid;\n\n\t\tswitch (action) {\n\t\t\tcase \"inserted\":\n\t\t\tcase \"insert\":\n\t\t\t\tif (tid != sid) {\n\t\t\t\t\tthis.setUpdated(sid, false);\n\t\t\t\t\tthis.obj[this._methods[2]](sid, tid);\n\t\t\t\t\tsid = tid;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"delete\":\n\t\t\tcase \"deleted\":\n\t\t\t\tthis.obj.setUserData(sid, this.action_param, \"true_deleted\");\n\t\t\t\tthis.obj[this._methods[3]](sid);\n\t\t\t\tdelete this._in_progress[marker];\n\t\t\t\treturn this.callEvent(\"onAfterUpdate\", [sid, action, tid, btag]);\n\t\t}\n\n\t\tif (this._in_progress[marker] != \"wait\") {\n\t\t\tif (correct) this.obj.setUserData(sid, this.action_param, '');\n\t\t\tdelete this._in_progress[marker];\n\t\t} else {\n\t\t\tdelete this._in_progress[marker];\n\t\t\tthis.setUpdated(tid, true, this.obj.getUserData(sid, this.action_param));\n\t\t}\n\n\t\tthis.callEvent(\"onAfterUpdate\", [soid, action, tid, btag]);\n\t},\n\n\t/**\n\t* \t@desc: response from server\n\t*\t@param: xml - XMLLoader object with response XML\n\t*\t@type: private\n\t*/\n\tafterUpdate: function (that, xml, id) {\n\t\tvar ajax = this.$gantt.ajax;\n\t\t//try to use json first\n\t\tif (window.JSON) {\n\t\t\tvar tag;\n\n\t\t\ttry {\n\t\t\t\ttag = JSON.parse(xml.xmlDoc.responseText);\n\t\t\t} catch (e) {\n\n\t\t\t\t// empty response also can be processed by json handler\n\t\t\t\tif (!xml.xmlDoc.responseText.length) {\n\t\t\t\t\ttag = {};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tag) {\n\t\t\t\tvar action = tag.action || this.getState(id) || \"updated\";\n\t\t\t\tvar sid = tag.sid || id[0];\n\t\t\t\tvar tid = tag.tid || id[0];\n\t\t\t\tthat.afterUpdateCallback(sid, tid, action, tag);\n\t\t\t\tthat.finalizeUpdate();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t//xml response\n\t\tvar top = ajax.xmltop(\"data\", xml.xmlDoc); //fix incorrect content type in IE\n\t\tif (!top) return this.cleanUpdate(id);\n\t\tvar atag = ajax.xpath(\"//data/action\", top);\n\t\tif (!atag.length) return this.cleanUpdate(id);\n\n\t\tfor (var i = 0; i < atag.length; i++) {\n\t\t\tvar btag = atag[i];\n\t\t\tvar action = btag.getAttribute(\"type\");\n\t\t\tvar sid = btag.getAttribute(\"sid\");\n\t\t\tvar tid = btag.getAttribute(\"tid\");\n\n\t\t\tthat.afterUpdateCallback(sid, tid, action, btag);\n\t\t}\n\t\tthat.finalizeUpdate();\n\t},\n\tcleanUpdate: function (id) {\n\t\tif (id)\n\t\t\tfor (var i = 0; i < id.length; i++)\n\t\t\t\tdelete this._in_progress[id[i]];\n\t},\n\tfinalizeUpdate: function () {\n\t\tif (this._waitMode) this._waitMode--;\n\n\t\tif ((this.obj.mytype == \"tree\" || this.obj._h2) && this.updatedRows.length)\n\t\t\tthis.sendData();\n\t\tthis.callEvent(\"onAfterUpdateFinish\", []);\n\t\tif (!this.updatedRows.length)\n\t\t\tthis.callEvent(\"onFullSync\", []);\n\t},\n\n\n\n\n\n\t/**\n\t* \t@desc: initializes data-processor\n\t*\t@param: anObj - dhtmlxGrid object to attach this data-processor to\n\t*\t@type: public\n\t*/\n\tinit: function (anObj) {\n\t\tthis.obj = anObj;\n\t\tif (this.obj._dp_init)\n\t\t\tthis.obj._dp_init(this);\n\t},\n\n\n\tsetOnAfterUpdate: function (ev) {\n\t\tthis.attachEvent(\"onAfterUpdate\", ev);\n\t},\n\tenableDebug: function (mode) {\n\t},\n\tsetOnBeforeUpdateHandler: function (func) {\n\t\tthis.attachEvent(\"onBeforeDataSending\", func);\n\t},\n\n\n\n\t/* starts autoupdate mode\n\t\t@param interval\n\t\t\ttime interval for sending update requests\n\t*/\n\tsetAutoUpdate: function (interval, user) {\n\t\tinterval = interval || 2000;\n\n\t\tthis._user = user || (new Date()).valueOf();\n\t\tthis._need_update = false;\n\t\t//this._loader = null;\n\t\tthis._update_busy = false;\n\n\t\tthis.attachEvent(\"onAfterUpdate\", function (sid, action, tid, xml_node) {\n\t\t\tthis.afterAutoUpdate(sid, action, tid, xml_node);\n\t\t});\n\t\tthis.attachEvent(\"onFullSync\", function () {\n\t\t\tthis.fullSync();\n\t\t});\n\n\t\tvar self = this;\n\t\twindow.setInterval(function () {\n\t\t\tself.loadUpdate();\n\t\t}, interval);\n\t},\n\n\n\t/* process updating request answer\n\t\tif status == collision version is depricated\n\t\tset flag for autoupdating immidiatly\n\t*/\n\tafterAutoUpdate: function (sid, action, tid, xml_node) {\n\t\tif (action == 'collision') {\n\t\t\tthis._need_update = true;\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t},\n\n\n\t/* callback function for onFillSync event\n\t\tcall update function if it's need\n\t*/\n\tfullSync: function () {\n\t\tif (this._need_update) {\n\t\t\tthis._need_update = false;\n\t\t\tthis.loadUpdate();\n\t\t}\n\t\treturn true;\n\t},\n\n\n\t/* sends query to the server and call callback function\n\t*/\n\tgetUpdates: function (url, callback) {\n\t\tvar ajax = this.$gantt.ajax;\n\t\tif (this._update_busy)\n\t\t\treturn false;\n\t\telse\n\t\t\tthis._update_busy = true;\n\n\t\t//this._loader = this._loader || new dtmlXMLLoaderObject(true);\n\n\t\t//this._loader.async=true;\n\t\t//this._loader.waitCall=callback;\n\t\t//this._loader.loadXML(url);\n\t\tajax.get(url, callback);\n\n\t},\n\n\n\t/* returns xml node value\n\t\t@param node\n\t\t\txml node\n\t*/\n\t_v: function (node) {\n\t\tif (node.firstChild) return node.firstChild.nodeValue;\n\t\treturn \"\";\n\t},\n\n\n\t/* returns values array of xml nodes array\n\t\t@param arr\n\t\t\tarray of xml nodes\n\t*/\n\t_a: function (arr) {\n\t\tvar res = [];\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tres[i] = this._v(arr[i]);\n\t\t}\n\t\treturn res;\n\t},\n\n\n\t/* loads updates and processes them\n\t*/\n\tloadUpdate: function () {\n\t\tvar ajax = this.$gantt.ajax;\n\t\tvar self = this;\n\t\tvar version = this.obj.getUserData(0, \"version\");\n\t\tvar url = this.serverProcessor + ajax.urlSeparator(this.serverProcessor) + [\"dhx_user=\" + this._user, \"dhx_version=\" + version].join(\"&\");\n\t\turl = url.replace(\"editing=true&\", \"\");\n\t\tthis.getUpdates(url, function (xml) {\n\t\t\tvar vers = ajax.xpath(\"//userdata\", xml);\n\t\t\tself.obj.setUserData(0, \"version\", self._v(vers[0]));\n\n\t\t\tvar upds = ajax.xpath(\"//update\", xml);\n\t\t\tif (upds.length) {\n\t\t\t\tself._silent_mode = true;\n\n\t\t\t\tfor (var i = 0; i < upds.length; i++) {\n\t\t\t\t\tvar status = upds[i].getAttribute('status');\n\t\t\t\t\tvar id = upds[i].getAttribute('id');\n\t\t\t\t\tvar parent = upds[i].getAttribute('parent');\n\t\t\t\t\tswitch (status) {\n\t\t\t\t\t\tcase 'inserted':\n\t\t\t\t\t\t\tself.callEvent(\"insertCallback\", [upds[i], id, parent]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'updated':\n\t\t\t\t\t\t\tself.callEvent(\"updateCallback\", [upds[i], id, parent]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'deleted':\n\t\t\t\t\t\t\tself.callEvent(\"deleteCallback\", [upds[i], id, parent]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tself._silent_mode = false;\n\t\t\t}\n\n\t\t\tself._update_busy = false;\n\t\t\tself = null;\n\t\t});\n\t},\n\n\tdestructor: function () {\n\t\tthis.callEvent(\"onDestroy\", []);\n\t\tthis.detachAllEvents();\n\n\t\tthis.updatedRows = [];\n\t\tthis._in_progress = {};//?\n\t\tthis._invalid = {};\n\t\tthis._headers = null;\n\t\tthis._payload = null;\n\t\tthis.obj = null;\n\t}\n};\n\nmodule.exports = dataProcessor;","var utils = require (\"../../utils/utils\");\n\nfunction updateCallback(upd, id) {\n\tvar data = upd.data || this.xml._xmlNodeToJSON(upd.firstChild);\n\tif(!this.isTaskExists(id))\n\t\treturn;\n\tvar objData = this.getTask(id);\n\tfor(var key in data) {\n\t\tvar property = data[key];\n\t\tswitch(key) {\n\t\t\tcase \"id\":\n\t\t\t\tcontinue;\n\t\t\tcase \"start_date\":\n\t\t\tcase \"end_date\":\n\t\t\t\tproperty = this.templates.xml_date(property);\n\t\t\t\tbreak;\n\t\t\tcase \"duration\":\n\t\t\t\tobjData.end_date = this.calculateEndDate({start_date: objData.start_date, duration: property, task:objData});\n\t\t\t\tbreak;\n\t\t}\n\t\tobjData[key] = property;\n\t}\n\tthis.updateTask(id);\n\tthis.refreshData();\n}\n\nfunction insertCallback(upd, id, parent, mode) {\n\tvar data = upd.data || this.xml._xmlNodeToJSON(upd.firstChild),\n\t\tmethods = {\n\t\t\tadd: this.addTask,\n\t\t\tisExist: this.isTaskExists\n\t\t};\n\tif(mode == \"links\") {\n\t\tmethods.add = this.addLink;\n\t\tmethods.isExist = this.isLinkExists;\n\t}\n\tif(methods.isExist.call(this, id))\n\t\treturn;\n\tdata.id = id;\n\tmethods.add.call(this, data);\n}\n\nfunction deleteCallback(upd, id, parent, mode) {\n\tvar methods = {\n\t\t\"delete\": this.deleteTask,\n\t\t\"isExist\": this.isTaskExists\n\t};\n\tif(mode == \"links\") {\n\t\tmethods[\"delete\"] = this.deleteLink;\n\t\tmethods.isExist = this.isLinkExists;\n\t}\n\tif(methods.isExist.call(this, id))\n\t\tmethods[\"delete\"].call(this, id);\n}\n\nfunction patchDataProcessor(gantt, dataprocessor){\n\tdataprocessor.attachEvent(\"insertCallback\", utils.bind(insertCallback, gantt));\n\tdataprocessor.attachEvent(\"updateCallback\",  utils.bind(updateCallback, gantt));\n\tdataprocessor.attachEvent(\"deleteCallback\",  utils.bind(deleteCallback, gantt));\n}\n\nmodule.exports = patchDataProcessor;","var liveUpdateHooks = require(\"./live_update_hooks\");\nvar helpers = require(\"../../utils/helpers\");\n\nfunction addDataProcessorHooks(gantt) {\n\n\tgantt.dataProcessor = require(\"./dataprocessor\");\n\n\tfunction detachDataProcessor(gantt, dp){\n\t\tdelete dp.$gantt;\n\t\tdelete dp.setGanttMode;\n\t\tdelete dp._getRowData;\n\t\tdp.afterUpdate = oldAfterUpdate;\n\n\t\tdelete gantt._dp;\n\t\tdelete gantt._change_id;\n\t\tdelete gantt._row_style;\n\t\tdelete gantt._delete_task;\n\t\tdelete gantt._sendTaskOrder;\n\n\t\thelpers.forEach(dataProcessorHandlers, function(e){\n\t\t\tgantt.detachEvent(e);\n\t\t});\n\t\tdataProcessorHandlers = [];\n\t}\n\n\tvar oldAfterUpdate;\n\tfunction extendDataProcessor(gantt, dp){\n\t\tdp.setGanttMode = function(mode){\n\t\t\tvar modes = dp.modes || {};\n\t\t\tif(dp._ganttMode){\n\t\t\t\tmodes[dp._ganttMode] = {\n\t\t\t\t\t_in_progress : dp._in_progress,\n\t\t\t\t\t_invalid : dp._invalid,\n\t\t\t\t\tupdatedRows : dp.updatedRows\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar newState = modes[mode];\n\t\t\tif(!newState){\n\t\t\t\tnewState = modes[mode] = {\n\t\t\t\t\t_in_progress : {},\n\t\t\t\t\t_invalid : {},\n\t\t\t\t\tupdatedRows : []\n\t\t\t\t};\n\t\t\t}\n\t\t\tdp._in_progress = newState._in_progress;\n\t\t\tdp._invalid = newState._invalid;\n\t\t\tdp.updatedRows = newState.updatedRows;\n\t\t\tdp.modes = modes;\n\t\t\tdp._ganttMode = mode;\n\t\t};\n\n\t\toldAfterUpdate = dp.afterUpdate;\n\t\tdp.afterUpdate = function(){\n\t\t\tvar xml;\n\t\t\tif(arguments.length == 3){\n\t\t\t\txml = arguments[1];\n\t\t\t}else{\n\t\t\t\t// old dataprocessor\n\t\t\t\txml = arguments[4];\n\t\t\t}\n\t\t\tvar mode = dp._ganttMode;\n\t\t\tvar reqUrl = xml.filePath;\n\n\t\t\tif(this._tMode != \"REST\" && this._tMode != \"REST-JSON\"){\n\t\t\t\tif (reqUrl.indexOf(\"gantt_mode=links\") != -1) {\n\t\t\t\t\tmode = \"links\";\n\t\t\t\t}else{\n\t\t\t\t\tmode = \"tasks\";\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tif(reqUrl.indexOf(\"/link\") > reqUrl.indexOf(\"/task\")){\n\t\t\t\t\tmode = \"links\";\n\t\t\t\t}else{\n\t\t\t\t\tmode = \"tasks\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tdp.setGanttMode(mode);\n\n\t\t\tvar res = oldAfterUpdate.apply(dp, arguments);\n\t\t\tdp.setGanttMode(mode);\n\t\t\treturn res;\n\t\t};\n\n\t\tdp._getRowData=gantt.bind(function(id, pref) {\n\t\t\tvar task;\n\t\t\tif (dp._ganttMode == \"tasks\")\n\t\t\t\ttask = this.isTaskExists(id) ? this.getTask(id) : { id: id };\n\t\t\telse\n\t\t\t\ttask = this.isLinkExists(id) ? this.getLink(id) : { id: id };\n\n\t\t\ttask = gantt.copy(task);\n\n\t\t\tvar data = {};\n\t\t\tfor (var key in task) {\n\t\t\t\tif (key.substr(0, 1) == \"$\") continue;\n\t\t\t\tvar value = task[key];\n\t\t\t\tif (helpers.isDate(value))\n\t\t\t\t\tdata[key] = this.templates.xml_format(value);\n\t\t\t\telse if(value === null)\n\t\t\t\t\tdata[key] = \"\";\n\t\t\t\telse\n\t\t\t\t\tdata[key] = value;\n\t\t\t}\n\n\t\t\tvar taskTiming = this._get_task_timing_mode(task);\n\t\t\tif(taskTiming.$no_start){\n\t\t\t\ttask.start_date = \"\";\n\t\t\t\ttask.duration = \"\";\n\t\t\t}\n\t\t\tif(taskTiming.$no_end){\n\t\t\t\ttask.end_date = \"\";\n\t\t\t\ttask.duration = \"\";\n\t\t\t}\n\t\t\tdata[dp.action_param] = this.getUserData(id, dp.action_param);\n\t\t\treturn data;\n\t\t}, gantt);\n\t}\n\n\tfunction extendGantt(gantt, dp){\n\t\tgantt._change_id = gantt.bind(function(oldid, newid) {\n\t\t\tif (dp._ganttMode != \"tasks\")\n\t\t\t\tthis.changeLinkId(oldid, newid);\n\t\t\telse\n\t\t\t\tthis.changeTaskId(oldid, newid);\n\t\t}, this);\n\n\t\tgantt._row_style = function(row_id, classname){\n\t\t\tif (dp._ganttMode != \"tasks\") return;\n\t\t\tif(!gantt.isTaskExists(row_id))\n\t\t\t\treturn;\n\n\t\t\tvar task = gantt.getTask(row_id);\n\t\t\ttask.$dataprocessor_class = classname;\n\t\t\tgantt.refreshTask(row_id);\n\t\t};\n\n\t\t// fake method for dataprocessor\n\t\tgantt._delete_task = function(row_id, node){};\n\n\t\tgantt._sendTaskOrder = function(id, item){\n\t\t\tif(item.$drop_target){\n\t\t\t\tdp.setGanttMode(\"tasks\");\n\t\t\t\tthis.getTask(id).target = item.$drop_target;\n\t\t\t\tdp.setUpdated(id, true,\"order\");\n\t\t\t\tdelete this.getTask(id).$drop_target;\n\t\t\t}\n\t\t};\n\n\t\tthis._dp = dp;\n\t}\n\n\tfunction attachDataProcessorEvents(gantt, dp){\n\t\tfunction clientSideDelete(id){\n\t\t\tvar updated = dp.updatedRows.slice();\n\t\t\tvar clientOnly = false;\n\n\t\t\tfor(var i = 0; i < updated.length && !dp._in_progress[id]; i++){\n\t\t\t\tif(updated[i] == id ){\n\t\t\t\t\tif(gantt.getUserData(id, \"!nativeeditor_status\") == \"inserted\"){\n\t\t\t\t\t\tclientOnly = true;\n\t\t\t\t\t}\n\t\t\t\t\tdp.setUpdated(id,false);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn clientOnly;\n\t\t}\n\n\t\tfunction getTaskLinks(task){\n\t\t\tvar links = [];\n\n\t\t\tif (task.$source) {\n\t\t\t\tlinks = links.concat(task.$source);\n\t\t\t}\n\t\t\tif (task.$target) {\n\t\t\t\tlinks = links.concat(task.$target);\n\t\t\t}\n\n\t\t\treturn links;\n\t\t}\n\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterTaskAdd\", function(id, item) {\n\t\t\tif(gantt.isTaskExists(id)){\n\t\t\t\tdp.setGanttMode(\"tasks\");\n\t\t\t\tdp.setUpdated(id,true,\"inserted\");\n\t\t\t}\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterTaskUpdate\", function(id, item) {\n\t\t\tif(gantt.isTaskExists(id)){\n\t\t\t\tdp.setGanttMode(\"tasks\");\n\t\t\t\tdp.setUpdated(id,true);\n\n\t\t\t\tgantt._sendTaskOrder(id, item);\n\t\t\t}\n\t\t}));\n\n\t\tvar treeHelper = require(\"../../utils/task_tree_helpers\");\n\t\tvar cascadeDelete = {};\n\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onBeforeTaskDelete\", function(id, item){\n\t\t\tif(!gantt.config.cascade_delete){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tcascadeDelete[id] = {\n\t\t\t\ttasks: treeHelper.getSubtreeTasks(gantt, id),\n\t\t\t\tlinks: treeHelper.getSubtreeLinks(gantt, id)\n\t\t\t};\n\t\t\treturn true;\n\t\t}));\n\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterTaskDelete\", function(id, item) {\n\t\t\tdp.setGanttMode(\"tasks\");\n\n\t\t\t// not send delete request if item is not inserted into the db - just remove it from the client\n\t\t\tvar needDbDelete = !clientSideDelete(id);\n\t\t\tif(!needDbDelete)\n\t\t\t\treturn;\n\t\t\t\n\t\t\tif(gantt.config.cascade_delete && cascadeDelete[id]){\n\t\t\t\tvar dpMode = dp.updateMode;\n\t\t\t\tdp.setUpdateMode(\"off\");\n\n\t\t\t\tvar cascade = cascadeDelete[id];\n\t\t\t\tfor(var i in cascade.tasks){\n\t\t\t\t\tif(!clientSideDelete(i)){\n\t\t\t\t\t\tdp.setUpdated(i, true, \"deleted\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdp.setGanttMode(\"links\");\n\t\t\t\tfor(var i in cascade.links){\n\t\t\t\t\tif(!clientSideDelete(i)){\n\t\t\t\t\t\tdp.setUpdated(i, true, \"deleted\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcascadeDelete[id] = null;\n\n\t\t\t\tif(dpMode != \"off\"){\n\t\t\t\t\tdp.sendAllData();\n\t\t\t\t}\n\t\t\t\tdp.setGanttMode(\"tasks\");\n\n\t\t\t\tdp.setUpdateMode(dpMode);\n\n\t\t\t}\n\n\t\t\tdp.setUpdated(id,true,\"deleted\");\n\n\t\t\tif(dp.updateMode != 'off' && !dp._tSend){\n\t\t\t\tdp.sendAllData();\n\t\t\t}\n\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterLinkUpdate\", function(id, item) {\n\t\t\tif(gantt.isLinkExists(id)){\n\t\t\t\tdp.setGanttMode(\"links\");\n\t\t\t\tdp.setUpdated(id, true);\n\t\t\t}\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterLinkAdd\", function(id, item) {\n\t\t\tif(gantt.isLinkExists(id)){\n\t\t\t\tdp.setGanttMode(\"links\");\n\t\t\t\tdp.setUpdated(id, true,\"inserted\");\n\t\t\t}\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onAfterLinkDelete\", function(id, item) {\n\t\t\tdp.setGanttMode(\"links\");\n\n\t\t\tvar needDbDelete = !clientSideDelete(id);\n\t\t\tif(!needDbDelete)\n\t\t\t\treturn;\n\n\t\t\tdp.setUpdated(id, true,\"deleted\");\n\t\t}));\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onRowDragEnd\", function(id, target) {\n\t\t\tgantt._sendTaskOrder(id, gantt.getTask(id));\n\t\t}));\n\n\t\tvar tasks = null,\n\t\t\tlinks = null;\n\t\tdataProcessorHandlers.push(this.attachEvent(\"onTaskIdChange\",function(oldId, newId){\n\t\t\tif(!dp._waitMode) return;\n\n\t\t\tvar children = gantt.getChildren(newId);\n\t\t\tif(children.length) {\n\t\t\t\ttasks = tasks || {};\n\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t\tvar ch = this.getTask(children[i]);\n\t\t\t\t\ttasks[ch.id] = ch;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar item = this.getTask(newId),\n\t\t\t\titemLinks = getTaskLinks(item);\n\n\t\t\tif(itemLinks.length) {\n\t\t\t\tlinks = links || {};\n\n\t\t\t\tfor (var i = 0; i < itemLinks.length; i++) {\n\t\t\t\t\tvar link = this.getLink(itemLinks[i]);\n\t\t\t\t\tlinks[link.id] = link;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tdp.attachEvent(\"onAfterUpdateFinish\", function(){\n\t\t\tif(tasks || links){\n\t\t\t\tgantt.batchUpdate(function(){\n\t\t\t\t\tfor(var id in tasks){\n\t\t\t\t\t\tgantt.updateTask(tasks[id].id);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(var id in links){\n\t\t\t\t\t\tgantt.updateLink(links[id].id);\n\t\t\t\t\t}\n\t\t\t\t\ttasks = null;\n\t\t\t\t\tlinks = null;\n\t\t\t\t});\n\t\t\t\tif(tasks) {\n\t\t\t\t\tgantt._dp.setGanttMode(\"tasks\");\n\t\t\t\t}else{\n\t\t\t\t\tgantt._dp.setGanttMode(\"links\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tdp.attachEvent(\"onBeforeDataSending\", function() {\n\t\t\tvar url = this._serverProcessor;\n\t\t\tif(this._tMode == \"REST-JSON\" || this._tMode == \"REST\"){\n\t\t\t\tvar mode = this._ganttMode.substr(0, this._ganttMode.length - 1);// links, tasks -> /link/id, /task/id\n\n\t\t\t\turl = url.substring(0, url.indexOf(\"?\") > -1 ? url.indexOf(\"?\") : url.length);\n\t\t\t\t//editing=true&\n\t\t\t\tthis.serverProcessor = url + (url.slice(-1) == \"/\" ? \"\" : \"/\") + mode;\n\t\t\t}else{\n\t\t\t\tthis.serverProcessor = url + gantt.ajax.urlSeparator(url) + \"gantt_mode=\" + this._ganttMode;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tvar dataProcessorHandlers = [];\n\n\tgantt._dp_init = function(dp) {\n\t\tgantt.assert(!this._dp, \"The dataProcessor is already attached to this gantt instance\");\n\n\t\tdp.setTransactionMode(\"POST\", true);\n\t\tdp.serverProcessor += (dp.serverProcessor.indexOf(\"?\") != -1 ? \"&\" : \"?\") + \"editing=true\";\n\t\tdp._serverProcessor = dp.serverProcessor;\n\t\tdp.$gantt = this;\n\t\tdp.styles = {\n\t\t\tupdated:\"gantt_updated\",\n\t\t\torder:\"gantt_updated\",\n\t\t\tinserted:\"gantt_inserted\",\n\t\t\tdeleted:\"gantt_deleted\",\n\t\t\tinvalid:\"gantt_invalid\",\n\t\t\terror:\"gantt_error\",\n\t\t\tclear:\"\"\n\t\t};\n\n\t\tdp._methods=[\"_row_style\",\"setCellTextStyle\",\"_change_id\",\"_delete_task\"];\n\n\t\textendDataProcessor.call(this, gantt, dp);\n\t\textendGantt.call(this, gantt, dp);\n\t\tattachDataProcessorEvents.call(this, gantt, dp);\n\n\t\tdp.attachEvent(\"onDestroy\", function(){\n\t\t\tdetachDataProcessor(gantt, dp);\n\t\t});\n\t\tliveUpdateHooks(gantt, dp);\n\n\t\tgantt.callEvent(\"onDataProcessorReady\", [dp]);\n\t};\n\n\tgantt.getUserData = function(id, name) {\n\t\tif (!this.userdata) this.userdata = {};\n\t\tif (this.userdata[id] && this.userdata[id][name]) return this.userdata[id][name];\n\t\treturn \"\";\n\t};\n\tgantt.setUserData = function(id, name, value) {\n\t\tif (!this.userdata) this.userdata = {};\n\t\tif (!this.userdata[id]) this.userdata[id] = {};\n\t\tthis.userdata[id][name] = value;\n\t};\n}\n\nmodule.exports = addDataProcessorHooks;\n","var storeRenderCreator = function(name, gantt){\n\tvar store = gantt.getDatastore(name);\n\n\tvar itemRepainter = {\n\t\trenderItem: function(id, renderer){\n\n\t\t\tvar renders = renderer.getLayers();\n\n\t\t\tvar item = store.getItem(id);\n\t\t\tif(item && store.isVisible(id)) {\n\t\t\t\tfor (var i = 0; i < renders.length; i++)\n\t\t\t\t\trenders[i].render_item(item);\n\t\t\t}\n\t\t},\n\t\trenderItems: function(renderer){\n\t\t\tvar renderers = renderer.getLayers();\n\t\t\tfor (var i = 0; i < renderers.length; i++) {\n\t\t\t\trenderers[i].clear();\n\t\t\t}\n\n\t\t\tvar data = store.getVisibleItems();\n\n\t\t\tfor (var i = 0; i < renderers.length; i++) {\n\t\t\t\trenderers[i].render_items(data);\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction skipRepaint(gantt){\n\t\tvar state = gantt.$services.getService(\"state\");\n\t\tif(state.getState(\"batchUpdate\").batch_update){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tstore.attachEvent(\"onStoreUpdated\", function(id, item, action){\n\t\tif(skipRepaint(gantt)){\n\t\t\treturn;\n\t\t}\n\n\t\tvar renderer = gantt.$services.getService(\"layers\").getDataRender(name);\n\n\t\tif(renderer){\n\t\t\tif(!id || action == \"move\" || action == \"delete\"){\n\t\t\t\tstore.callEvent(\"onBeforeRefreshAll\", []);\n\t\t\t\titemRepainter.renderItems(renderer);\n\t\t\t\tstore.callEvent(\"onAfterRefreshAll\", []);\n\t\t\t}else{\n\t\t\t\tstore.callEvent(\"onBeforeRefreshItem\", [item.id]);\n\t\t\t\titemRepainter.renderItem(item.id, renderer);\n\t\t\t\tstore.callEvent(\"onAfterRefreshItem\", [item.id]);\n\t\t\t}\n\t\t}\n\n\t});\n\n\t// TODO: probably can be done more in a more efficient way\n\tstore.attachEvent(\"onItemOpen\", function(){\n\t\tgantt.render();\n\t});\n\n\tstore.attachEvent(\"onItemClose\", function(){\n\t\tgantt.render();\n\t});\n\n\tfunction refreshId(renders, oldId, newId, item) {\n\t\tfor (var i = 0; i < renders.length; i++) {\n\t\t\trenders[i].change_id(oldId, newId);\n\t\t}\n\t}\n\n\tstore.attachEvent(\"onIdChange\", function(oldId, newId){\n\n\t\t// in case of linked datastores (tasks <-> links), id change should recalculate something in linked datastore before any repaint\n\t\t// use onBeforeIdChange for this hook.\n\t\t// TODO: use something more reasonable instead\n\t\tstore.callEvent(\"onBeforeIdChange\", [oldId, newId]);\n\n\t\tif(skipRepaint(gantt)){\n\t\t\treturn;\n\t\t}\n\t\tvar renderer = gantt.$services.getService(\"layers\").getDataRender(name);\n\t\trefreshId(renderer.getLayers(), oldId, newId, store.getItem(newId));\n\t\titemRepainter.renderItem(newId, renderer);\n\t});\n\n};\n\nmodule.exports = {\n\tbindDataStore: storeRenderCreator\n};","function createDataStoreSelectMixin(store){\n\tvar selectedId = null;\n\n\tvar deleteItem = store._removeItemInner;\n\t\n\tfunction unselect(id){\n\t\tselectedId = null;\n\t\tthis.callEvent(\"onAfterUnselect\", [id]);\n\t}\n\n\tstore._removeItemInner = function(id){\n\t\tif(selectedId == id){\n\t\t\tunselect.call(this, id);\n\t\t}\n\n\t\tif(selectedId && this.eachItem){\n\t\t\tthis.eachItem(function(subItem){\n\t\t\t\tif(subItem.id == selectedId){\n\t\t\t\t\tunselect.call(this, subItem.id);\n\t\t\t\t}\n\t\t\t}, id);\n\t\t}\n\n\t\treturn deleteItem.apply(this, arguments);\n\t};\n\n\tstore.attachEvent(\"onIdChange\", function(oldId, newId) {\n\t\tif (store.getSelectedId() == oldId) {\n\t\t\tstore.silent(function () {\n\t\t\t\tstore.unselect(oldId);\n\t\t\t\tstore.select(newId);\n\t\t\t});\n\t\t}\n\t});\n\n\treturn {\n\t\tselect: function(id){\n\t\t\tif (id){\n\n\t\t\t\tif(selectedId == id)\n\t\t\t\t\treturn selectedId;\n\n\t\t\t\tif(!this._skip_refresh) {\n\t\t\t\t\tif (!this.callEvent(\"onBeforeSelect\", [id])) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.unselect();\n\n\t\t\t\tselectedId = id;\n\n\t\t\t\tif(!this._skip_refresh) {\n\t\t\t\t\tthis.refresh(id);\n\t\t\t\t\tthis.callEvent(\"onAfterSelect\", [id]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn selectedId;\n\t\t},\n\t\tgetSelectedId: function(){\n\t\t\treturn selectedId;\n\t\t},\n\t\tunselect: function(id){\n\t\t\tvar id = id || selectedId;\n\t\t\tif(!id)\n\t\t\t\treturn;\n\t\t\tselectedId = null;\n\t\t\tif(!this._skip_refresh){\n\t\t\t\tthis.refresh(id);\n\t\t\t\tunselect.call(this, id);\n\t\t\t}\n\t\t}\n\t};\n}\n\nmodule.exports = createDataStoreSelectMixin;","var powerArray = require(\"./power_array\");\nvar utils = require(\"../../utils/utils\");\nvar DataStore = require(\"./datastore\");\n\nvar TreeDataStore = function(config){\n\tDataStore.apply(this, [config]);\n\tthis._branches = {};\n\n\tthis.pull = {};\n\tthis.$initItem = config.initItem;\n\tthis.$parentProperty = config.parentProperty || \"parent\";\n\n\tif(typeof config.rootId !== \"function\"){\n\t\tthis.$getRootId = (function(val){\n\t\t\treturn function(){return val;};\n\t\t})(config.rootId || 0);\n\t}else{\n\t\tthis.$getRootId = config.rootId;\n\t}\n\n\t// TODO: replace with live reference to gantt config\n\tthis.$openInitially = config.openInitially;\n\n\tthis.visibleOrder = powerArray.$create();\n\tthis.fullOrder = powerArray.$create();\n\tthis._searchVisibleOrder = {};\n\tthis._skip_refresh = false;\n\n\tthis.attachEvent(\"onFilterItem\", function(id, item){\n\t\tvar open = true;\n\t\tthis.eachParent(function(parent){\n\t\t\topen = open && parent.$open && !(this._isSplitItem(parent));\n\t\t}, item);\n\t\treturn !!open;\n\t});\n\n\treturn this;\n};\n\nTreeDataStore.prototype = utils.mixin({\n\n\t\t_buildTree: function(data){\n\t\t\tvar item = null;\n\t\t\tvar rootId = this.$getRootId();\n\t\t\tfor (var i = 0, len = data.length; i < len; i++){\n\t\t\t\titem = data[i];\n\t\t\t\tthis.setParent(item, this.getParent(item) || rootId);\n\t\t\t}\n\n\t\t\t// calculating $level for each item\n\t\t\tfor (var i = 0, len = data.length; i < len; i++){\n\t\t\t\titem = data[i];\n\t\t\t\tthis._add_branch(item);\n\t\t\t\titem.$level = this.calculateItemLevel(item);\n\n\t\t\t\tif (!utils.defined(item.$open)) {\n\t\t\t\t\titem.$open = utils.defined(item.open) ? item.open : this.$openInitially();\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis._updateOrder();\n\t\t},\n\t\t_isSplitItem: function(item){\n\t\t\treturn (item.render == \"split\" && this.hasChild(item.id));\n\t\t},\n\t\tparse: function(data){\n\t\t\tthis.callEvent(\"onBeforeParse\", [data]);\n\t\t\tvar loaded = this._parseInner(data);\n\t\t\tthis._buildTree(loaded);\n\t\t\tthis.filter();\n\t\t\tthis.callEvent(\"onParse\", [loaded]);\n\t\t},\n\n\t\t_addItemInner: function(item, index){\n\n\t\t\tvar parent = this.getParent(item);\n\n\t\t\tif(!utils.defined(parent)){\n\t\t\t\tparent = this.$getRootId();\n\t\t\t\tthis.setParent(item, parent);\n\t\t\t}\n\n\t\t\tvar parentIndex = this.getIndexById(parent);\n\t\t\tvar targetIndex = parentIndex + Math.min(Math.max(index, 0), this.visibleOrder.length);\n\n\t\t\tif(targetIndex*1 !== targetIndex){\n\t\t\t\ttargetIndex = undefined;\n\t\t\t}\n\t\t\tDataStore.prototype._addItemInner.call(this, item, targetIndex);\n\t\t\tthis.setParent(item, parent);\n\n\t\t\tif(item.hasOwnProperty(\"$rendered_parent\")){\n\t\t\t\tthis._move_branch(item, item.$rendered_parent);\n\t\t\t}\n\t\t\tthis._add_branch(item, index);\n\t\t},\n\t\t_changeIdInner: function(oldId, newId){\n\t\t\tvar children = this.getChildren(oldId);\n\t\t\tvar visibleOrder = this._searchVisibleOrder[oldId];\n\n\t\t\tDataStore.prototype._changeIdInner.call(this, oldId, newId);\n\n\t\t\tvar parent = this.getParent(newId);\n\n\t\t\tthis._replace_branch_child(parent, oldId, newId);\n\t\t\tfor(var i = 0; i < children.length; i++){\n\t\t\t\tthis.setParent(this.getItem(children[i]), newId);\n\t\t\t}\n\n\t\t\tthis._searchVisibleOrder[newId] = visibleOrder;\n\t\t\tdelete this._branches[oldId];\n\t\t},\n\n\t\t_traverseBranches: function(code, parent){\n\t\t\tparent = parent || this.$getRootId();\n\t\t\tvar branch = this._branches[parent];\n\t\t\tif (branch) {\n\t\t\t\tfor (var i = 0; i < branch.length; i++) {\n\t\t\t\t\tvar itemId = branch[i];\n\t\t\t\t\tcode.call(this, itemId);\n\t\t\t\t\tif (this._branches[itemId])\n\t\t\t\t\t\tthis._traverseBranches(code, itemId);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_updateOrder: function(code){\n\n\t\t\tthis.fullOrder = powerArray.$create();\n\t\t\tthis._traverseBranches(function(taskId){\n\t\t\t\tthis.fullOrder.push(taskId);\n\t\t\t});\n\n\t\t\tif(code)\n\t\t\t\tDataStore.prototype._updateOrder.call(this, code);\n\t\t},\n\n\t\t_removeItemInner: function(id){\n\n\t\t\tvar items = [];\n\t\t\tthis.eachItem(function(child){\n\t\t\t\titems.push(child);\n\t\t\t}, id);\n\n\t\t\titems.push(this.getItem(id));\n\n\t\t\tfor(var i = 0; i < items.length; i++){\n\n\t\t\t\tthis._move_branch(items[i], this.getParent(items[i]), null);\n\t\t\t\tDataStore.prototype._removeItemInner.call(this, items[i].id);\n\t\t\t\tthis._move_branch(items[i], this.getParent(items[i]), null);\n\t\t\t}\n\t\t},\n\n\t\tmove: function(sid, tindex, parent){\n\t\t\t//target id as 4th parameter\n\t\t\tvar id = arguments[3];\n\t\t\tif (id) {\n\t\t\t\tif (id === sid) return;\n\n\t\t\t\tparent = this.getParent(id);\n\t\t\t\ttindex = this.getBranchIndex(id);\n\t\t\t}\n\t\t\tif(sid == parent){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tparent = parent || this.$getRootId();\n\t\t\tvar source = this.getItem(sid);\n\t\t\tvar source_pid = this.getParent(source.id);\n\n\t\t\tvar tbranch = this.getChildren(parent);\n\n\t\t\tif (tindex == -1)\n\t\t\t\ttindex = tbranch.length + 1;\n\t\t\tif (source_pid == parent) {\n\t\t\t\tvar sindex = this.getBranchIndex(sid);\n\t\t\t\tif (sindex == tindex) return;\n\t\t\t}\n\n\t\t\tif(this.callEvent(\"onBeforeItemMove\", [sid, parent, tindex]) === false)\n\t\t\t\treturn;\n\n\t\t\tthis._replace_branch_child(source_pid, sid);\n\t\t\ttbranch = this.getChildren(parent);\n\n\t\t\tvar tid = tbranch[tindex];\n\t\t\tif (!tid) //adding as last element\n\t\t\t\ttbranch.push(sid);\n\t\t\telse\n\t\t\t\ttbranch = tbranch.slice(0, tindex).concat([ sid ]).concat(tbranch.slice(tindex));\n\n\t\t\tthis.setParent(source, parent);\n\t\t\tthis._branches[parent] = tbranch;\n\n\t\t\tvar diff = this.calculateItemLevel(source) - source.$level;\n\t\t\tsource.$level += diff;\n\t\t\tthis.eachItem(function(item){\n\t\t\t\titem.$level += diff;\n\t\t\t}, source.id, this);\n\n\n\t\t\tthis._moveInner(this.getIndexById(sid), this.getIndexById(parent) + tindex);\n\n\t\t\tthis.callEvent(\"onAfterItemMove\", [sid, parent, tindex]);\n\t\t\tthis.refresh();\n\t\t},\n\n\t\tgetBranchIndex: function(id){\n\t\t\tvar branch = this.getChildren(this.getParent(id));\n\t\t\tfor (var i = 0; i < branch.length; i++)\n\t\t\t\tif (branch[i] == id)\n\t\t\t\t\treturn i;\n\n\t\t\treturn -1;\n\t\t},\n\t\thasChild: function(id){\n\t\t\treturn (utils.defined(this._branches[id]) && this._branches[id].length);\n\t\t},\n\t\tgetChildren: function(id){\n\t\t\treturn utils.defined(this._branches[id]) ? this._branches[id] : powerArray.$create();\n\t\t},\n\n\t\tisChildOf: function(childId, parentId){\n\t\t\tif (!this.exists(childId))\n\t\t\t\treturn false;\n\t\t\tif (parentId === this.$getRootId())\n\t\t\t\treturn true;\n\n\t\t\tif (!this.hasChild(parentId))\n\t\t\t\treturn false;\n\n\t\t\tvar item = this.getItem(childId);\n\t\t\tvar pid = this.getParent(childId);\n\n\t\t\tvar parent = this.getItem(parentId);\n\t\t\tif(parent.$level >= item.$level){\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\twhile (item && this.exists(pid)) {\n\t\t\t\titem = this.getItem(pid);\n\n\t\t\t\tif (item && item.id == parentId)\n\t\t\t\t\treturn true;\n\t\t\t\tpid = this.getParent(item);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tgetSiblings: function(id){\n\t\t\tif(!this.exists(id)){\n\t\t\t\treturn powerArray.$create();\n\t\t\t}\n\t\t\tvar parent = this.getParent(id);\n\t\t\treturn this.getChildren(parent);\n\n\t\t},\n\t\tgetNextSibling: function(id){\n\t\t\tvar siblings = this.getSiblings(id);\n\t\t\tfor(var i= 0, len = siblings.length; i < len; i++){\n\t\t\t\tif(siblings[i] == id)\n\t\t\t\t\treturn siblings[i+1] || null;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tgetPrevSibling: function(id){\n\t\t\tvar siblings = this.getSiblings(id);\n\t\t\tfor(var i= 0, len = siblings.length; i < len; i++){\n\t\t\t\tif(siblings[i] == id)\n\t\t\t\t\treturn siblings[i-1] || null;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tgetParent: function(id){\n\t\t\tvar item = null;\n\t\t\tif(id.id !== undefined){\n\t\t\t\titem = id;\n\t\t\t}else{\n\t\t\t\titem = this.getItem(id);\n\t\t\t}\n\n\t\t\tvar parent;\n\t\t\tif(item){\n\t\t\t\tparent = item[this.$parentProperty];\n\t\t\t}else{\n\t\t\t\tparent = this.$getRootId();\n\t\t\t}\n\t\t\treturn parent;\n\n\t\t},\n\n\t\tclearAll: function(){\n\t\t\tthis._branches = {};\n\t\t\tDataStore.prototype.clearAll.call(this);\n\t\t},\n\n\t\tcalculateItemLevel: function(item){\n\t\t\tvar level = 0;\n\t\t\tthis.eachParent(function(){\n\t\t\t\tlevel++;\n\t\t\t}, item);\n\t\t\treturn level;\n\t\t},\n\n\t\t_setParentInner: function(item, new_pid, silent){\n\t\t\tif(!silent){\n\t\t\t\tif(item.hasOwnProperty(\"$rendered_parent\")){\n\t\t\t\t\tthis._move_branch(item, item.$rendered_parent, new_pid);\n\t\t\t\t}else{\n\t\t\t\t\tthis._move_branch(item, item[this.$parentProperty], new_pid);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsetParent: function(item, new_pid, silent){\n\t\t\tthis._setParentInner(item, new_pid, silent);\n\n\t\t\titem[this.$parentProperty] = new_pid;\n\t\t},\n\t\teachItem: function(code, parent){\n\t\t\tparent = parent || this.$getRootId();\n\n\n\t\t\tvar branch = this.getChildren(parent);\n\t\t\tif (branch)\n\t\t\t\tfor (var i=0; i<branch.length; i++){\n\t\t\t\t\tvar item = this.pull[branch[i]];\n\t\t\t\t\tcode.call(this, item);\n\t\t\t\t\tif (this.hasChild(item.id))\n\t\t\t\t\t\tthis.eachItem(code, item.id);\n\t\t\t\t}\n\t\t},\n\t\teachParent: function(code, startItem) {\n\t\t\tvar parentsHash = {};\n\t\t\tvar item = startItem;\n\t\t\tvar parent = this.getParent(item);\n\n\t\t\twhile (this.exists(parent)) {\n\t\t\t\tif (parentsHash[parent]) {\n\t\t\t\t\tthrow new Error(\"Invalid tasks tree. Cyclic reference has been detected on task \" + parent);\n\t\t\t\t}\n\t\t\t\tparentsHash[parent] = true;\n\t\t\t\titem = this.getItem(parent);\n\t\t\t\tcode.call(this, item);\n\t\t\t\tparent = this.getParent(item);\n\t\t\t}\n\t\t},\n\t\t_add_branch: function(item, index, parent){\n\t\t\tvar pid = parent === undefined ? this.getParent(item) : parent;\n\t\t\tif (!this.hasChild(pid))\n\t\t\t\tthis._branches[pid] = powerArray.$create();\n\t\t\tvar branch = this.getChildren(pid);\n\t\t\tvar added_already = false;\n\t\t\tfor(var i = 0, length = branch.length; i < length; i++){\n\t\t\t\tif(branch[i] == item.id){\n\t\t\t\t\tadded_already = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!added_already){\n\t\t\t\tif(index*1 == index){\n\n\t\t\t\t\tbranch.splice(index, 0, item.id);\n\t\t\t\t}else{\n\t\t\t\t\tbranch.push(item.id);\n\t\t\t\t}\n\n\t\t\t\titem.$rendered_parent = pid;\n\t\t\t}\n\t\t},\n\t\t_move_branch: function(item, old_parent, new_parent){\n\t\t\t//this.setParent(item, new_parent);\n\t\t\t//this._sync_parent(task);\n\t\t\tthis._replace_branch_child(old_parent, item.id);\n\t\t\tif(this.exists(new_parent) || new_parent == this.$getRootId()){\n\n\t\t\t\tthis._add_branch(item, undefined, new_parent);\n\t\t\t}else{\n\t\t\t\tdelete this._branches[item.id];\n\t\t\t}\n\t\t\titem.$level =  this.calculateItemLevel(item);\n\t\t\tthis.eachItem(function(child){\n\t\t\t\tchild.$level = this.calculateItemLevel(child);\n\t\t\t}, item.id);\n\t\t},\n\n\t\t_replace_branch_child: function(node, old_id, new_id){\n\t\t\tvar branch = this.getChildren(node);\n\t\t\tif (branch && node !== undefined){\n\t\t\t\tvar newbranch = powerArray.$create();\n\t\t\t\tfor (var i=0; i<branch.length; i++){\n\t\t\t\t\tif (branch[i] != old_id)\n\t\t\t\t\t\tnewbranch.push(branch[i]);\n\t\t\t\t\telse if (new_id)\n\t\t\t\t\t\tnewbranch.push(new_id);\n\t\t\t\t}\n\t\t\t\tthis._branches[node] = newbranch;\n\t\t\t}\n\n\t\t},\n\n\t\tsort: function(field, desc, parent){\n\t\t\tif (!this.exists(parent)) {\n\t\t\t\tparent = this.$getRootId();\n\t\t\t}\n\n\t\t\tif (!field) field = \"order\";\n\t\t\tvar criteria = (typeof(field) == \"string\") ? (function(a, b) {\n\t\t\t\tif(a[field] == b[field]){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar result = a[field] > b[field];\n\t\t\t\treturn result ? 1 : -1;\n\t\t\t}) : field;\n\n\t\t\tif (desc) {\n\t\t\t\tvar original_criteria = criteria;\n\t\t\t\tcriteria = function (a, b) {\n\t\t\t\t\treturn original_criteria(b, a);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar els = this.getChildren(parent);\n\n\t\t\tif (els){\n\t\t\t\tvar temp = [];\n\t\t\t\tfor (var i = els.length - 1; i >= 0; i--)\n\t\t\t\t\ttemp[i] = this.getItem(els[i]);\n\n\t\t\t\ttemp.sort(criteria);\n\n\t\t\t\tfor (var i = 0; i < temp.length; i++) {\n\t\t\t\t\tels[i] = temp[i].id;\n\t\t\t\t\tthis.sort(field, desc, els[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tfilter: function(rule){\n\t\t\tfor(var i  in this.pull){\n\t\t\t\tif(this.pull[i].$rendered_parent !== this.getParent(this.pull[i])){\n\t\t\t\t\tthis._move_branch(this.pull[i], this.pull[i].$rendered_parent, this.getParent(this.pull[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn DataStore.prototype.filter.apply(this, arguments);\n\t\t},\n\n\t\topen: function(id){\n\t\t\tif(this.exists(id)){\n\t\t\t\tthis.getItem(id).$open = true;\n\t\t\t\tthis.callEvent(\"onItemOpen\", [id]);\n\t\t\t}\n\t\t},\n\n\t\tclose: function(id){\n\t\t\tif(this.exists(id)){\n\t\t\t\tthis.getItem(id).$open = false;\n\t\t\t\tthis.callEvent(\"onItemClose\", [id]);\n\t\t\t}\n\t\t},\n\n\t\tdestructor: function(){\n\t\t\tDataStore.prototype.destructor.call(this);\n\t\t\tthis._branches = null;\n\t\t}\n\t},\n\tDataStore.prototype\n);\n\nmodule.exports = TreeDataStore;","var utils = require(\"../../utils/utils\");\n\n\nvar createLinksStoreFacade = function(){\n\treturn {\n\tgetLinkCount: function () {\n\t\treturn this.$data.linksStore.count();\n\t},\n\n\tgetLink : function (id) {\n\t\treturn this.$data.linksStore.getItem(id);\n\t},\n\n\tgetLinks : function () {\n\t\treturn this.$data.linksStore.getItems();\n\t},\n\n\tisLinkExists : function (id) {\n\t\treturn this.$data.linksStore.exists(id);\n\t},\n\n\taddLink : function (link) {\n\t\treturn this.$data.linksStore.addItem(link);\n\t},\n\n\tupdateLink : function (id, data) {\n\t\tif (!utils.defined(data))\n\t\t\tdata = this.getLink(id);\n\t\tthis.$data.linksStore.updateItem(id, data);\n\t},\n\n\tdeleteLink : function (id) {\n\t\treturn this.$data.linksStore.removeItem(id);\n\t},\n\n\tchangeLinkId : function (oldid, newid) {\n\t\treturn this.$data.linksStore.changeId(oldid, newid);\n\t}\n};\n};\n\nmodule.exports = createLinksStoreFacade;","var utils = require(\"../../utils/utils\");\n\nvar createTasksDatastoreFacade = function(){\n\treturn {\n\tgetTask: function (id) {\n\t\tthis.assert(id, \"Invalid argument for gantt.getTask\");\n\t\tvar task = this.$data.tasksStore.getItem(id);\n\t\tthis.assert(task, \"Task not found id=\" + id);\n\t\treturn task;\n\t},\n\tgetTaskByTime: function (from, to) {\n\t\tvar p = this.$data.tasksStore.getItems();\n\n\t\tvar res = [];\n\n\t\tif (!(from || to)) {\n\t\t\tres = p;\n\t\t} else {\n\t\t\tfrom = +from || -Infinity;\n\t\t\tto = +to || Infinity;\n\t\t\tfor (var t = 0; t < p.length; t++){\n\t\t\t\tvar task = p[t];\n\t\t\t\tif (+task.start_date < to && +task.end_date > from)\n\t\t\t\t\tres.push(task);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\tisTaskExists: function (id) {\n\t\treturn this.$data.tasksStore.exists(id);\n\t},\n\tupdateTask: function (id, item) {\n\t\tif (!utils.defined(item)) item = this.getTask(id);\n\t\tthis.$data.tasksStore.updateItem(id, item);\n\t\tif(this.isTaskExists(id))\n\t\t\tthis.refreshTask(id);\n\t},\n\taddTask: function (item, parent, index) {\n\t\tif (!utils.defined(item.id))\n\t\t\titem.id = utils.uid();\n\n\t\tif (!utils.defined(parent)) parent = this.getParent(item) || 0;\n\t\tif (!this.isTaskExists(parent)) parent = 0;\n\t\tthis.setParent(item, parent);\n\n\t\treturn this.$data.tasksStore.addItem(item, index, parent);\n\t},\n\tdeleteTask: function (id) {\n\t\treturn this.$data.tasksStore.removeItem(id);\n\t},\n\tgetTaskCount: function () {\n\t\treturn this.$data.tasksStore.count();\n\t},\n\tgetVisibleTaskCount: function () {\n\t\treturn this.$data.tasksStore.countVisible();\n\t},\n\tgetTaskIndex: function (id) {\n\t\treturn this.$data.tasksStore.getBranchIndex(id);\n\t},\n\tgetGlobalTaskIndex: function (id) {\n\t\tthis.assert(id, \"Invalid argument\");\n\t\treturn this.$data.tasksStore.getIndexById(id);\n\t},\n\teachTask: function (code, parent, master) {\n\t\treturn this.$data.tasksStore.eachItem(utils.bind(code, master||this), parent);\n\t},\n\teachParent: function (callback, startTask, master) {\n\t\treturn this.$data.tasksStore.eachParent(utils.bind(callback, master || this), startTask);\n\t},\n\tchangeTaskId: function (oldid, newid) {\n\t\tthis.$data.tasksStore.changeId(oldid, newid);\n\t\tvar task = this.$data.tasksStore.getItem(newid);\n\n\t\tvar links = [];\n\n\t\tif (task.$source) {\n\t\t\tlinks = links.concat(task.$source);\n\t\t}\n\t\tif (task.$target) {\n\t\t\tlinks = links.concat(task.$target);\n\t\t}\n\n\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\tvar link = this.getLink(links[i]);\n\t\t\tif (link.source == oldid) {\n\t\t\t\tlink.source = newid;\n\t\t\t}\n\t\t\tif (link.target == oldid) {\n\t\t\t\tlink.target = newid;\n\t\t\t}\n\t\t}\n\t},\n\tcalculateTaskLevel: function (item) {\n\t\treturn this.$data.tasksStore.calculateItemLevel(item);\n\t},\n\tgetNext: function (id) {\n\t\treturn this.$data.tasksStore.getNext(id);\n\t},\n\tgetPrev: function (id) {\n\t\treturn this.$data.tasksStore.getPrev(id);\n\t},\n\tgetParent: function (id) {\n\t\treturn this.$data.tasksStore.getParent(id);\n\t},\n\tsetParent: function (task, new_pid, silent) {\n\t\treturn this.$data.tasksStore.setParent(task, new_pid, silent);\n\t},\n\tgetSiblings: function (id) {\n\t\treturn this.$data.tasksStore.getSiblings(id).slice();\n\t},\n\tgetNextSibling: function (id) {\n\t\treturn this.$data.tasksStore.getNextSibling(id);\n\t},\n\tgetPrevSibling: function (id) {\n\t\treturn this.$data.tasksStore.getPrevSibling(id);\n\t},\n\tgetTaskByIndex: function(index){\n\t\tvar id = this.$data.tasksStore.getIdByIndex(index);\n\t\tif(this.isTaskExists(id)){\n\t\t\treturn this.getTask(id);\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t},\n\tgetChildren: function (id) {\n\t\tif(!this.hasChild(id)){\n\t\t\treturn [];\n\t\t}else{\n\t\t\treturn this.$data.tasksStore.getChildren(id).slice();\n\t\t}\n\t},\n\thasChild: function (id) {\n\t\treturn this.$data.tasksStore.hasChild(id);\n\t},\n\topen: function (id) {\n\t\tthis.$data.tasksStore.open(id);\n\t},\n\tclose: function (id) {\n\t\tthis.$data.tasksStore.close(id);\n\t},\n\tmoveTask: function (sid, tindex, parent) {\n\t\tthis.$data.tasksStore.move.apply(this.$data.tasksStore, arguments);\n\t},\n\tsort: function(field, desc, parent, silent) {\n\t\tvar render = !silent;//4th argument to cancel redraw after sorting\n\n\t\tthis.$data.tasksStore.sort(field, desc, parent);\n\t\tif (render) {\n\t\t\tthis.render();\n\t\t}\n\t\tthis.callEvent(\"onAfterSort\", [field, desc, parent]);\n\t}\n};\n};\n\nmodule.exports = createTasksDatastoreFacade;\n\n\n","var utils = require(\"../../utils/utils\");\nvar createTasksFacade = require(\"./datastore_tasks\"),\n\tcreateLinksFacade = require(\"./datastore_links\"),\n\tDataStore = require(\"../datastore/datastore\"),\n\tTreeDataStore = require(\"../datastore/treedatastore\"),\n\tcreateDatastoreSelect = require(\"../datastore/select\");\nvar datastoreRender = require(\"../datastore/datastore_render\");\n\nfunction getDatastores(){\n\tvar storeNames = this.$services.getService(\"datastores\");\n\tvar res = [];\n\tfor(var i = 0; i < storeNames.length; i++){\n\t\tres.push(this.getDatastore(storeNames[i]));\n\t}\n\treturn res;\n}\n\nvar createDatastoreFacade = function(){\n\treturn {\n\tcreateDatastore: function(config){\n\n\t\tvar $StoreType = (config.type || \"\").toLowerCase() == \"treedatastore\" ? TreeDataStore : DataStore;\n\n\t\tif(config){\n\t\t\tvar self = this;\n\t\t\tconfig.openInitially = function(){ return self.config.open_tree_initially; };\n\t\t}\n\n\t\tvar store = new $StoreType(config);\n\t\tthis.mixin(store, createDatastoreSelect(store));\n\n\t\tif(config.name){\n\n\t\t\tthis.$services.setService(\"datastore:\" + config.name, function(){return store;});\n\t\t\tvar storeList = this.$services.getService(\"datastores\");\n\t\t\tif(!storeList){\n\t\t\t\tstoreList = [];\n\t\t\t\tthis.$services.setService(\"datastores\", function(){return storeList;});\n\t\t\t}\n\t\t\tstoreList.push(config.name);\n\n\t\t\tdatastoreRender.bindDataStore(config.name, this);\n\t\t}\n\n\t\treturn store;\n\t},\n\tgetDatastore: function(name){\n\t\treturn this.$services.getService(\"datastore:\" + name);\n\t},\n\n\trefreshData: function () {\n\t\tvar scrollState = this.getScrollState();\n\t\tthis.callEvent(\"onBeforeDataRender\", []);\n\n\t\tvar stores = getDatastores.call(this);\n\t\tfor(var i = 0; i < stores.length; i++){\n\t\t\tstores[i].refresh();\n\t\t}\n\n\t\tif(scrollState.x || scrollState.y){\n\t\t\tthis.scrollTo(scrollState.x, scrollState.y);\n\t\t}\n\t\tthis.callEvent(\"onDataRender\", []);\n\t},\n\n\tisChildOf: function(childId, parentId){\n\t\treturn this.$data.tasksStore.isChildOf(childId, parentId);\n\t},\n\n\trefreshTask: function (taskId, refresh_links) {\n\t\tvar task = this.getTask(taskId);\n\t\tif (task && this.isTaskVisible(taskId)) {\n\n\t\t\tthis.$data.tasksStore.refresh(taskId, !!this.getState().drag_id);// do quick refresh during drag and drop\n\n\t\t\tif (refresh_links !== undefined && !refresh_links)\n\t\t\t\treturn;\n\t\t\tfor (var i = 0; i < task.$source.length; i++) {\n\t\t\t\tthis.refreshLink(task.$source[i]);\n\t\t\t}\n\t\t\tfor (var i = 0; i < task.$target.length; i++) {\n\t\t\t\tthis.refreshLink(task.$target[i]);\n\t\t\t}\n\t\t}else if(this.isTaskExists(taskId) && this.isTaskExists(this.getParent(taskId))){\n\t\t\tthis.refreshTask(this.getParent(taskId));\n\t\t}\n\n\t},\n\trefreshLink: function (linkId) {\n\t\tthis.$data.linksStore.refresh(linkId, !!this.getState().drag_id);// do quick refresh during drag and drop\n\t},\n\n\tsilent: function(code){\n\t\tvar gantt = this;\n\t\tgantt.$data.tasksStore.silent(function(){\n\t\t\tgantt.$data.linksStore.silent(function(){\n\t\t\t\tcode();\n\t\t\t});\n\t\t});\n\t},\n\n\tclearAll: function () {\n\t\tvar stores = getDatastores.call(this);\n\t\tfor(var i = 0; i < stores.length; i++){\n\t\t\tstores[i].clearAll();\n\t\t}\n\n\t\tthis._update_flags();\n\t\tthis.userdata = {};\n\t\tthis.callEvent(\"onClear\", []);\n\t\tthis.render();\n\t},\n\t_clear_data: function () {\n\t\tthis.$data.tasksStore.clearAll();\n\t\tthis.$data.linksStore.clearAll();\n\t\tthis._update_flags();\n\t\tthis.userdata = {};\n\t},\n\n\tselectTask: function(id){\n\t\tvar store = this.$data.tasksStore;\n\t\tif(!this.config.select_task)\n\t\t\treturn false;\n\t\tif (id){\n\n\t\t\tstore.select(id);\n\t\t}\n\t\treturn store.getSelectedId();\n\t},\n\tunselectTask: function(id){\n\t\tvar store = this.$data.tasksStore;\n\t\tstore.unselect(id);\n\t},\n\tgetSelectedId: function() {\n\t\treturn this.$data.tasksStore.getSelectedId();\n\t}\n};\n};\n\nfunction createFacade(){\n\tvar res = utils.mixin({}, createDatastoreFacade());\n\tutils.mixin(res, createTasksFacade());\n\tutils.mixin(res, createLinksFacade());\n\treturn res;\n}\n\n\n\n\nmodule.exports = {create: createFacade};","var utils = require(\"../../utils/utils\");\nvar facadeFactory = require(\"./../facades/datastore\");\nvar calculateScaleRange = require(\"../gantt_data_range\");\nfunction initDataStores(gantt){\n\n\tvar facade = facadeFactory.create();\n\tutils.mixin(gantt, facade);\n\tvar tasksStore = gantt.createDatastore({\n\t\tname: \"task\",\n\t\ttype: \"treeDatastore\",\n\t\trootId: function(){return gantt.config.root_id;},\n\t\tinitItem: utils.bind(_init_task, gantt)\n\t});\n\n\tvar linksStore = gantt.createDatastore({\n\t\tname: \"link\",\n\t\tinitItem: utils.bind(_init_link, gantt)\n\t});\n\n\ttasksStore.attachEvent(\"onBeforeRefreshAll\", function(){\n\n\t\tvar order = tasksStore.getVisibleItems();\n\n\t\tfor(var i=0; i < order.length; i++){\n\t\t\tvar item = order[i];\n\t\t\titem.$index = i;\n\t\t\tgantt.resetProjectDates(item);\n\t\t}\n\n\t});\n\n\ttasksStore.attachEvent(\"onFilterItem\", function(id, task){\n\t\tvar min = null, max = null;\n\t\tif (gantt.config.start_date && gantt.config.end_date) {\n\t\t\tif (gantt._isAllowedUnscheduledTask(task)) return true;\n\t\t\tmin = gantt.config.start_date.valueOf();\n\t\t\tmax = gantt.config.end_date.valueOf();\n\n\t\t\tif (+task.start_date > max || +task.end_date < +min)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t});\n\n\ttasksStore.attachEvent(\"onIdChange\", function(oldId, newId){\n\t\tgantt._update_flags(oldId, newId);\n\t});\n\n\ttasksStore.attachEvent(\"onAfterUpdate\", function(id){\n\t\tgantt._update_parents(id);\n\t\tif(gantt.getState(\"batchUpdate\").batch_update){\n\t\t\treturn true;\n\t\t}\n\n\t\tvar task = tasksStore.getItem(id);\n\t\tfor (var i = 0; i < task.$source.length; i++) {\n\t\t\tlinksStore.refresh(task.$source[i]);\n\t\t}\n\t\tfor (var i = 0; i < task.$target.length; i++) {\n\t\t\tlinksStore.refresh(task.$target[i]);\n\t\t}\n\t});\n\n\ttasksStore.attachEvent(\"onAfterItemMove\", function(sid, parent, tindex){\n\t\tvar source = gantt.getTask(sid);\n\n\t\tif(this.getNextSibling(sid) !== null){\n\t\t\tsource.$drop_target = this.getNextSibling(sid);\n\t\t} else if(this.getPrevSibling(sid) !== null){\n\t\t\tsource.$drop_target = \"next:\" + this.getPrevSibling(sid);\n\t\t}else{\n\t\t\tsource.$drop_target = \"next:null\";\n\t\t}\n\n\t});\n\n\ttasksStore.attachEvent(\"onStoreUpdated\", function(id, item, action){\n\t\tif(action == \"delete\"){\n\t\t\tgantt._update_flags(id, null);\n\t\t}\n\n\t\tvar state = gantt.$services.getService(\"state\");\n\t\tif(state.getState(\"batchUpdate\").batch_update){\n\t\t\treturn;\n\t\t}\n\n\t\tif(gantt.config.fit_tasks && action !== \"paint\"){\n\t\t\tvar oldState = gantt.getState();\n\t\t\tcalculateScaleRange(gantt);\n\t\t\tvar newState = gantt.getState();\n\n\t\t\t//this._init_tasks_range();\n\t\t\tif (+oldState.min_date != +newState.min_date || +oldState.max_date != +newState.max_date) {\n\t\t\t\tgantt.render();\n\n\t\t\t\tgantt.callEvent(\"onScaleAdjusted\", []);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t}\n\n\t\tif(action == \"add\" || action == \"move\" || action == \"delete\"){\n\t\t\tgantt.$layout.resize();\n\t\t}else if(!id){\n\t\t\tlinksStore.refresh();\n\t\t}\n\n\t});\n\n\tlinksStore.attachEvent(\"onAfterAdd\", function(id, link){\n\t\tsync_link(link);\n\t});\n\tlinksStore.attachEvent(\"onAfterUpdate\", function(id, link){\n\t\tsync_links();\n\t});\n\tlinksStore.attachEvent(\"onAfterDelete\", function(id, link){\n\t\tsync_link_delete(link);\n\t});\n\tlinksStore.attachEvent(\"onBeforeIdChange\", function(oldId, newId){\n\t\tsync_link_delete(gantt.mixin({id:oldId}, gantt.$data.linksStore.getItem(newId)));\n\t\tsync_link(gantt.$data.linksStore.getItem(newId));\n\t});\n\n\tfunction checkLinkedTaskVisibility(taskId){\n\t\tvar isVisible = gantt.isTaskVisible(taskId);\n\t\tif(!isVisible && gantt.isTaskExists(taskId)){\n\t\t\tvar parent = gantt.getParent(taskId);\n\t\t\tif(gantt.isTaskExists(parent) && gantt.isTaskVisible(parent)){\n\t\t\t\tparent = gantt.getTask(parent);\n\t\t\t\tif(gantt.isSplitTask(parent)){\n\t\t\t\t\tisVisible = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn isVisible;\n\t}\n\n\tlinksStore.attachEvent(\"onFilterItem\", function(id, link){\n\t\tif (!gantt.config.show_links) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar sourceVisible = checkLinkedTaskVisibility(link.source);\n\t\tvar targetVisible = checkLinkedTaskVisibility(link.target);\n\n\t\tif (!(sourceVisible && targetVisible) ||\n\t\t\tgantt._isAllowedUnscheduledTask(gantt.getTask(link.source)) || gantt._isAllowedUnscheduledTask(gantt.getTask(link.target)))\n\t\t\treturn false;\n\n\t\treturn gantt.callEvent(\"onBeforeLinkDisplay\", [id, link]);\n\t});\n\n\n\t(function(){\n\t\t// delete all connected links after task is deleted\n\t\tvar treeHelper = require(\"../../utils/task_tree_helpers\");\n\t\tvar deletedLinks = {};\n\n\t\tgantt.attachEvent(\"onBeforeTaskDelete\", function(id, item){\n\t\t\tdeletedLinks[id] = treeHelper.getSubtreeLinks(gantt, id);\n\t\t\treturn true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onAfterTaskDelete\", function(id, item) {\n\t\t\tif(deletedLinks[id]){\n\t\t\t\tgantt.$data.linksStore.silent(function(){\n\t\t\t\t\tfor(var i in deletedLinks[id]){\n\t\t\t\t\t\tgantt.$data.linksStore.removeItem(i);\n\t\t\t\t\t\tsync_link_delete(deletedLinks[id][i]);\n\t\t\t\t\t}\n\n\t\t\t\t\tdeletedLinks[id] = null;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t})();\n\n\tgantt.attachEvent(\"onAfterLinkDelete\", function(id, link) {\n\t\tgantt.refreshTask(link.source);\n\t\tgantt.refreshTask(link.target);\n\t});\n\n\tgantt.attachEvent(\"onParse\", sync_links);\n\n\tmapEvents({\n\t\tsource: linksStore,\n\t\ttarget: gantt,\n\t\tevents:{\n\t\t\t\"onItemLoading\":\"onLinkLoading\",\n\t\t\t\"onBeforeAdd\":\"onBeforeLinkAdd\",\n\t\t\t\"onAfterAdd\":\"onAfterLinkAdd\",\n\t\t\t\"onBeforeUpdate\":\"onBeforeLinkUpdate\",\n\t\t\t\"onAfterUpdate\":\"onAfterLinkUpdate\",\n\t\t\t\"onBeforeDelete\":\"onBeforeLinkDelete\",\n\t\t\t\"onAfterDelete\":\"onAfterLinkDelete\",\n\t\t\t\"onIdChange\":\"onLinkIdChange\"\n\t\t}\n\t});\n\n\tmapEvents({\n\t\tsource: tasksStore,\n\t\ttarget: gantt,\n\t\tevents:{\n\t\t\t\"onItemLoading\":\"onTaskLoading\",\n\t\t\t\"onBeforeAdd\":\"onBeforeTaskAdd\",\n\t\t\t\"onAfterAdd\":\"onAfterTaskAdd\",\n\t\t\t\"onBeforeUpdate\":\"onBeforeTaskUpdate\",\n\t\t\t\"onAfterUpdate\":\"onAfterTaskUpdate\",\n\t\t\t\"onBeforeDelete\":\"onBeforeTaskDelete\",\n\t\t\t\"onAfterDelete\":\"onAfterTaskDelete\",\n\t\t\t\"onIdChange\":\"onTaskIdChange\",\n\t\t\t\"onBeforeItemMove\":\"onBeforeTaskMove\",\n\t\t\t\"onAfterItemMove\":\"onAfterTaskMove\",\n\t\t\t\"onFilterItem\":\"onBeforeTaskDisplay\",\n\t\t\t\"onItemOpen\":\"onTaskOpened\",\n\t\t\t\"onItemClose\":\"onTaskClosed\",\n\t\t\t\"onBeforeSelect\":\"onBeforeTaskSelected\",\n\t\t\t\"onAfterSelect\":\"onTaskSelected\",\n\t\t\t\"onAfterUnselect\":\"onTaskUnselected\"\n\t\t}\n\t});\n\n\tgantt.$data = {\n\t\ttasksStore: tasksStore,\n\t\tlinksStore: linksStore\n\t};\n\n\tfunction sync_link(link){\n\t\tif(gantt.isTaskExists(link.source)){\n\t\t\tvar sourceTask = gantt.getTask(link.source);\n\t\t\tsourceTask.$source = sourceTask.$source || [];\n\t\t\tsourceTask.$source.push(link.id);\n\t\t}\n\t\tif(gantt.isTaskExists(link.target)){\n\t\t\tvar targetTask = gantt.getTask(link.target);\n\t\t\ttargetTask.$target = targetTask.$target || [];\n\t\t\ttargetTask.$target.push(link.id);\n\t\t}\n\t}\n\n\tfunction sync_link_delete(link){\n\t\tif(gantt.isTaskExists(link.source)){\n\t\t\tvar sourceTask = gantt.getTask(link.source);\n\t\t\tfor(var i = 0; i < sourceTask.$source.length; i++){\n\t\t\t\tif(sourceTask.$source[i] == link.id){\n\t\t\t\t\tsourceTask.$source.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(gantt.isTaskExists(link.target)){\n\t\t\tvar targetTask = gantt.getTask(link.target);\n\t\t\tfor(var i = 0; i < targetTask.$target.length; i++){\n\t\t\t\tif(targetTask.$target[i] == link.id){\n\t\t\t\t\ttargetTask.$target.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction sync_links() {\n\t\tvar task = null;\n\t\tvar tasks = gantt.$data.tasksStore.getItems();\n\n\t\tfor(var i = 0, len = tasks.length; i < len; i++){\n\t\t\ttask = tasks[i];\n\t\t\ttask.$source = [];\n\t\t\ttask.$target = [];\n\t\t}\n\n\t\tvar links = gantt.$data.linksStore.getItems();\n\t\tfor (var i = 0, len = links.length; i < len; i++) {\n\n\t\t\tvar link = links[i];\n\t\t\tsync_link(link);\n\t\t}\n\t}\n\n\tfunction mapEvents(conf){\n\t\tvar mapFrom = conf.source;\n\t\tvar mapTo = conf.target;\n\t\tfor(var i in conf.events){\n\t\t\t(function(sourceEvent, targetEvent){\n\t\t\t\tmapFrom.attachEvent(sourceEvent, function(){\n\t\t\t\t\treturn mapTo.callEvent(targetEvent, Array.prototype.slice.call(arguments));\n\t\t\t\t}, targetEvent);\n\t\t\t})(i, conf.events[i]);\n\t\t}\n\t}\n\n\tfunction _init_task(task) {\n\t\tif (!this.defined(task.id))\n\t\t\ttask.id = this.uid();\n\n\t\tif (task.start_date)\n\t\t\ttask.start_date = gantt.date.parseDate(task.start_date, \"xml_date\");\n\t\tif (task.end_date)\n\t\t\ttask.end_date = gantt.date.parseDate(task.end_date, \"xml_date\");\n\n\n\t\tvar duration = null;\n\t\tif (task.duration || task.duration === 0) {\n\t\t\ttask.duration = duration = task.duration * 1;\n\t\t}\n\n\t\tif (duration) {\n\t\t\tif (task.start_date && !task.end_date) {\n\t\t\t\ttask.end_date = this.calculateEndDate(task);\n\t\t\t} else if (!task.start_date && task.end_date) {\n\t\t\t\ttask.start_date = this.calculateEndDate({\n\t\t\t\t\tstart_date: task.end_date,\n\t\t\t\t\tduration: -task.duration,\n\t\t\t\t\ttask: task\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\n\t\tif (this._isAllowedUnscheduledTask(task)) {\n\t\t\tthis._set_default_task_timing(task);\n\t\t}\n\t\tthis._init_task_timing(task);\n\t\tif (task.start_date && task.end_date)\n\t\t\tthis.correctTaskWorkTime(task);\n\n\t\ttask.$source = [];\n\t\ttask.$target = [];\n\t\tif (task.parent === undefined) {\n\t\t\tthis.setParent(task, this.config.root_id);\n\t\t}\n\n\t\treturn task;\n\t}\n\n\tfunction _init_link(link) {\n\t\tif (!this.defined(link.id))\n\t\t\tlink.id = this.uid();\n\t\treturn link;\n\t}\n}\n\n\nmodule.exports = initDataStores;\n","function createLayoutFacade(){\n\n\tfunction getTimeline(gantt){\n\t\treturn gantt.$ui.getView(\"timeline\");\n\t}\n\n\tfunction getGrid(gantt){\n\t\treturn gantt.$ui.getView(\"grid\");\n\t}\n\n\tfunction getVerticalScrollbar(gantt){\n\t\treturn gantt.$ui.getView(\"scrollVer\");\n\t}\n\n\tfunction getHorizontalScrollbar(gantt){\n\t\treturn gantt.$ui.getView(\"scrollHor\");\n\t}\n\n\tvar DEFAULT_VALUE = \"DEFAULT_VALUE\";\n\n\tfunction tryCall(getView, method, args, fallback){\n\t\tvar view = getView(this);\n\t\tif (!(view && view.isVisible())) {\n\t\t\tif(fallback){\n\t\t\t\treturn fallback();\n\t\t\t}else{\n\t\t\t\treturn DEFAULT_VALUE;\n\t\t\t}\n\t\t} else {\n\t\t\treturn view[method].apply(view, args);\n\t\t}\n\t}\n\n\treturn {\n\n\t\tgetColumnIndex: function(name) {\n\t\t\tvar res = tryCall.call(this, getGrid, \"getColumnIndex\", [name]);\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tdateFromPos: function(x) {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"dateFromPos\", Array.prototype.slice.call(arguments));\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn this.getState().min_date;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tposFromDate: function(date) {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"posFromDate\", [date]);\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tgetRowTop: function(index) {\n\t\t\tvar self = this;\n\t\t\tvar res = tryCall.call(self, getTimeline, \"getRowTop\", [index],\n\t\t\t\tfunction(){ return tryCall.call(self, getGrid, \"getRowTop\", [index]);}\n\t\t\t\t);\n\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tgetTaskTop: function(id) {\n\t\t\tvar self = this;\n\t\t\tvar res = tryCall.call(self, getTimeline, \"getItemTop\", [id],\n\t\t\t\tfunction(){ return tryCall.call(self, getGrid, \"getItemTop\", [id]);}\n\t\t\t);\n\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\n\t\tgetTaskPosition: function(task, start_date, end_date) {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"getItemPosition\", [task, start_date, end_date]);\n\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\tvar top = this.getTaskTop(task.id);\n\t\t\t\tvar height = this.getTaskHeight();\n\n\t\t\t\treturn {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\ttop: top,\n\t\t\t\t\theight: height,\n\t\t\t\t\twidth: 0\n\t\t\t\t};\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tgetTaskHeight: function() {\n\t\t\tvar self = this;\n\t\t\tvar res = tryCall.call(self, getTimeline, \"getItemHeight\", [],\n\t\t\t\tfunction(){ return tryCall.call(self, getGrid, \"getItemHeight\", []);}\n\t\t\t);\n\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\n\t\tcolumnIndexByDate: function(date) {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"columnIndexByDate\", [date]);\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn 0;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\troundTaskDates: function() {\n\t\t\ttryCall.call(this, getTimeline, \"roundTaskDates\", []);\n\t\t},\n\n\t\tgetScale: function() {\n\t\t\tvar res = tryCall.call(this, getTimeline, \"getScale\", []);\n\t\t\tif(res === DEFAULT_VALUE){\n\t\t\t\treturn null;\n\t\t\t}else{\n\t\t\t\treturn res;\n\t\t\t}\n\t\t},\n\n\t\tgetTaskNode: function(id) {\n\t\t\tvar timeline = getTimeline(this);\n\t\t\tif (!timeline || !timeline.isVisible()) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn timeline._taskRenderer.rendered[id];\n\t\t\t}\n\t\t},\n\n\n\t\tgetLinkNode: function(id) {\n\t\t\tvar timeline = getTimeline(this);\n\t\t\tif (!timeline.isVisible()) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn timeline._linkRenderer.rendered[id];\n\t\t\t}\n\t\t},\n\n\t\tscrollTo: function(left, top){\n\t\t\tvar vertical = getVerticalScrollbar(this);\n\t\t\tvar horizontal = getHorizontalScrollbar(this);\n\n\t\t\tvar oldH = {position: 0},\n\t\t\t\toldV = {position: 0};\n\n\t\t\tif(vertical){\n\t\t\t\toldV = vertical.getScrollState();\n\t\t\t}\n\t\t\tif(horizontal){\n\t\t\t\toldH = horizontal.getScrollState();\n\t\t\t}\n\n\t\t\tif (horizontal && left*1 == left){\n\t\t\t\thorizontal.scroll(left);\n\t\t\t}\n\t\t\tif(vertical && top*1 == top){\n\t\t\t\tvertical.scroll(top);\n\t\t\t}\n\n\t\t\tvar newV = {position: 0},\n\t\t\t\tnewH = {position: 0};\n\t\t\tif(vertical){\n\t\t\t\tnewV = vertical.getScrollState();\n\t\t\t}\n\t\t\tif(horizontal){\n\t\t\t\tnewH = horizontal.getScrollState();\n\t\t\t}\n\n\t\t\tthis.callEvent(\"onGanttScroll\", [oldH.position, oldV.position, newH.position, newV.position]);\n\t\t},\n\n\t\tshowDate: function(date){\n\t\t\tvar date_x = this.posFromDate(date);\n\t\t\tvar scroll_to = Math.max(date_x - this.config.task_scroll_offset, 0);\n\t\t\tthis.scrollTo(scroll_to);\n\t\t},\n\t\tshowTask: function(id) {\n\t\t\tvar pos = this.getTaskPosition(this.getTask(id));\n\n\t\t\tvar left = Math.max(pos.left - this.config.task_scroll_offset, 0);\n\n\t\t\tvar dataHeight = this._scroll_state().y;\n\t\t\tvar top;\n\t\t\tif(!dataHeight){\n\t\t\t\ttop = pos.top;\n\t\t\t}else{\n\t\t\t\ttop = pos.top - (dataHeight - this.config.row_height)/2;\n\t\t\t}\n\n\t\t\tthis.scrollTo(left, top);\n\t\t},\n\t\t_scroll_state: function(){\n\t\t\tvar result = {\n\t\t\t\tx: false,\n\t\t\t\ty: false,\n\t\t\t\tx_pos: 0,\n\t\t\t\ty_pos: 0,\n\t\t\t\tscroll_size: this.config.scroll_size + 1,//1px for inner content\n\t\t\t\tx_inner: 0,\n\t\t\t\ty_inner: 0\n\t\t\t};\n\n\t\t\tvar scrollVer = getVerticalScrollbar(this),\n\t\t\t\tscrollHor = getHorizontalScrollbar(this);\n\t\t\tif(scrollHor){\n\t\t\t\tvar horState = scrollHor.getScrollState();\n\t\t\t\tif(horState.visible){\n\t\t\t\t\tresult.x = horState.size;\n\t\t\t\t\tresult.x_inner = horState.scrollSize;\n\t\t\t\t}\n\t\t\t\tresult.x_pos = horState.position || 0;\n\t\t\t}\n\n\t\t\tif(scrollVer){\n\t\t\t\tvar verState = scrollVer.getScrollState();\n\t\t\t\tif(verState.visible){\n\t\t\t\t\tresult.y = verState.size;\n\n\t\t\t\t\tresult.y_inner = verState.scrollSize;\n\t\t\t\t}\n\t\t\t\tresult.y_pos = verState.position || 0;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\t\tgetScrollState: function(){\n\t\t\tvar state = this._scroll_state();\n\t\t\treturn { x:state.x_pos, y:state.y_pos, inner_width:state.x, inner_height:state.y, width: state.x_inner, height: state.y_inner };\n\t\t}\n\n\t};\n\n}\n\nmodule.exports = createLayoutFacade;","module.exports = function(gantt) {\n\tdelete gantt.addTaskLayer;\n\tdelete gantt.addLinkLayer;\n};","var domHelpers = require(\"../../utils/dom_helpers\");\n\nvar initializer = (function() {\n\treturn function (gantt) {\n\t\treturn {\n\n\t\t\tgetVerticalScrollbar: function(){\n\t\t\t\treturn gantt.$ui.getView(\"scrollVer\");\n\t\t\t},\n\t\t\tgetHorizontalScrollbar: function(){\n\t\t\t\treturn gantt.$ui.getView(\"scrollHor\");\n\t\t\t},\n\n\t\t\t_legacyGridResizerClass: function(layout){\n\t\t\t\tvar resizers = layout.getCellsByType(\"resizer\");\n\t\t\t\tfor(var i = 0; i < resizers.length; i++){\n\t\t\t\t\tvar r = resizers[i];\n\t\t\t\t\tvar gridResizer = false;\n\n\t\t\t\t\tvar prev = r.$parent.getPrevSibling(r.$id);\n\t\t\t\t\tif(prev && prev.$config && prev.$config.id === \"grid\"){\n\t\t\t\t\t\tgridResizer= true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tvar next = r.$parent.getNextSibling(r.$id);\n\t\t\t\t\t\tif(next && next.$config && next.$config.id === \"grid\"){\n\t\t\t\t\t\t\tgridResizer= true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(gridResizer){\n\t\t\t\t\t\tr.$config.css = (r.$config.css ? r.$config.css + \" \" : \"\") + \"gantt_grid_resize_wrap\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCreated: function(layout) {\n\t\t\t\tvar first = true;\n\n\t\t\t\tthis._legacyGridResizerClass(layout);\n\n\t\t\t\tlayout.attachEvent(\"onBeforeResize\", function() {\n\t\t\t\t\tvar mainTimeline = gantt.$ui.getView(\"timeline\");\n\t\t\t\t\tif (mainTimeline)\n\t\t\t\t\t\tmainTimeline.$config.hidden = mainTimeline.$parent.$config.hidden = !gantt.config.show_chart;\n\n\t\t\t\t\tvar mainGrid = gantt.$ui.getView(\"grid\");\n\n\t\t\t\t\tif(!mainGrid)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tvar showGrid = gantt.config.show_grid;\n\t\t\t\t\tif (first) {\n\t\t\t\t\t\tvar colsWidth = mainGrid._getColsTotalWidth();\n\t\t\t\t\t\tif (colsWidth !== false){\n\t\t\t\t\t\t\tgantt.config.grid_width = colsWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tshowGrid = showGrid && !!gantt.config.grid_width;\n\t\t\t\t\t\tgantt.config.show_grid = showGrid;\n\t\t\t\t\t}\n\t\t\t\t\tmainGrid.$config.hidden = mainGrid.$parent.$config.hidden = !showGrid;\n\n\t\t\t\t\tif (!mainGrid.$config.hidden) {\n\t\t\t\t\t\t/* restrict grid width due to min_width, max_width, min_grid_column_width */\n\t\t\t\t\t\tvar grid_limits = mainGrid._getGridWidthLimits();\n\t\t\t\t\t\tif (grid_limits[0] && gantt.config.grid_width < grid_limits[0])\n\t\t\t\t\t\t\tgantt.config.grid_width = grid_limits[0];\n\t\t\t\t\t\tif (grid_limits[1] && gantt.config.grid_width > grid_limits[1])\n\t\t\t\t\t\t\tgantt.config.grid_width = grid_limits[1];\n\t\t\t\t\t\tif (mainTimeline && gantt.config.show_chart){\n\n\t\t\t\t\t\t\tmainGrid.$config.width = gantt.config.grid_width - 1;\n\t\t\t\t\t\t\tif (!first) {\n\t\t\t\t\t\t\t\tif (mainTimeline && !domHelpers.isChildOf(mainTimeline.$task, layout.$view)) {\n\t\t\t\t\t\t\t\t\t// timeline is being displayed after being not visible, reset grid with from full screen\n\t\t\t\t\t\t\t\t\tif (!mainGrid.$config.original_grid_width) {\n\t\t\t\t\t\t\t\t\t\tvar skinSettings = gantt.skins[gantt.skin];\n\t\t\t\t\t\t\t\t\t\tif(skinSettings && skinSettings.config && skinSettings.config.grid_width){\n\t\t\t\t\t\t\t\t\t\t\tmainGrid.$config.original_grid_width =  skinSettings.config.grid_width;\n\t\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\t\tmainGrid.$config.original_grid_width = 0;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tgantt.config.grid_width = mainGrid.$config.original_grid_width;\n\t\t\t\t\t\t\t\t\tmainGrid.$parent.$config.width = gantt.config.grid_width;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tmainGrid.$parent._setContentSize(mainGrid.$config.width, mainGrid.$config.height);\n\t\t\t\t\t\t\t\t\tgantt.$layout._syncCellSizes(mainGrid.$parent.$config.group, gantt.config.grid_width);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmainGrid.$parent.$config.width = gantt.config.grid_width;\n\t\t\t\t\t\t\t\tif (mainGrid.$parent.$config.group) {\n\t\t\t\t\t\t\t\t\tgantt.$layout._syncCellSizes(mainGrid.$parent.$config.group, mainGrid.$parent.$config.width);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (mainTimeline && domHelpers.isChildOf(mainTimeline.$task, layout.$view)) {\n\t\t\t\t\t\t\t\t// hiding timeline, remember grid with to restore it when timeline is displayed again\n\t\t\t\t\t\t\t\tmainGrid.$config.original_grid_width = gantt.config.grid_width;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!first) {\n\t\t\t\t\t\t\t\tmainGrid.$parent.$config.width = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfirst = false;\n\t\t\t\t});\n\t\t\t\tthis._initScrollStateEvents(layout);\n\t\t\t},\n\n\t\t\t_initScrollStateEvents: function(layout) {\n\t\t\t\tgantt._getVerticalScrollbar = this.getVerticalScrollbar;\n\t\t\t\tgantt._getHorizontalScrollbar = this.getHorizontalScrollbar;\n\n\t\t\t\tvar vertical = this.getVerticalScrollbar();\n\t\t\t\tvar horizontal = this.getHorizontalScrollbar();\n\t\t\t\tif (vertical) {\n\t\t\t\t\tvertical.attachEvent(\"onScroll\", function(oldPos, newPos, dir){\n\t\t\t\t\t\tvar scrollState = gantt.getScrollState();\n\t\t\t\t\t\tgantt.callEvent(\"onGanttScroll\", [scrollState.x, oldPos, scrollState.x, newPos]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (horizontal) {\n\t\t\t\t\thorizontal.attachEvent(\"onScroll\", function(oldPos, newPos, dir){\n\t\t\t\t\t\tvar scrollState = gantt.getScrollState();\n\t\t\t\t\t\tgantt.callEvent(\"onGanttScroll\", [oldPos, scrollState.y, newPos, scrollState.y]);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tlayout.attachEvent(\"onResize\", function(){\n\t\t\t\t\tif (vertical && !gantt.$scroll_ver){\n\t\t\t\t\t\tgantt.$scroll_ver = vertical.$scroll_ver;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (horizontal && !gantt.$scroll_hor){\n\t\t\t\t\t\tgantt.$scroll_hor = horizontal.$scroll_hor;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t_findGridResizer: function(layout, grid){\n\t\t\t\tvar resizers = layout.getCellsByType(\"resizer\");\n\n\t\t\t\tvar gridFirst = true;\n\t\t\t\tvar gridResizer;\n\t\t\t\tfor(var i = 0; i < resizers.length; i++){\n\t\t\t\t\tvar res = resizers[i];\n\t\t\t\t\tres._getSiblings();\n\t\t\t\t\tvar prev = res._behind;\n\t\t\t\t\tvar next = res._front;\n\t\t\t\t\tif(prev && prev.$content === grid || (prev.isChild && prev.isChild(grid))){\n\t\t\t\t\t\tgridResizer = res;\n\t\t\t\t\t\tgridFirst = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else if(next && next.$content === grid || (next.isChild && next.isChild(grid))){\n\t\t\t\t\t\tgridResizer = res;\n\t\t\t\t\t\tgridFirst = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tresizer: gridResizer,\n\t\t\t\t\tgridFirst: gridFirst\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tonInitialized: function (layout) {\n\t\t\t\tvar grid = gantt.$ui.getView(\"grid\");\n\n\t\t\t\tvar resizeInfo = this._findGridResizer(layout, grid);\n\n\t\t\t\t// expose grid resize events\n\t\t\t\tif(resizeInfo.resizer){\n\t\t\t\t\tvar gridFirst = resizeInfo.gridFirst,\n\t\t\t\t\t\tnext = resizeInfo.resizer;\n\t\t\t\t\tvar initialWidth;\n\t\t\t\t\tnext.attachEvent(\"onResizeStart\", function(prevCellWidth, nextCellWidth){\n\n\t\t\t\t\t\tvar grid = gantt.$ui.getView(\"grid\");\n\t\t\t\t\t\tvar viewCell = grid ? grid.$parent : null;\n\t\t\t\t\t\tif(viewCell){\n\t\t\t\t\t\t\tvar limits = grid._getGridWidthLimits();\n\n\t\t\t\t\t\t\t// min grid width is defined by min widths of its columns, unless grid has horizontal scroll\n\t\t\t\t\t\t\tif(!grid.$config.scrollable)\n\t\t\t\t\t\t\t\tviewCell.$config.minWidth = limits[0];\n\n\t\t\t\t\t\t\tviewCell.$config.maxWidth = limits[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinitialWidth = gridFirst ? prevCellWidth : nextCellWidth;\n\t\t\t\t\t\treturn gantt.callEvent(\"onGridResizeStart\", [initialWidth]);\n\t\t\t\t\t});\n\t\t\t\t\tnext.attachEvent(\"onResize\", function(newBehindSize, newFrontSize){\n\t\t\t\t\t\tvar newSize = gridFirst ? newBehindSize : newFrontSize;\n\t\t\t\t\t\treturn gantt.callEvent(\"onGridResize\", [initialWidth, newSize]);\n\t\t\t\t\t});\n\t\t\t\t\tnext.attachEvent(\"onResizeEnd\", function(oldBackSize, oldFrontSize, newBackSize, newFrontSize){\n\n\t\t\t\t\t\tvar oldSize = gridFirst ? oldBackSize : oldFrontSize;\n\t\t\t\t\t\tvar newSize = gridFirst ? newBackSize : newFrontSize;\n\t\t\t\t\t\tvar grid = gantt.$ui.getView(\"grid\");\n\t\t\t\t\t\tvar viewCell = grid ? grid.$parent : null;\n\t\t\t\t\t\tif(viewCell){\n\t\t\t\t\t\t\tviewCell.$config.minWidth = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar res = gantt.callEvent(\"onGridResizeEnd\", [oldSize, newSize]);\n\t\t\t\t\t\tif(res){\n\t\t\t\t\t\t\tgantt.config.grid_width = newSize;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t},\n\t\t\tonDestroyed: function (timeline) {\n\n\t\t\t}\n\t\t};\n\n\t};\n})();\n\nmodule.exports = initializer;","var domHelpers = require(\"../../../utils/dom_helpers\");\n\nvar initLinksDND = function(timeline, gantt) {\n\tvar _link_landing,\n\t\t_link_target_task,\n\t\t_link_target_task_start,\n\t\t_link_source_task,\n\t\t_link_source_task_start;\n\n\n\tfunction getVisibleMilestoneWidth() {\n\t\tvar origWidth = timeline.getItemHeight();//m-s have square shape\n\t\treturn Math.round(Math.sqrt(2 * origWidth * origWidth)) - 2;\n\t}\n\n\tfunction isMilestone(task) {\n\t\treturn gantt.getTaskType(task.type) == gantt.config.types.milestone;\n\t}\n\n\tfunction getDndState(){\n\t\treturn {\n\t\t\tlink_source_id : _link_source_task,\n\t\t\tlink_target_id : _link_target_task,\n\t\t\tlink_from_start : _link_source_task_start,\n\t\t\tlink_to_start : _link_target_task_start,\n\t\t\tlink_landing_area : _link_landing\n\t\t};\n\t}\n\n\tvar services = gantt.$services;\n\n\tvar state = services.getService(\"state\");\n\tvar DnD = services.getService(\"dnd\");\n\n\tstate.registerProvider(\"linksDnD\", getDndState);\n\n\tvar dnd = new DnD(timeline.$task_bars, { sensitivity : 0, updates_per_second : 60 }),\n\t\tstart_marker = \"task_start_date\",\n\t\tend_marker = \"task_end_date\",\n\t\tlink_edge_marker = \"gantt_link_point\",\n\t\tlink_landing_hover_area = \"gantt_link_control\";\n\n\tdnd.attachEvent(\"onBeforeDragStart\", gantt.bind(function(obj,e) {\n\t\tvar target = (e.target||e.srcElement);\n\t\tresetDndState();\n\t\tif(gantt.getState().drag_id)\n\t\t\treturn false;\n\n\t\tif(domHelpers.locateClassName(target, link_edge_marker)){\n\t\t\tif(domHelpers.locateClassName(target, start_marker))\n\t\t\t\t_link_source_task_start = true;\n\n\t\t\tvar sid = gantt.locate(e);\n\t\t\t_link_source_task = sid;\n\n\t\t\tvar t = gantt.getTask(sid);\n\t\t\tif(gantt.isReadonly(t)){\n\t\t\t\tresetDndState();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar shift = 0;\n\n\t\t\tthis._dir_start = getLinePos(t, !!_link_source_task_start, shift, timeline.$getConfig(), true);\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\n\t}, this));\n\n\tdnd.attachEvent(\"onAfterDragStart\", gantt.bind(function(obj,e) {\n\t\tif(gantt.config.touch) {\n\t\t\tgantt.refreshData();\n\t\t}\n\t\tupdateMarkedHtml(dnd.config.marker);\n\t}, this));\n\n\tfunction getLinePos(task, to_start, shift, cfg, isStart){\n\t\tvar taskPos = getMilestonePosition(task, function(task){ return gantt.getTaskPosition(task);}, cfg);\n\n\t\tvar pos = {x: taskPos.x, y: taskPos.y};\n\t\tif(!to_start){\n\t\t\tpos.x = taskPos.xEnd;\n\t\t}\n\n\t\t//var pos = gantt._get_task_pos(task, !!to_start);\n\t\tpos.y += gantt.config.row_height/2;\n\n\t\tvar offset = isMilestone(task) && isStart ? 2 : 0;\n\n\t\tshift = shift || 0;\n\t\tif(cfg.rtl)\n\t\t\tshift = shift * -1;\n\n\t\tpos.x += (to_start ? -1 : 1)*shift  - offset;\n\t\treturn pos;\n\t}\n\n\tfunction getMilestonePosition(task, getTaskPosition, cfg){\n\t\tvar pos = getTaskPosition(task);\n\n\t\tvar res = {\n\t\t\tx: pos.left,\n\t\t\ty: pos.top,\n\t\t\twidth: pos.width,\n\t\t\theight: pos.height\n\t\t};\n\n\t\tif(cfg.rtl){\n\t\t\tres.xEnd = res.x;\n\t\t\tres.x = res.xEnd + res.width;\n\t\t}else{\n\t\t\tres.xEnd = res.x + res.width;\n\t\t}\n\t\tres.yEnd = res.y + res.height;\n\n\t\tif(gantt.getTaskType(task.type) == gantt.config.types.milestone){\n\t\t\tvar milestoneWidth = getVisibleMilestoneWidth();\n\n\t\t\tres.x += (!cfg.rtl ? -1 : 1)*(milestoneWidth / 2);\n\t\t\tres.xEnd += (!cfg.rtl ? 1 : -1)*(milestoneWidth / 2);\n\n\t\t\t//pos.x -= milestoneWidth / 2;\n\t\t\t//pos.xEnd += milestoneWidth / 2;\n\t\t\tres.width = pos.xEnd - pos.x;\n\t\t}\n\n\n\t\treturn res;\n\t}\n\n\tdnd.attachEvent(\"onDragMove\", gantt.bind(function(obj,e) {\n\t\tvar dd = dnd.config;\n\t\tvar pos = dnd.getPosition(e);\n\t\tadvanceMarker(dd.marker, pos);\n\t\tvar landing = !!domHelpers.locateClassName(e, link_landing_hover_area);\n\n\t\tvar prevTarget = _link_target_task;\n\t\tvar prevLanding = _link_landing;\n\t\tvar prevToStart = _link_target_task_start;\n\n\t\tvar targ = gantt.locate(e),\n\t\t\tto_start = true;\n\t\t\n\t\t// can drag and drop link to another gantt on the page, such links are not supported\n\t\tvar sameGantt = domHelpers.isChildOf(e.target || e.srcElement, gantt.$root);\n\t\tif(!sameGantt){\n\t\t\tlanding = false;\n\t\t\ttarg = null;\n\t\t}\n\n\t\tif(landing){\n\t\t\t//refreshTask\n\t\t\tto_start = !domHelpers.locateClassName(e, end_marker);\n\t\t\tlanding = !!targ;\n\t\t}\n\n\t\t_link_target_task = targ;\n\t\t_link_landing = landing;\n\t\t_link_target_task_start = to_start;\n\n\t\tif(landing){\n\t\t\tvar t = gantt.getTask(targ);\n\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar node = domHelpers.locateClassName(e, link_landing_hover_area);\n\t\t\tvar shift = 0;\n\t\t\tif(node){\n\t\t\t\tshift = Math.floor(node.offsetWidth  / 2);\n\t\t\t}\n\n\t\t\tthis._dir_end = getLinePos(t, !!_link_target_task_start,shift, config);\n\t\t}else{\n\t\t\tthis._dir_end = domHelpers.getRelativeEventPosition(e, timeline.$task_data);\n\t\t}\n\n\t\tvar targetChanged = !(prevLanding == landing && prevTarget == targ && prevToStart == to_start);\n\t\tif(targetChanged){\n\t\t\tif(prevTarget)\n\t\t\t\tgantt.refreshTask(prevTarget, false);\n\t\t\tif(targ)\n\t\t\t\tgantt.refreshTask(targ, false);\n\t\t}\n\n\t\tif(targetChanged){\n\t\t\tupdateMarkedHtml(dd.marker);\n\t\t}\n\n\t\tshowDirectingLine(this._dir_start.x, this._dir_start.y, this._dir_end.x, this._dir_end.y);\n\n\t\treturn true;\n\t}, this));\n\n\n\tdnd.attachEvent(\"onDragEnd\", gantt.bind(function() {\n\t\tvar drag = getDndState();\n\n\t\tif(drag.link_source_id && drag.link_target_id && drag.link_source_id != drag.link_target_id){\n\t\t\tvar type = gantt._get_link_type(drag.link_from_start, drag.link_to_start);\n\n\t\t\tvar link = {source : drag.link_source_id, target: drag.link_target_id, type:type};\n\t\t\tif(link.type && gantt.isLinkAllowed(link))\n\t\t\t\tgantt.addLink(link);\n\t\t}\n\n\t\tresetDndState();\n\n\t\tif(gantt.config.touch) {\n\t\t\tgantt.refreshData();\n\t\t}\n\t\telse {\n\t\t\tif (drag.link_source_id)\n\t\t\t\tgantt.refreshTask(drag.link_source_id, false);\n\t\t\tif (drag.link_target_id)\n\t\t\t\tgantt.refreshTask(drag.link_target_id, false);\n\t\t}\n\t\tremoveDirectionLine();\n\t}, this));\n\n\tfunction updateMarkedHtml(marker){\n\t\tvar link = getDndState();\n\n\t\tvar css = [\"gantt_link_tooltip\"];\n\t\tif(link.link_source_id && link.link_target_id){\n\t\t\tif(gantt.isLinkAllowed(link.link_source_id, link.link_target_id, link.link_from_start, link.link_to_start)){\n\t\t\t\tcss.push(\"gantt_allowed_link\");\n\t\t\t}else{\n\t\t\t\tcss.push(\"gantt_invalid_link\");\n\t\t\t}\n\t\t}\n\n\t\tvar className = gantt.templates.drag_link_class(link.link_source_id, link.link_from_start, link.link_target_id, link.link_to_start);\n\t\tif(className)\n\t\t\tcss.push(className);\n\n\t\tvar html = \"<div class='\"+className+ \"'>\" +\n\t\t\tgantt.templates.drag_link(link.link_source_id, link.link_from_start, link.link_target_id, link.link_to_start) +\n\t\t\t\"</div>\";\n\t\tmarker.innerHTML = html;\n\t}\n\n\tfunction advanceMarker(marker, pos){\n\t\tmarker.style.left = pos.x + 5 + \"px\";\n\t\tmarker.style.top = pos.y + 5 + \"px\";\n\t}\n\n\tfunction resetDndState(){\n\t\t_link_source_task =\n\t\t\t_link_source_task_start =\n\t\t\t\t_link_target_task = null;\n\t\t_link_target_task_start = true;\n\t}\n\tfunction showDirectingLine(s_x, s_y, e_x, e_y){\n\t\tvar div = getDirectionLine();\n\n\t\tvar link = getDndState();\n\n\t\tvar css = [\"gantt_link_direction\"];\n\t\tif(gantt.templates.link_direction_class){\n\t\t\tcss.push(gantt.templates.link_direction_class(link.link_source_id, link.link_from_start, link.link_target_id, link.link_to_start));\n\t\t}\n\n\t\tvar dist =Math.sqrt( (Math.pow(e_x - s_x, 2)) + (Math.pow(e_y - s_y, 2)) );\n\t\tdist = Math.max(0, dist - 3);\n\t\tif(!dist)\n\t\t\treturn;\n\n\t\tdiv.className = css.join(\" \");\n\t\tvar tan = (e_y - s_y)/(e_x - s_x),\n\t\t\tangle = Math.atan(tan);\n\n\t\tif(coordinateCircleQuarter(s_x, e_x, s_y, e_y) == 2){\n\t\t\tangle += Math.PI;\n\t\t}else if(coordinateCircleQuarter(s_x, e_x, s_y, e_y) == 3){\n\t\t\tangle -= Math.PI;\n\t\t}\n\n\n\n\t\tvar sin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\ttop = Math.round(s_y),\n\t\t\tleft = Math.round(s_x);\n\n\n\t\tvar style = [\n\t\t\t\"-webkit-transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"-moz-transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"-ms-transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"-o-transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"transform: rotate(\"+angle+\"rad)\",\n\t\t\t\"width:\" + Math.round(dist) + \"px\"\n\t\t];\n\n\t\tif(window.navigator.userAgent.indexOf(\"MSIE 8.0\") != -1){\n\t\t\t//ms-filter breaks styles in ie9, so add it only for 8th\n\t\t\tstyle.push(\"-ms-filter: \\\"\" + ieTransform(sin, cos) + \"\\\"\");\n\n\t\t\tvar shiftLeft = Math.abs(Math.round(s_x - e_x)),\n\t\t\t\tshiftTop = Math.abs(Math.round(e_y - s_y));\n\t\t\t//fix rotation axis\n\t\t\tswitch(coordinateCircleQuarter(s_x, e_x, s_y, e_y)){\n\t\t\t\tcase 1:\n\t\t\t\t\ttop -= shiftTop;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tleft -= shiftLeft;\n\t\t\t\t\ttop -= shiftTop;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tleft -= shiftLeft;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\n\t\tstyle.push(\"top:\" +  top + \"px\");\n\t\tstyle.push(\"left:\" +  left + \"px\");\n\n\t\tdiv.style.cssText = style.join(\";\");\n\t}\n\n\tfunction ieTransform(sin, cos){\n\t\treturn \"progid:DXImageTransform.Microsoft.Matrix(\"+\n\t\t\t\"M11 = \"+cos+\",\"+\n\t\t\t\"M12 = -\"+sin+\",\"+\n\t\t\t\"M21 = \"+sin+\",\"+\n\t\t\t\"M22 = \"+cos+\",\"+\n\t\t\t\"SizingMethod = 'auto expand'\"+\n\t\t\")\";\n\t}\n\tfunction coordinateCircleQuarter(sX, eX, sY, eY){\n\t\tif(eX >= sX){\n\t\t\tif(eY <= sY){\n\t\t\t\treturn 1;\n\t\t\t}else{\n\t\t\t\treturn 4;\n\t\t\t}\n\t\t}else{\n\t\t\tif(eY <= sY){\n\t\t\t\treturn 2;\n\t\t\t}else{\n\t\t\t\treturn 3;\n\t\t\t}\n\t\t}\n\n\t}\n\tfunction getDirectionLine(){\n\t\tif(!dnd._direction){\n\t\t\tdnd._direction = document.createElement(\"div\");\n\t\t\ttimeline.$task_links.appendChild(dnd._direction);\n\t\t}\n\t\treturn dnd._direction;\n\t}\n\tfunction removeDirectionLine(){\n\t\tif(dnd._direction){\n\t\t\tif (dnd._direction.parentNode)\t//the event line can be detached because of data refresh\n\t\t\t\tdnd._direction.parentNode.removeChild(dnd._direction);\n\n\t\t\tdnd._direction = null;\n\t\t}\n\t}\n};\n\nmodule.exports = {\n\tcreateLinkDND: function(){\n\t\treturn {\n\t\t\tinit: initLinksDND\n\t\t};\n\t}\n};","var domHelpers = require(\"../../../utils/dom_helpers\"),\n\tutils = require(\"../../../utils/utils\");\nvar timeout = require(\"../../../utils/timeout\");\n\nfunction createTaskDND(timeline, gantt){\n\tvar services = gantt.$services;\n\treturn {\n\t\tdrag: null,\n\t\tdragMultiple: {},\n\t\t_events: {\n\t\t\tbefore_start: {},\n\t\t\tbefore_finish: {},\n\t\t\tafter_finish: {}\n\t\t},\n\t\t_handlers: {},\n\t\tinit: function () {\n\t\t\tthis._domEvents = gantt._createDomEventScope();\n\t\t\tthis.clear_drag_state();\n\t\t\tvar drag = gantt.config.drag_mode;\n\t\t\tthis.set_actions();\n\n\t\t\tvar stateService = services.getService(\"state\");\n\t\t\tstateService.registerProvider(\"tasksDnd\", utils.bind(function(){\n\t\t\t\treturn {\n\t\t\t\t\tdrag_id : this.drag ? this.drag.id : undefined,\n\t\t\t\t\tdrag_mode : this.drag ? this.drag.mode : undefined,\n\t\t\t\t\tdrag_from_start : this.drag ? this.drag.left : undefined\n\t\t\t\t};\n\t\t\t}, this));\n\n\t\t\tvar evs = {\n\t\t\t\t\"before_start\": \"onBeforeTaskDrag\",\n\t\t\t\t\"before_finish\": \"onBeforeTaskChanged\",\n\t\t\t\t\"after_finish\": \"onAfterTaskDrag\"\n\t\t\t};\n\t\t\t//for now, all drag operations will trigger the same events\n\t\t\tfor (var stage in this._events) {\n\t\t\t\tfor (var mode in drag) {\n\t\t\t\t\tthis._events[stage][mode] = evs[stage];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._handlers[drag.move] = this._move;\n\t\t\tthis._handlers[drag.resize] = this._resize;\n\t\t\tthis._handlers[drag.progress] = this._resize_progress;\n\t\t},\n\t\tset_actions: function () {\n\t\t\tvar data = timeline.$task_data;\n\t\t\tthis._domEvents.attach(data, \"mousemove\", gantt.bind(function (e) {\n\t\t\t\tthis.on_mouse_move(e || event);\n\t\t\t}, this));\n\t\t\tthis._domEvents.attach(data, \"mousedown\", gantt.bind(function (e) {\n\t\t\t\tthis.on_mouse_down(e || event);\n\t\t\t}, this));\n\t\t\tthis._domEvents.attach(data, \"mouseup\", gantt.bind(function (e) {\n\t\t\t\tthis.on_mouse_up(e || event);\n\t\t\t}, this));\n\t\t},\n\n\t\tclear_drag_state: function () {\n\t\t\tthis.drag = {\n\t\t\t\tid: null,\n\t\t\t\tmode: null,\n\t\t\t\tpos: null,\n\t\t\t\tstart_x: null,\n\t\t\t\tstart_y: null,\n\t\t\t\tobj: null,\n\t\t\t\tleft: null\n\t\t\t};\n\t\t\tthis.dragMultiple = {};\n\t\t},\n\t\t_resize: function (ev, shift, drag) {\n\t\t\tvar cfg = timeline.$getConfig();\n\t\t\tvar coords_x = this._drag_task_coords(ev, drag);\n\t\t\tif (drag.left) {\n\t\t\t\tev.start_date = gantt.dateFromPos(coords_x.start + shift);\n\t\t\t\tif (!ev.start_date) {\n\t\t\t\t\tev.start_date = new Date(gantt.getState().min_date);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tev.end_date = gantt.dateFromPos(coords_x.end + shift);\n\t\t\t\tif (!ev.end_date) {\n\t\t\t\t\tev.end_date = new Date(gantt.getState().max_date);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (ev.end_date - ev.start_date < cfg.min_duration) {\n\t\t\t\tif (drag.left)\n\t\t\t\t\tev.start_date = gantt.calculateEndDate({start_date: ev.end_date, duration: -1, task: ev});\n\t\t\t\telse\n\t\t\t\t\tev.end_date = gantt.calculateEndDate({start_date: ev.start_date, duration: 1, task: ev});\n\t\t\t}\n\t\t\tgantt._init_task_timing(ev);\n\t\t},\n\t\t_resize_progress: function (ev, shift, drag) {\n\t\t\tvar coords_x = this._drag_task_coords(ev, drag);\n\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar diffValue = !config.rtl ? (drag.pos.x - coords_x.start) : (coords_x.start - drag.pos.x);\n\n\t\t\tvar diff = Math.max(0, diffValue);\n\t\t\tev.progress = Math.min(1, diff / Math.abs(coords_x.end - coords_x.start));\n\t\t},\n\n\t\t_find_max_shift: function(dragItems, shift){\n\t\t\tvar correctShift;\n\t\t\tfor(var i in dragItems){\n\t\t\t\tvar drag = dragItems[i];\n\t\t\t\tvar ev = gantt.getTask(drag.id);\n\n\t\t\t\tvar coords_x = this._drag_task_coords(ev, drag);\n\t\t\t\tvar minX = gantt.posFromDate( new Date(gantt.getState().min_date)),\n\t\t\t\t\tmaxX = gantt.posFromDate( new Date(gantt.getState().max_date));\n\n\t\t\t\tif(coords_x.end + shift > maxX){\n\t\t\t\t\tvar maxShift = maxX - coords_x.end;\n\t\t\t\t\tif(maxShift < correctShift || correctShift === undefined){\n\t\t\t\t\t\tcorrectShift = maxShift;\n\t\t\t\t\t}\n\t\t\t\t}else if(coords_x.start + shift < minX){\n\t\t\t\t\tvar minShift = minX - coords_x.start;\n\t\t\t\t\tif(minShift < correctShift || correctShift === undefined){\n\t\t\t\t\t\tcorrectShift = minShift;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn correctShift;\n\t\t},\n\t\t_move: function (ev, shift, drag) {\n\t\t\tvar coords_x = this._drag_task_coords(ev, drag);\n\t\t\tvar new_start = gantt.dateFromPos(coords_x.start + shift),\n\t\t\t\tnew_end = gantt.dateFromPos(coords_x.end + shift);\n\t\t\tif (!new_start) {\n\t\t\t\tev.start_date = new Date(gantt.getState().min_date);\n\t\t\t\tev.end_date = gantt.dateFromPos(gantt.posFromDate(ev.start_date) + (coords_x.end - coords_x.start));\n\t\t\t} else if (!new_end) {\n\t\t\t\tev.end_date = new Date(gantt.getState().max_date);\n\t\t\t\tev.start_date = gantt.dateFromPos(gantt.posFromDate(ev.end_date) - (coords_x.end - coords_x.start));\n\t\t\t} else {\n\t\t\t\tev.start_date = new_start;\n\t\t\t\tev.end_date = new_end;\n\t\t\t}\n\t\t},\n\t\t_drag_task_coords: function (t, drag) {\n\t\t\tvar start = drag.obj_s_x = drag.obj_s_x || gantt.posFromDate(t.start_date);\n\t\t\tvar end = drag.obj_e_x = drag.obj_e_x || gantt.posFromDate(t.end_date);\n\t\t\treturn {\n\t\t\t\tstart: start,\n\t\t\t\tend: end\n\t\t\t};\n\t\t},\n\t\t_mouse_position_change: function (oldPos, newPos) {\n\t\t\tvar dx = oldPos.x - newPos.x,\n\t\t\t\tdy = oldPos.y - newPos.y;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t},\n\t\t_is_number: function (n) {\n\t\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t\t},\n\n\t\ton_mouse_move: function (e) {\n\t\t\tif (this.drag.start_drag) {\n\t\t\t\tvar pos = domHelpers.getRelativeEventPosition(e, gantt.$task_data);\n\n\t\t\t\tvar sX = this.drag.start_drag.start_x,\n\t\t\t\t\tsY = this.drag.start_drag.start_y;\n\n\t\t\t\tif ((Date.now() - this.drag.timestamp > 50) ||\n\t\t\t\t\t(this._is_number(sX) && this._is_number(sY) && this._mouse_position_change({\n\t\t\t\t\t\tx: sX,\n\t\t\t\t\t\ty: sY\n\t\t\t\t\t}, pos) > 20)) {\n\t\t\t\t\tthis._start_dnd(e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar drag = this.drag;\n\n\t\t\tif (drag.mode) {\n\t\t\t\tif (!timeout(this, 40))//limit update frequency\n\t\t\t\t\treturn;\n\n\t\t\t\tthis._update_on_move(e);\n\n\t\t\t}\n\t\t},\n\n\t\t_update_item_on_move: function(shift, id, mode, drag, e){\n\t\t\tvar ev = gantt.getTask(id);\n\t\t\tvar original = gantt.mixin({}, ev);\n\t\t\tvar copy = gantt.mixin({}, ev);\n\t\t\tthis._handlers[mode].apply(this, [copy, shift, drag]);\n\t\t\tgantt.mixin(ev, copy, true);\n\t\t\t//gantt._update_parents(drag.id, true);\n\t\t\tgantt.callEvent(\"onTaskDrag\", [ev.id, mode, copy, original, e]);\n\t\t\tgantt.mixin(ev, copy, true);\n\t\t\tgantt.refreshTask(id);\n\t\t},\n\n\t\t_update_on_move: function (e) {\n\t\t\tvar drag = this.drag;\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tif (drag.mode) {\n\t\t\t\tvar pos = domHelpers.getRelativeEventPosition(e, timeline.$task_data);\n\t\t\t\tif (drag.pos && drag.pos.x == pos.x)\n\t\t\t\t\treturn;\n\n\t\t\t\tdrag.pos = pos;\n\n\t\t\t\tvar curr_date = gantt.dateFromPos(pos.x);\n\t\t\t\tif (!curr_date || isNaN(curr_date.getTime()))\n\t\t\t\t\treturn;\n\n\n\t\t\t\tvar shift = pos.x - drag.start_x;\n\t\t\t\tvar ev = gantt.getTask(drag.id);\n\n\t\t\t\tif (this._handlers[drag.mode]) {\n\n\t\t\t\t\tif(gantt.isSummaryTask(ev) && gantt.config.drag_project && drag.mode == config.drag_mode.move){\n\n\t\t\t\t\t\tvar initialDrag = {};\n\t\t\t\t\t\tinitialDrag[drag.id] = utils.copy(drag);\n\t\t\t\t\t\tvar maxShift = this._find_max_shift(utils.mixin(initialDrag, this.dragMultiple), shift);\n\t\t\t\t\t\tif(maxShift !== undefined){\n\t\t\t\t\t\t\tshift = maxShift;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._update_item_on_move(shift, drag.id, drag.mode, drag, e);\n\t\t\t\t\t\tfor(var i in this.dragMultiple){\n\t\t\t\t\t\t\tvar childDrag =  this.dragMultiple[i];\n\t\t\t\t\t\t\tthis._update_item_on_move(shift, childDrag.id, childDrag.mode, childDrag, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis._update_item_on_move(shift, drag.id, drag.mode, drag, e);\n\t\t\t\t\t}\n\t\t\t\t\tgantt._update_parents(drag.id);\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\n\t\ton_mouse_down: function (e, src) {\n\t\t\t// on Mac we do not get onmouseup event when clicking right mouse button leaving us in dnd state\n\t\t\t// let's ignore right mouse button then\n\t\t\tif (e.button == 2 && e.button !== undefined)\n\t\t\t\treturn;\n\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar id = gantt.locate(e);\n\t\t\tvar task = null;\n\t\t\tif (gantt.isTaskExists(id)) {\n\t\t\t\ttask = gantt.getTask(id);\n\t\t\t}\n\n\t\t\tif (gantt.isReadonly(task) || this.drag.mode) return;\n\n\t\t\tthis.clear_drag_state();\n\n\t\t\tsrc = src || (e.target || e.srcElement);\n\n\t\t\tvar className = domHelpers.getClassName(src);\n\t\t\tvar drag = this._get_drag_mode(className, src);\n\n\t\t\tif (!className || !drag) {\n\t\t\t\tif (src.parentNode)\n\t\t\t\t\treturn this.on_mouse_down(e, src.parentNode);\n\t\t\t\telse\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!drag) {\n\t\t\t\tif (gantt.checkEvent(\"onMouseDown\") && gantt.callEvent(\"onMouseDown\", [className.split(\" \")[0]])) {\n\t\t\t\t\tif (src.parentNode)\n\t\t\t\t\t\treturn this.on_mouse_down(e, src.parentNode);\n\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (drag.mode && drag.mode != config.drag_mode.ignore && config[\"drag_\" + drag.mode]) {\n\t\t\t\t\tid = gantt.locate(src);\n\t\t\t\t\ttask = gantt.copy(gantt.getTask(id) || {});\n\n\t\t\t\t\tif (gantt.isReadonly(task)) {\n\t\t\t\t\t\tthis.clear_drag_state();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((gantt.isSummaryTask(task) && !config.drag_project) && drag.mode != config.drag_mode.progress) {//only progress drag is allowed for tasks with flexible duration\n\t\t\t\t\t\tthis.clear_drag_state();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdrag.id = id;\n\t\t\t\t\tvar pos = domHelpers.getRelativeEventPosition(e, gantt.$task_data);\n\n\t\t\t\t\tdrag.start_x = pos.x;\n\t\t\t\t\tdrag.start_y = pos.y;\n\t\t\t\t\tdrag.obj = task;\n\t\t\t\t\tthis.drag.start_drag = drag;\n\t\t\t\t\tthis.drag.timestamp = Date.now();\n\n\t\t\t\t} else\n\t\t\t\t\tthis.clear_drag_state();\n\t\t\t}\n\t\t},\n\t\t_fix_dnd_scale_time: function (task, drag) {\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar unit = gantt.getScale().unit,\n\t\t\t\tstep = gantt.getScale().step;\n\t\t\tif (!config.round_dnd_dates) {\n\t\t\t\tunit = 'minute';\n\t\t\t\tstep = config.time_step;\n\t\t\t}\n\n\t\t\tfunction fixStart(task) {\n\t\t\t\tif (!gantt.config.correct_work_time)\n\t\t\t\t\treturn;\n\t\t\t\tvar config = timeline.$getConfig();\n\t\t\t\tif (!gantt.isWorkTime(task.start_date, undefined, task))\n\t\t\t\t\ttask.start_date = gantt.calculateEndDate({\n\t\t\t\t\t\tstart_date: task.start_date,\n\t\t\t\t\t\tduration: -1,\n\t\t\t\t\t\tunit: config.duration_unit,\n\t\t\t\t\t\ttask: task\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction fixEnd(task) {\n\t\t\t\tif (!gantt.config.correct_work_time)\n\t\t\t\t\treturn;\n\t\t\t\tvar config = timeline.$getConfig();\n\t\t\t\tif (!gantt.isWorkTime(new Date(task.end_date - 1), undefined, task))\n\t\t\t\t\ttask.end_date = gantt.calculateEndDate({\n\t\t\t\t\t\tstart_date: task.end_date,\n\t\t\t\t\t\tduration: 1,\n\t\t\t\t\t\tunit: config.duration_unit,\n\t\t\t\t\t\ttask: task\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (drag.mode == config.drag_mode.resize) {\n\t\t\t\tif (drag.left) {\n\t\t\t\t\ttask.start_date = gantt.roundDate({date: task.start_date, unit: unit, step: step});\n\t\t\t\t\tfixStart(task);\n\t\t\t\t} else {\n\t\t\t\t\ttask.end_date = gantt.roundDate({date: task.end_date, unit: unit, step: step});\n\t\t\t\t\tfixEnd(task);\n\t\t\t\t}\n\t\t\t} else if (drag.mode == config.drag_mode.move) {\n\t\t\t\ttask.start_date = gantt.roundDate({date: task.start_date, unit: unit, step: step});\n\t\t\t\tfixStart(task);\n\t\t\t\ttask.end_date = gantt.calculateEndDate(task);\t\t\t\t\n\t\t\t}\n\t\t},\n\t\t_fix_working_times: function (task, drag) {\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar drag = drag || {mode: config.drag_mode.move};\n\t\t\t\n\t\t\tif (drag.mode == config.drag_mode.resize) {\n\t\t\t\tif (drag.left) {\n\t\t\t\t\ttask.start_date = gantt.getClosestWorkTime({date: task.start_date, dir: 'future', task: task});\n\t\t\t\t} else {\n\t\t\t\t\ttask.end_date = gantt.getClosestWorkTime({date: task.end_date, dir: 'past', task: task});\n\t\t\t\t}\n\t\t\t} else if (drag.mode == config.drag_mode.move) {\n\t\t\t\tgantt.correctTaskWorkTime(task);\n\t\t\t}\n\t\t},\n\n\t\t_finalize_mouse_up: function(taskId, config, drag, e){\n\t\t\tvar ev = gantt.getTask(taskId);\n\n\t\t\tif (config.work_time && config.correct_work_time) {\n\t\t\t\tthis._fix_working_times(ev, drag);\n\t\t\t}\n\n\t\t\tthis._fix_dnd_scale_time(ev, drag);\n\n\t\t\tif (!this._fireEvent(\"before_finish\", drag.mode, [taskId, drag.mode, gantt.copy(drag.obj), e])) {\n\t\t\t\t//drag.obj._dhx_changed = false;\n\t\t\t\tthis.clear_drag_state();\n\t\t\t\tif(taskId == drag.id){\n\t\t\t\t\tdrag.obj._dhx_changed = false;\n\t\t\t\t\tgantt.mixin(ev, drag.obj, true);\n\t\t\t\t}\n\n\n\t\t\t\tgantt.refreshTask(ev.id);\n\t\t\t} else {\n\t\t\t\tvar drag_id = taskId;\n\n\t\t\t\tgantt._init_task_timing(ev);\n\n\t\t\t\tthis.clear_drag_state();\n\t\t\t\tgantt.updateTask(ev.id);\n\t\t\t\tthis._fireEvent(\"after_finish\", drag.mode, [drag_id, drag.mode, e]);\n\t\t\t}\n\n\t\t},\n\n\t\ton_mouse_up: function (e) {\n\n\t\t\tvar drag = this.drag;\n\t\t\tif (drag.mode && drag.id) {\n\t\t\t\tvar config = timeline.$getConfig();\n\t\t\t\t//drop\n\t\t\t\tvar ev = gantt.getTask(drag.id);\n\t\t\t\tvar dragMultiple = this.dragMultiple;\n\n\t\t\t\tif(gantt.isSummaryTask(ev) && config.drag_project && drag.mode == config.drag_mode.move){\n\t\t\t\t\tfor(var i in dragMultiple){\n\t\t\t\t\t\tthis._finalize_mouse_up(dragMultiple[i].id, config, dragMultiple[i], e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._finalize_mouse_up(drag.id, config, drag, e);\n\t\t\t}\n\t\t\tthis.clear_drag_state();\n\t\t},\n\t\t_get_drag_mode: function (className, el) {\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tvar modes = config.drag_mode;\n\t\t\tvar classes = (className || \"\").split(\" \");\n\t\t\tvar classname = classes[0];\n\t\t\tvar drag = {mode: null, left: null};\n\t\t\tswitch (classname) {\n\t\t\t\tcase \"gantt_task_line\":\n\t\t\t\tcase \"gantt_task_content\":\n\t\t\t\t\tdrag.mode = modes.move;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"gantt_task_drag\":\n\t\t\t\t\tdrag.mode = modes.resize;\n\n\t\t\t\t\tvar dragProperty = el.getAttribute(\"data-bind-property\");\n\n\t\t\t\t\tif (dragProperty == \"start_date\") {\n\t\t\t\t\t\tdrag.left = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdrag.left = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"gantt_task_progress_drag\":\n\t\t\t\t\tdrag.mode = modes.progress;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"gantt_link_control\":\n\t\t\t\tcase \"gantt_link_point\":\n\t\t\t\t\tdrag.mode = modes.ignore;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tdrag = null;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn drag;\n\n\t\t},\n\n\t\t_start_dnd: function (e) {\n\t\t\tvar drag = this.drag = this.drag.start_drag;\n\t\t\tdelete drag.start_drag;\n\n\t\t\tvar cfg = timeline.$getConfig();\n\t\t\tvar id = drag.id;\n\t\t\tif (!cfg[\"drag_\" + drag.mode] || !gantt.callEvent(\"onBeforeDrag\", [id, drag.mode, e]) || !this._fireEvent(\"before_start\", drag.mode, [id, drag.mode, e])) {\n\t\t\t\tthis.clear_drag_state();\n\t\t\t} else {\n\t\t\t\tdelete drag.start_drag;\n\n\t\t\t\tvar task = gantt.getTask(id);\n\t\t\t\tif(gantt.isSummaryTask(task) && gantt.config.drag_project && drag.mode == cfg.drag_mode.move){\n\t\t\t\t\tgantt.eachTask(function(child){\n\t\t\t\t\t\tthis.dragMultiple[child.id] = gantt.mixin({\n\t\t\t\t\t\t\tid: child.id,\n\t\t\t\t\t\t\tobj: child\n\t\t\t\t\t\t}, this.drag);\n\t\t\t\t\t}, task.id, this);\n\t\t\t\t}\n\n\t\t\t\tgantt.callEvent(\"onTaskDragStart\", []);\n\t\t\t}\n\n\t\t},\n\t\t_fireEvent: function (stage, mode, params) {\n\t\t\tgantt.assert(this._events[stage], \"Invalid stage:{\" + stage + \"}\");\n\n\t\t\tvar trigger = this._events[stage][mode];\n\n\t\t\tgantt.assert(trigger, \"Unknown after drop mode:{\" + mode + \"}\");\n\t\t\tgantt.assert(params, \"Invalid event arguments\");\n\n\n\t\t\tif (!gantt.checkEvent(trigger))\n\t\t\t\treturn true;\n\n\t\t\treturn gantt.callEvent(trigger, params);\n\t\t},\n\n\t\tround_task_dates: function(task){\n\t\t\tvar drag_state = this.drag;\n\t\t\tvar config = timeline.$getConfig();\n\t\t\tif (!drag_state) {\n\t\t\t\tdrag_state = {mode: config.drag_mode.move};\n\t\t\t}\n\t\t\tthis._fix_dnd_scale_time(task, drag_state);\n\t\t},\n\t\tdestructor: function(){\n\t\t\tthis._domEvents.detachAll();\n\t\t}\n\t};\n}\n\nfunction initTaskDND() {\n\tvar _tasks_dnd;\n\treturn {\n\t\textend: function(timeline){\n\t\t\ttimeline.roundTaskDates = function (task) {\n\t\t\t\t_tasks_dnd.round_task_dates(task);\n\t\t\t};\n\n\t\t},\n\t\tinit: function(timeline, gantt){\n\t\t\t_tasks_dnd = createTaskDND(timeline, gantt);\n\t\t\t// TODO: entry point for touch handlers, move touch to timeline\n\t\t\ttimeline._tasks_dnd = _tasks_dnd;\n\t\t\treturn _tasks_dnd.init(gantt);\n\t\t},\n\t\tdestructor: function(){\n\t\t\t_tasks_dnd.destructor();\n\t\t\t_tasks_dnd = null;\n\t\t}\n\t};\n}\n\nmodule.exports = {\n\tcreateTaskDND: initTaskDND\n};\n","var utils = require(\"../../../utils/utils\"),\n\ttaskDnD = require(\"./tasks_dnd\"),\n\tlinkDnD = require(\"./links_dnd\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\");\n\nvar initializer = (function(){\n\treturn function(gantt){\n\t\tvar services = gantt.$services;\n\t\treturn {\n\t\t\tonCreated: function (timeline) {\n\t\t\t\tvar config = timeline.$config;\n\t\t\t\tconfig.bind = utils.defined(config.bind) ? config.bind : \"task\";\n\t\t\t\tconfig.bindLinks = utils.defined(config.bindLinks) ? config.bindLinks : \"link\";\n\n\t\t\t\ttimeline._linksDnD = linkDnD.createLinkDND();\n\t\t\t\ttimeline._tasksDnD = taskDnD.createTaskDND();\n\t\t\t\ttimeline._tasksDnD.extend(timeline);\n\n\t\t\t\tthis._mouseDelegates = require(\"../mouse_event_container\")(gantt);\n\t\t\t},\n\t\t\tonInitialized: function (timeline) {\n\t\t\t\tthis._attachDomEvents(gantt);\n\n\t\t\t\tthis._attachStateProvider(gantt, timeline);\n\n\t\t\t\ttimeline._tasksDnD.init(timeline, gantt);\n\t\t\t\ttimeline._linksDnD.init(timeline, gantt);\n\n\t\t\t\tif(timeline.$config.id == \"timeline\"){\n\t\t\t\t\tthis.extendDom(timeline);\n\t\t\t\t}\n\n\t\t\t},\n\t\t\tonDestroyed: function (timeline) {\n\t\t\t\tthis._clearDomEvents(gantt);\n\t\t\t\tthis._clearStateProvider(gantt);\n\t\t\t},\n\t\t\textendDom: function(timeline){\n\t\t\t\tgantt.$task = timeline.$task;\n\t\t\t\tgantt.$task_scale = timeline.$task_scale;\n\t\t\t\tgantt.$task_data = timeline.$task_data;\n\t\t\t\tgantt.$task_bg = timeline.$task_bg;\n\t\t\t\tgantt.$task_links = timeline.$task_links;\n\t\t\t\tgantt.$task_bars = timeline.$task_bars;\n\t\t\t},\n\n\t\t\t_clearDomEvents: function(){\n\t\t\t\tthis._mouseDelegates.destructor();\n\t\t\t\tthis._mouseDelegates = null;\n\t\t\t},\n\n\t\t\t_attachDomEvents: function(gantt){\n\t\t\t\tfunction _delete_link_handler(id, e) {\n\t\t\t\t\tif (id && this.callEvent(\"onLinkDblClick\", [id, e])) {\n\n\t\t\t\t\t\tvar link = this.getLink(id);\n\t\t\t\t\t\tif (this.isReadonly(link)) return;\n\n\t\t\t\t\t\tvar title = \"\";\n\t\t\t\t\t\tvar question = this.locale.labels.link + \" \" + this.templates.link_description(this.getLink(id)) + \" \" + this.locale.labels.confirm_link_deleting;\n\n\t\t\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t\t\tgantt._dhtmlx_confirm(question, title, function () {\n\t\t\t\t\t\t\t\tgantt.deleteLink(id);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, (this.config.touch ? 300 : 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_task_link\", gantt.bind(function (e, trg) {\n\t\t\t\t\tvar id = this.locate(e, this.config.link_attribute);\n\t\t\t\t\tif (id) {\n\t\t\t\t\t\tthis.callEvent(\"onLinkClick\", [id, e]);\n\t\t\t\t\t}\n\t\t\t\t}, gantt), this.$task);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_scale_cell\", gantt.bind(function (e, trg) {\n\t\t\t\t\tvar pos = domHelpers.getRelativeEventPosition(e, gantt.$task_data);\n\t\t\t\t\tvar date = gantt.dateFromPos(pos.x);\n\t\t\t\t\tvar coll = Math.floor(gantt.columnIndexByDate(date));\n\n\t\t\t\t\tvar coll_date = gantt.getScale().trace_x[coll];\n\n\t\t\t\t\tgantt.callEvent(\"onScaleClick\", [e, coll_date]);\n\t\t\t\t}, gantt), this.$task);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"doubleclick\", \"gantt_task_link\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar id = this.locate(e, gantt.config.link_attribute);\n\t\t\t\t\t_delete_link_handler.call(this, id, e);\n\t\t\t\t}, gantt), this.$task);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"doubleclick\", \"gantt_link_point\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar id = this.locate(e),\n\t\t\t\t\t\ttask = this.getTask(id);\n\n\t\t\t\t\tvar link = null;\n\t\t\t\t\tif (trg.parentNode && domHelpers.getClassName(trg.parentNode)) {\n\t\t\t\t\t\tif (domHelpers.getClassName(trg.parentNode).indexOf(\"_left\") > -1) {\n\t\t\t\t\t\t\tlink = task.$target[0];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlink = task.$source[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (link)\n\t\t\t\t\t\t_delete_link_handler.call(this, link, e);\n\t\t\t\t\treturn false;\n\t\t\t\t}, gantt), this.$task);\n\t\t\t},\n\n\t\t\t_attachStateProvider: function(gantt, timeline){\n\t\t\t\tvar self = timeline;\n\t\t\t\tvar state = services.getService(\"state\");\n\t\t\t\tstate.registerProvider(\"tasksTimeline\", function(){\n\t\t\t\t\treturn {\n\t\t\t\t\t\tscale_unit: self._tasks ? self._tasks.unit : undefined,\n\t\t\t\t\t\tscale_step:  self._tasks ? self._tasks.step  : undefined\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t_clearStateProvider: function(){\n\t\t\t\tvar state = services.getService(\"state\");\n\t\t\t\tstate.unregisterProvider(\"tasksTimeline\");\n\t\t\t}\n\t\t};\n\t};\n\n})();\n\nmodule.exports = initializer;","var domHelpers = require(\"../../../../utils/dom_helpers\");\n\n/**\n * methods for highlighting current drag and drop position\n */\n\nfunction highlightPosition(target, root, grid){\n\tvar markerPos = getTaskMarkerPosition(target, grid);\n\t// setting position of row\n\troot.marker.style.left = 10 + \"px\";\n\troot.marker.style.top = markerPos.y + \"px\";\n\tvar markerLine = root.markerLine;\n\tif(!markerLine){\n\t\tmarkerLine = document.createElement(\"div\");\n\t\tmarkerLine.className = \"gantt_drag_marker gantt_grid_dnd_marker\";\n\t\tmarkerLine.innerHTML = \"<div class='gantt_grid_dnd_marker_line'></div>\";\n\t\tmarkerLine.style.pointerEvents = \"none\";\n\t\tdocument.body.appendChild(markerLine);\n\t\troot.markerLine = markerLine;\n\t}\n\tif(target.child){\n\t\thighlightFolder(target, markerLine, grid);\n\t}else{\n\t\thighlightRow(target, markerLine, grid);\n\t}\n}\n\nfunction removeLineHighlight(root){\n\tif(root.markerLine && root.markerLine.parentNode){\n\t\troot.markerLine.parentNode.removeChild(root.markerLine);\n\t}\n\troot.markerLine = null;\n}\n\nfunction highlightRow(target, markerLine, grid){\n\tvar linePos = getLineMarkerPosition(target, grid);\n\n\tmarkerLine.innerHTML = \"<div class='gantt_grid_dnd_marker_line'></div>\";\n\tmarkerLine.style.left = linePos.x + \"px\";\n\tmarkerLine.style.height = \"4px\";\n\n\tmarkerLine.style.top = (linePos.y - 2) + \"px\";\n\tmarkerLine.style.width = linePos.width + \"px\";\n\n\treturn markerLine;\n}\nfunction highlightFolder(target, markerFolder, grid){\n\tvar id = target.targetParent;\n\tvar pos = gridToPageCoordinates({x: 0, y: grid.getItemTop(id)}, grid);\n\n\tmarkerFolder.innerHTML = \"<div class='gantt_grid_dnd_marker_folder'></div>\";\n\tmarkerFolder.style.width = grid.$grid_data.offsetWidth + \"px\";\n\tmarkerFolder.style.top = pos.y + \"px\";\n\tmarkerFolder.style.left = pos.x  + \"px\";\n\tmarkerFolder.style.height = grid.getItemHeight(id) + \"px\";\n\treturn markerFolder;\n}\n\nfunction getLineMarkerPosition(target, grid){\n\tvar store = grid.$config.rowStore;\n\tvar pos = {x:0, y:0};\n\tvar indentNode = grid.$grid_data.querySelector(\".gantt_tree_indent\");\n\tvar indent = 15;\n\tvar level = 0;\n\tif(indentNode){\n\t\tindent = indentNode.offsetWidth;\n\t}\n\tvar iconWidth = 40;\n\tif(target.targetId !== store.$getRootId()){\n\t\tvar itemTop = grid.getItemTop(target.targetId);\n\t\tvar itemHeight = grid.getItemHeight(target.targetId);\n\t\tlevel = store.exists(target.targetId) ? store.calculateItemLevel(store.getItem(target.targetId)) : 0;\n\n\t\tif(target.prevSibling){\n\t\t\tpos.y = itemTop;\n\t\t}else if(target.nextSibling){\n\t\t\tvar childCount = 0;\n\t\t\tstore.eachItem(function(child){\n\t\t\t\tif(store.getIndexById(child.id) !== -1)\n\t\t\t\t\tchildCount++;\n\t\t\t}, target.targetId);\n\n\t\t\tpos.y = itemTop + itemHeight + childCount*itemHeight;\n\t\t}else {\n\t\t\tpos.y = itemTop + itemHeight;\n\t\t\tlevel += 1;\n\t\t}\n\t}\n\tpos.x = iconWidth + level * indent;\n\tpos.width = Math.max(grid.$grid_data.offsetWidth - pos.x, 0);\n\treturn gridToPageCoordinates(pos, grid);\n}\n\nfunction gridToPageCoordinates(pos, grid){\n\tvar gridPos = domHelpers.getNodePosition(grid.$grid_data);\n\tpos.x += gridPos.x - grid.$grid.scrollLeft;\n\tpos.y += gridPos.y - grid.$grid_data.scrollTop;\n\treturn pos;\n}\n\nfunction getTaskMarkerPosition(e, grid) {\n\tvar pos = domHelpers.getNodePosition(grid.$grid_data);\n\tvar ePos = domHelpers.getRelativeEventPosition(e, grid.$grid_data);\n\tvar store = grid.$config.rowStore;\n\t// row offset\n\tvar x = pos.x;\n\tvar y = ePos.y - 10;\n\n\tvar config = grid.$getConfig();\n\t// prevent moving row out of grid_data container\n\tif (y < pos.y) y = pos.y;\n\tvar gridHeight = store.countVisible() * config.row_height;\n\tif (y > pos.y + gridHeight - config.row_height) y = pos.y + gridHeight - config.row_height;\n\n\tpos.x = x;\n\tpos.y = y;\n\treturn pos;\n}\n\nmodule.exports = {\n\tremoveLineHighlight: removeLineHighlight,\n\thighlightPosition: highlightPosition\n};\n","/**\n * resolve dnd position of the task when gantt.config.order_branch_free = true\n */\n\nvar dropTarget = require(\"./drop_target\");\n\nmodule.exports = function getMultiLevelDropPosition(dndTaskId, targetTaskId, relTargetPos, eventTop, store){\n\tvar result;\n\n\tif(targetTaskId !== store.$getRootId()){\n\t\tif(relTargetPos < 0.25){\n\t\t\tresult = dropTarget.prevSiblingTarget(dndTaskId, targetTaskId, store);\n\t\t}else if(relTargetPos > 0.60 && !(store.hasChild(targetTaskId) && store.getItem(targetTaskId).$open)){\n\t\t\tresult = dropTarget.nextSiblingTarget(dndTaskId, targetTaskId, store);\n\t\t}else {\n\t\t\tresult = dropTarget.firstChildTarget(dndTaskId, targetTaskId, store);\n\t\t}\n\t}else{\n\t\tvar rootId = store.$getRootId();\n\t\tif(store.hasChild(rootId) && eventTop >= 0){\n\t\t\tresult = dropTarget.lastChildTarget(dndTaskId, rootId, store);\n\t\t}else{\n\t\t\tresult = dropTarget.firstChildTarget(dndTaskId, rootId, store);\n\t\t}\n\t}\n\n\treturn result;\n};","/**\n * resolve dnd position of the task when gantt.config.order_branch_free = false\n */\n\nvar dropTarget = require(\"./drop_target\");\n\nfunction getLast(store){\n\tvar current = store.getNext();\n\twhile(store.exists(current)){\n\n\t\tvar next = store.getNext(current);\n\t\tif(!store.exists(next)){\n\t\t\treturn current;\n\t\t}else{\n\t\t\tcurrent = next;\n\t\t}\n\t}\n\treturn null;\n}\n\nfunction findClosesTarget(dndTaskId, taskId, allowedLevel, store, up){\n\tvar prev = taskId;\n\twhile(store.exists(prev)){\n\t\tvar targetLevel = store.calculateItemLevel(store.getItem(prev));\n\t\tif((targetLevel === allowedLevel || targetLevel === (allowedLevel - 1)) && store.getBranchIndex(prev) > -1){\n\t\t\tbreak;\n\t\t}else {\n\t\t\tprev = up ? store.getPrev(prev) : store.getNext(prev);\n\t\t}\n\t}\n\n\tif(store.exists(prev)){\n\t\tif(store.calculateItemLevel(store.getItem(prev)) === allowedLevel){\n\t\t\treturn up ? dropTarget.nextSiblingTarget(dndTaskId, prev, store) : dropTarget.prevSiblingTarget(dndTaskId, prev, store);\n\t\t}else{\n\t\t\treturn dropTarget.firstChildTarget(dndTaskId, prev, store);\n\t\t}\n\t}\n\treturn null;\n}\n\nfunction findTargetAbove(dndTaskId, taskId, allowedLevel, store){\n\treturn findClosesTarget(dndTaskId, taskId, allowedLevel, store, true);\n}\nfunction findTargetBelow(dndTaskId, taskId, allowedLevel, store){\n\treturn findClosesTarget(dndTaskId, taskId, allowedLevel, store, false);\n}\n\nmodule.exports = function getSameLevelDropPosition(dndTaskId, targetTaskId, relTargetPos, eventTop, store, level){\n\tvar result;\n\tif(targetTaskId !== store.$getRootId()) {\n\t\tif (relTargetPos < 0.5) {\n\t\t\tif (store.calculateItemLevel(store.getItem(targetTaskId)) === level) {\n\t\t\t\tif(store.getPrevSibling(targetTaskId)){\n\t\t\t\t\tresult = dropTarget.nextSiblingTarget(dndTaskId, store.getPrevSibling(targetTaskId), store);\n\t\t\t\t}else{\n\t\t\t\t\tresult = dropTarget.prevSiblingTarget(dndTaskId, targetTaskId, store);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult = findTargetAbove(dndTaskId, targetTaskId, level, store);\n\t\t\t\tif (result) {\n\t\t\t\t\tresult = findTargetBelow(dndTaskId, targetTaskId, level, store);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (store.calculateItemLevel(store.getItem(targetTaskId)) === level) {\n\t\t\t\tresult = dropTarget.nextSiblingTarget(dndTaskId, targetTaskId, store);\n\t\t\t} else {\n\t\t\t\tresult = findTargetBelow(dndTaskId, targetTaskId, level, store);\n\t\t\t\tif (result) {\n\t\t\t\t\tresult = findTargetAbove(dndTaskId, targetTaskId, level, store);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tvar rootId = store.$getRootId();\n\t\tvar rootLevel = store.getChildren(rootId);\n\t\tresult = dropTarget.createDropTargetObject();\n\t\tif(rootLevel.length && eventTop >= 0){\n\t\t\tresult = findTargetAbove(dndTaskId, getLast(store), level, store);\n\t\t}else{\n\t\t\tresult = findTargetBelow(dndTaskId, rootId, level, store);\n\t\t}\n\t}\n\n\treturn result;\n};\n","var domHelpers = require(\"../../../utils/dom_helpers\");\nvar dropTarget = require(\"./tasks_grid_dnd_marker_helpers/drop_target\");\nvar getLockedLevelTarget = require(\"./tasks_grid_dnd_marker_helpers/locked_level\");\nvar getMultiLevelTarget = require(\"./tasks_grid_dnd_marker_helpers/multi_level\");\nvar higlighter = require(\"./tasks_grid_dnd_marker_helpers/highlight\");\n\nfunction _init_dnd(gantt, grid) {\n\tvar DnD = gantt.$services.getService(\"dnd\");\n\n\tif(!grid.$config.bind || !gantt.getDatastore(grid.$config.bind)){\n\t\treturn;\n\t}\n\n\tfunction locate(e){\n\t\treturn domHelpers.locateAttribute(e, grid.$config.item_attribute);\n\t}\n\n\tvar dnd = new DnD(grid.$grid_data, {updates_per_second: 60});\n\tif (gantt.defined(grid.$getConfig().dnd_sensitivity))\n\t\tdnd.config.sensitivity = grid.$getConfig().dnd_sensitivity;\n\n\tdnd.attachEvent(\"onBeforeDragStart\", gantt.bind(function (obj, e) {\n\t\tvar el = locate(e);\n\t\tif (!el) return false;\n\t\tif (gantt.hideQuickInfo) gantt._hideQuickInfo();\n\n\t\tvar id = el.getAttribute(grid.$config.item_attribute);\n\t\tvar datastore = grid.$config.rowStore;\n\t\tvar task = datastore.getItem(id);\n\n\t\tif (gantt.isReadonly(task))\n\t\t\treturn false;\n\n\t\tdnd.config.initial_open_state = task.$open;\n\t\tif (!gantt.callEvent(\"onRowDragStart\", [id, e.target || e.srcElement, e])) {\n\t\t\treturn false;\n\t\t}\n\n\t}, gantt));\n\n\tdnd.attachEvent(\"onAfterDragStart\", gantt.bind(function (obj, e) {\n\t\tvar el = locate(e);\n\n\t\tdnd.config.marker.innerHTML = el.outerHTML;\n\t\tvar element = dnd.config.marker.firstChild;\n\t\tif(element){\n\t\t\tdnd.config.marker.style.opacity = 0.4;\n\t\t\telement.style.position = \"static\";\n\t\t\telement.style.pointerEvents = \"none\";\n\t\t}\n\t\t\n\t\tdnd.config.id = el.getAttribute(grid.$config.item_attribute);\n\n\t\tvar store = grid.$config.rowStore;\n\n\t\tvar task = store.getItem(dnd.config.id);\n\t\tdnd.config.level = store.calculateItemLevel(task);\n\t\tdnd.config.drop_target = dropTarget.createDropTargetObject({\n\t\t\ttargetParent: store.getParent(task.id),\n\t\t\ttargetIndex: store.getBranchIndex(task.id),\n\t\t\ttargetId: task.id,\n\t\t\tnextSibling: true\n\t\t});\n\n\t\ttask.$open = false;\n\t\ttask.$transparent = true;\n\t\tthis.refreshData();\n\t}, gantt));\n\n\tfunction getTargetTaskId(e){\n\t\tvar y = domHelpers.getRelativeEventPosition(e, grid.$grid_data).y;\n\t\tvar store = grid.$config.rowStore;\n\n\t\ty = y || 0;\n\n\t\tif(y < 0){\n\t\t\treturn store.$getRootId();\n\t\t}\n\n\t\tvar index = Math.floor(y / grid.getItemHeight());\n\n\t\tif (index > store.countVisible() - 1)\n\t\t\treturn store.$getRootId();\n\n\t\treturn store.getIdByIndex(index);\n\t}\n\n\tfunction getDropPosition(e){\n\t\tvar targetTaskId = getTargetTaskId(e);\n\t\tvar relTargetPos = null;\n\t\tvar store = grid.$config.rowStore;\n\t\tvar config = grid.$getConfig();\n\t\tvar lockLevel = !config.order_branch_free;\n\n\t\tvar eventTop = domHelpers.getRelativeEventPosition(e, grid.$grid_data).y;\n\n\t\tif(targetTaskId !== store.$getRootId()) {\n\t\t\tvar rowTop = grid.getItemTop(targetTaskId);\n\t\t\tvar rowHeight = grid.getItemHeight();\n\t\t\trelTargetPos = (eventTop - rowTop) / rowHeight;\n\t\t}\n\n\t\tvar result;\n\t\tif(!lockLevel){\n\t\t\tresult = getMultiLevelTarget(dnd.config.id, targetTaskId, relTargetPos, eventTop, store);\n\t\t}else{\n\t\t\tresult = getLockedLevelTarget(dnd.config.id, targetTaskId, relTargetPos, eventTop, store, dnd.config.level);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tdnd.attachEvent(\"onDragMove\", gantt.bind(function (obj, e) {\n\t\tvar target = getDropPosition(e);\n\n\t\tif(!target || \n\t\t\tgantt.callEvent(\"onBeforeRowDragMove\", [dnd.config.id, target.targetParent, target.targetIndex]) === false){\n\t\t\t\ttarget = dropTarget.createDropTargetObject(dnd.config.drop_target);\n\t\t\t}\n\t\t\n\t\thiglighter.highlightPosition(target, dnd.config, grid);\n\t\tdnd.config.drop_target = target;\n\n\t\tthis.callEvent(\"onRowDragMove\", [dnd.config.id, target.targetParent, target.targetIndex]);\n\t\treturn true;\n\t}, gantt));\n\n\tdnd.attachEvent(\"onDragEnd\", gantt.bind(function () {\n\t\tvar store = grid.$config.rowStore;\n\t\tvar task = store.getItem(dnd.config.id);\n\n\t\thiglighter.removeLineHighlight(dnd.config);\n\n\t\ttask.$transparent = false;\n\t\ttask.$open = dnd.config.initial_open_state;\n\t\tvar target = dnd.config.drop_target;\n\n\t\tif (this.callEvent(\"onBeforeRowDragEnd\", [dnd.config.id, target.targetParent, target.targetIndex]) === false) {\n\t\t\ttask.$drop_target = null;\n\t\t} else {\n\t\t\tstore.move(dnd.config.id, target.targetIndex, target.targetParent);\n\t\t\tthis.callEvent(\"onRowDragEnd\", [dnd.config.id, target.targetParent, target.targetIndex]);\n\t\t}\n\t\tstore.refresh(task.id);\n\t}, gantt));\n}\n\nmodule.exports = {\n\tinit: _init_dnd\n};","var domHelpers = require(\"../../../utils/dom_helpers\");\n\nfunction _init_dnd(gantt, grid) {\n\tvar DnD = gantt.$services.getService(\"dnd\");\n\n\tif(!grid.$config.bind || !gantt.getDatastore(grid.$config.bind)){\n\t\treturn;\n\t}\n\n\tfunction locate(e){\n\t\treturn domHelpers.locateAttribute(e, grid.$config.item_attribute);\n\t}\n\n\tfunction getStore(){\n\t\treturn gantt.getDatastore(grid.$config.bind);\n\t}\n\n\tvar dnd = new DnD(grid.$grid_data, {updates_per_second: 60});\n\tif (gantt.defined(grid.$getConfig().dnd_sensitivity))\n\t\tdnd.config.sensitivity = grid.$getConfig().dnd_sensitivity;\n\n\tdnd.attachEvent(\"onBeforeDragStart\", gantt.bind(function (obj, e) {\n\t\tvar el = locate(e);\n\t\tif (!el) return false;\n\t\tif (gantt.hideQuickInfo) gantt._hideQuickInfo();\n\n\t\tvar id = el.getAttribute(grid.$config.item_attribute);\n\n\t\tvar datastore = getStore();\n\n\t\tvar task = datastore.getItem(id);\n\n\t\tif (gantt.isReadonly(task))\n\t\t\treturn false;\n\n\t\tdnd.config.initial_open_state = task.$open;\n\t\tif (!gantt.callEvent(\"onRowDragStart\", [id, e.target || e.srcElement, e])) {\n\t\t\treturn false;\n\t\t}\n\n\t}, gantt));\n\n\tdnd.attachEvent(\"onAfterDragStart\", gantt.bind(function (obj, e) {\n\t\tvar el = locate(e);\n\t\tdnd.config.marker.innerHTML = el.outerHTML;\n\t\tvar element = dnd.config.marker.firstChild;\n\t\tif(element){\n\t\t\telement.style.position = \"static\";\n\t\t}\n\n\t\tdnd.config.id = el.getAttribute(grid.$config.item_attribute);\n\n\t\tvar store = getStore();\n\n\t\tvar task = store.getItem(dnd.config.id);\n\t\tdnd.config.index = store.getBranchIndex(dnd.config.id);\n\t\tdnd.config.parent = task.parent;\n\t\ttask.$open = false;\n\t\ttask.$transparent = true;\n\t\tthis.refreshData();\n\t}, gantt));\n\n\tdnd.lastTaskOfLevel = function (level) {\n\t\tvar last_item = null;\n\t\tvar store = getStore();\n\t\tvar tasks = store.getItems();\n\t\tfor (var i = 0, len = tasks.length; i < len; i++) {\n\t\t\tif (tasks[i].$level == level) {\n\t\t\t\tlast_item = tasks[i];\n\t\t\t}\n\t\t}\n\t\treturn last_item ? last_item.id : null;\n\t};\n\tdnd._getGridPos = gantt.bind(function (e) {\n\t\tvar pos = domHelpers.getNodePosition(grid.$grid_data);\n\t\tvar store = getStore();\n\t\t// row offset\n\t\tvar x = pos.x;\n\t\tvar y = e.pos.y - 10;\n\n\t\tvar config = grid.$getConfig();\n\t\t// prevent moving row out of grid_data container\n\t\tif (y < pos.y) y = pos.y;\n\t\tvar gridHeight = store.countVisible() * config.row_height;\n\t\tif (y > pos.y + gridHeight - config.row_height) y = pos.y + gridHeight - config.row_height;\n\n\t\tpos.x = x;\n\t\tpos.y = y;\n\t\treturn pos;\n\t}, gantt);\n\tdnd._getTargetY = gantt.bind(function (e) {\n\t\tvar pos = domHelpers.getNodePosition(grid.$grid_data);\n\n\t\tvar y = e.pageY - pos.y + (grid.$state.scrollTop || 0);\n\t\tif (y < 0)\n\t\t\ty = 0;\n\t\treturn y;\n\t}, gantt);\n\tdnd._getTaskByY = gantt.bind(function (y, dropIndex) {\n\n\t\tvar config = grid.$getConfig(),\n\t\t\tstore = getStore();\n\n\t\ty = y || 0;\n\n\t\tvar index = Math.floor(y / config.row_height);\n\t\tindex = dropIndex < index ? index - 1 : index;\n\n\t\tif (index > store.countVisible() - 1)\n\t\t\treturn null;\n\n\t\treturn store.getIdByIndex(index);\n\t}, gantt);\n\tdnd.attachEvent(\"onDragMove\", gantt.bind(function (obj, e) {\n\t\tvar dd = dnd.config;\n\t\tvar pos = dnd._getGridPos(e);\n\n\t\tvar config = grid.$getConfig(),\n\t\t\tstore = getStore();\n\n\t\t// setting position of row\n\t\tdd.marker.style.left = pos.x + 10 + \"px\";\n\t\tdd.marker.style.top = pos.y + \"px\";\n\n\t\t// highlight row when mouseover\n\t\tvar item = store.getItem(dnd.config.id);\n\t\tvar targetY = dnd._getTargetY(e);\n\t\tvar el = dnd._getTaskByY(targetY, store.getIndexById(item.id));\n\n\t\tif (!store.exists(el)) {\n\t\t\tel = dnd.lastTaskOfLevel(config.order_branch_free ? item.$level : 0);\n\t\t\tif (el == dnd.config.id) {\n\t\t\t\tel = null;\n\t\t\t}\n\t\t}\n\n\t\tfunction allowedLevel(next, item) {\n\t\t\treturn (!(store.isChildOf(over.id, item.id)) && (next.$level == item.$level || config.order_branch_free));\n\t\t}\n\n\t\tif (store.exists(el)) {\n\t\t\tvar over = store.getItem(el);\n\n\t\t\tif (store.getIndexById(over.id) * config.row_height + config.row_height / 2 < targetY) {\n\t\t\t\t//hovering over bottom part of item, check can be drop to bottom\n\t\t\t\tvar index = store.getIndexById(over.id);\n\t\t\t\tvar nextId = store.getNext(over.id);//adds +1 when hovering over placeholder\n\t\t\t\tvar next = store.getItem(nextId);\n\t\t\t\tif (next) {\n\t\t\t\t\tif (next.id != item.id) {\n\t\t\t\t\t\tover = next; //there is a valid target\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (config.order_branch_free) {\n\t\t\t\t\t\t\tif (!(store.isChildOf(item.id, over.id) && store.getChildren(over.id).length == 1))\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tstore.move(item.id, store.getBranchIndex(over.id) + 1, store.getParent(over.id));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//we at end of the list, check and drop at the end of list\n\t\t\t\t\tnextId = store.getIdByIndex(index);\n\t\t\t\t\tnext = store.getItem(nextId);\n\n\t\t\t\t\tif (allowedLevel(next, item) && next.id != item.id) {\n\t\t\t\t\t\tstore.move(item.id, -1, store.getParent(next.id));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (config.order_branch_free) {\n\t\t\t\tif (over.id != item.id && allowedLevel(over, item)) {\n\t\t\t\t\tif (!store.hasChild(over.id)) {\n\t\t\t\t\t\tover.$open = true;\n\t\t\t\t\t\tstore.move(item.id, -1, over.id);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (store.getIndexById(over.id) || config.row_height / 3 < targetY) return;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//if item is on different level, check the one before it\n\t\t\tvar index = store.getIndexById(over.id),\n\t\t\t\tprevId = store.getIdByIndex(index - 1);\n\n\t\t\tvar prev = store.getItem(prevId);\n\n\t\t\tvar shift = 1;\n\t\t\twhile ((!prev || prev.id == over.id) && index - shift >= 0) {\n\n\t\t\t\tprevId = store.getIdByIndex(index - shift);\n\t\t\t\tprev = store.getItem(prevId);\n\t\t\t\tshift++;\n\t\t\t}\n\n\t\t\tif (item.id == over.id) return;\n\t\t\t//replacing item under cursor\n\t\t\tif (allowedLevel(over, item) && item.id != over.id) {\n\t\t\t\tstore.move(item.id, 0, 0, over.id);\n\n\t\t\t} else if (over.$level == item.$level - 1 && !store.getChildren(over.id).length) {\n\t\t\t\tstore.move(item.id, 0, over.id);\n\n\t\t\t} else if (prev && (allowedLevel(prev, item)) && (item.id != prev.id)) {\n\t\t\t\tstore.move(item.id, -1, store.getParent(prev.id));\n\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}, gantt));\n\n\tdnd.attachEvent(\"onDragEnd\", gantt.bind(function () {\n\t\tvar store = getStore();\n\t\tvar task = store.getItem(dnd.config.id);\n\t\ttask.$transparent = false;\n\t\ttask.$open = dnd.config.initial_open_state;\n\n\t\tif (this.callEvent(\"onBeforeRowDragEnd\", [dnd.config.id, dnd.config.parent, dnd.config.index]) === false) {\n\t\t\tstore.move(dnd.config.id, dnd.config.index, dnd.config.parent);\n\t\t\ttask.$drop_target = null;\n\t\t} else {\n\t\t\tthis.callEvent(\"onRowDragEnd\", [dnd.config.id, task.$drop_target]);\n\t\t}\n\t\t\n\t\tstore.refresh(task.id);\n\t\t//this.refreshData();\n\t}, gantt));\n}\n\nmodule.exports = {\n\tinit: _init_dnd\n};","var utils = require(\"../../../utils/utils\");\nvar rowDnd = require(\"./tasks_grid_dnd\");\nvar rowDndMarker = require(\"./tasks_grid_dnd_marker\");\n\nvar initializer = (function(){\n\treturn function(gantt){\n\t\treturn {\n\t\t\tonCreated: function (grid) {\n\t\t\t\tgrid.$config = utils.mixin(grid.$config, {\n\t\t\t\t\tbind: \"task\"\n\t\t\t\t});\n\t\t\t\tif(grid.$config.id == \"grid\") {\n\t\t\t\t\tthis.extendGantt(grid);\n\t\t\t\t\tgantt.ext.inlineEditors = gantt.ext._inlineEditors.createEditors(grid);\n\t\t\t\t\tgantt.ext.inlineEditors.init();\n\t\t\t\t}\n\n\t\t\t\tthis._mouseDelegates = require(\"../mouse_event_container\")(gantt);\n\t\t\t},\n\t\t\tonInitialized: function (grid) {\n\t\t\t\tvar config = grid.$getConfig();\n\t\t\t\tif (config.order_branch) {\n\t\t\t\t\tif(config.order_branch == \"marker\"){\n\t\t\t\t\t\trowDndMarker.init(grid.$gantt, grid);\n\t\t\t\t\t}else{\n\t\t\t\t\t\trowDnd.init(grid.$gantt, grid);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.initEvents(grid, gantt);\n\t\t\t\tif(grid.$config.id == \"grid\") {\n\t\t\t\t\tthis.extendDom(grid);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDestroyed: function (grid) {\n\t\t\t\tif(grid.$config.id == \"grid\") {\n\t\t\t\t\tgantt.ext.inlineEditors.destructor();\n\t\t\t\t}\n\t\t\t\tthis.clearEvents(grid, gantt);\n\t\t\t},\n\n\t\t\tinitEvents: function (grid, gantt) {\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_row\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar config = grid.$getConfig();\n\t\t\t\t\tif (id !== null) {\n\t\t\t\t\t\tvar task = this.getTask(id);\n\t\t\t\t\t\tif (config.scroll_on_click && !gantt._is_icon_open_click(e))\n\t\t\t\t\t\t\tthis.showDate(task.start_date);\n\t\t\t\t\t\tgantt.callEvent(\"onTaskRowClick\", [id, trg]);\n\t\t\t\t\t}\n\t\t\t\t}, gantt), grid.$grid);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_grid_head_cell\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar column = trg.getAttribute(\"data-column-id\");\n\n\t\t\t\t\tif (!gantt.callEvent(\"onGridHeaderClick\", [column, e]))\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tvar config = grid.$getConfig();\n\n\t\t\t\t\tif (column == \"add\") {\n\t\t\t\t\t\tvar mouseEvents = gantt.$services.getService(\"mouseEvents\");\n\t\t\t\t\t\tmouseEvents.callHandler(\"click\", \"gantt_add\", grid.$grid, [e, config.root_id]);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (config.sort) {\n\t\t\t\t\t\tvar sorting_method = column,\n\t\t\t\t\t\t\tconf;\n\n\t\t\t\t\t\tfor (var i = 0; i < config.columns.length; i++) {\n\t\t\t\t\t\t\tif (config.columns[i].name == column) {\n\t\t\t\t\t\t\t\tconf = config.columns[i];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (conf && conf.sort !== undefined && conf.sort !== true) {\n\t\t\t\t\t\t\tsorting_method = conf.sort;\n\n\t\t\t\t\t\t\tif (!sorting_method) { // column sort property 'false', no sorting\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar sort = (this._sort && this._sort.direction && this._sort.name == column) ? this._sort.direction : \"desc\";\n\t\t\t\t\t\t// invert sort direction\n\t\t\t\t\t\tsort = (sort == \"desc\") ? \"asc\" : \"desc\";\n\t\t\t\t\t\tthis._sort = {\n\t\t\t\t\t\t\tname: column,\n\t\t\t\t\t\t\tdirection: sort\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.sort(sorting_method, sort == \"desc\");\n\t\t\t\t\t}\n\t\t\t\t}, gantt), grid.$grid);\n\n\t\t\t\tthis._mouseDelegates.delegate(\"click\", \"gantt_add\", gantt.bind(function (e, id, trg) {\n\t\t\t\t\tvar config = grid.$getConfig();\n\t\t\t\t\tif (config.readonly) return;\n\n\t\t\t\t\tvar item = {};\n\t\t\t\t\tthis.createTask(item, id ? id : gantt.config.root_id);\n\n\t\t\t\t\treturn false;\n\t\t\t\t}, gantt), grid.$grid);\n\n\t\t\t},\n\n\t\t\tclearEvents: function(grid, gantt){\n\t\t\t\tthis._mouseDelegates.destructor();\n\t\t\t\tthis._mouseDelegates = null;\n\t\t\t},\n\n\t\t\textendDom: function(grid){\n\t\t\t\tgantt.$grid = grid.$grid;\n\t\t\t\tgantt.$grid_scale = grid.$grid_scale;\n\t\t\t\tgantt.$grid_data = grid.$grid_data;\n\t\t\t},\n\t\t\textendGantt: function(grid){\n\t\t\t\tgantt.getGridColumns = gantt.bind(grid.getGridColumns, grid);\n\n\t\t\t\tgrid.attachEvent(\"onColumnResizeStart\", function(){\n\t\t\t\t\treturn gantt.callEvent(\"onColumnResizeStart\", arguments);\n\t\t\t\t});\n\t\t\t\tgrid.attachEvent(\"onColumnResize\", function(){\n\t\t\t\t\treturn gantt.callEvent(\"onColumnResize\", arguments);\n\t\t\t\t});\n\t\t\t\tgrid.attachEvent(\"onColumnResizeEnd\", function(){\n\t\t\t\t\treturn gantt.callEvent(\"onColumnResizeEnd\", arguments);\n\t\t\t\t});\n\n\t\t\t\tgrid.attachEvent(\"onColumnResizeComplete\", function(columns, totalWidth){\n\t\t\t\t\tgantt.config.grid_width = totalWidth;\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t};\n})();\n\nmodule.exports = initializer;","var helpers = require(\"../../../utils/helpers\");\n\nfunction createGridLineRender(gantt){\n\tfunction _render_grid_item(item, view) {\n\t\t//if (!_is_grid_visible.call(this))\n\t\t//\treturn null;\n\n\t\tvar columns = view.getGridColumns();\n\t\tvar config = view.$getConfig(),\n\t\t\ttemplates = view.$getTemplates();\n\n\t\tvar store = view.$config.rowStore;\n\n\t\tif(config.rtl){\n\t\t\tcolumns = columns.reverse();\n\t\t}\n\n\t\tvar cells = [];\n\t\tvar has_child;\n\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\tvar last = i == columns.length - 1;\n\t\t\tvar col = columns[i];\n\t\t\tvar cell;\n\n\t\t\tvar value;\n\t\t\tvar textValue;\n\t\t\tif (col.name == \"add\") {\n\t\t\t\tvar aria = gantt._waiAria.gridAddButtonAttrString(col);\n\n\t\t\t\tvalue = \"<div \" + aria + \" class='gantt_add'></div>\";\n\t\t\t\ttextValue = \"\";\n\t\t\t} else {\n\t\t\t\tif (col.template)\n\t\t\t\t\tvalue = col.template(item);\n\t\t\t\telse\n\t\t\t\t\tvalue = item[col.name];\n\n\t\t\t\tif (helpers.isDate(value))\n\t\t\t\t\tvalue = templates.date_grid(value, item);\n\t\t\t\ttextValue = value;\n\t\t\t\tvalue = \"<div class='gantt_tree_content'>\" + value + \"</div>\";\n\t\t\t}\n\t\t\tvar css = \"gantt_cell\" + (last ? \" gantt_last_cell\" : \"\");\n\n\t\t\tvar tree = [];\n\t\t\tif (col.tree) {\n\t\t\t\tfor (var j = 0; j < item.$level; j++)\n\t\t\t\t\ttree.push(templates.grid_indent(item));\n\n\t\t\t\thas_child = store.hasChild(item.id) && !(gantt.isSplitTask(item));\n\t\t\t\tif (has_child) {\n\t\t\t\t\ttree.push(templates.grid_open(item));\n\t\t\t\t\ttree.push(templates.grid_folder(item));\n\t\t\t\t} else {\n\t\t\t\t\ttree.push(templates.grid_blank(item));\n\t\t\t\t\ttree.push(templates.grid_file(item));\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar style = \"width:\" + (col.width - (last ? 1 : 0)) + \"px;\";\n\t\t\tif (this.defined(col.align))\n\t\t\t\tstyle += \"text-align:\" + col.align + \";\";\n\n\t\t\tvar aria = gantt._waiAria.gridCellAttrString(col, textValue);\n\n\t\t\ttree.push(value);\n\t\t\tif(config.rtl){\n\t\t\t\ttree = tree.reverse();\n\t\t\t}\n\t\t\tcell = \"<div class='\" + css + \"' data-column-index='\"+i+\"' data-column-name='\"+col.name+\"' style='\" + style + \"' \" + aria + \">\" + tree.join(\"\") + \"</div>\";\n\t\t\tcells.push(cell);\n\t\t}\n\t\tvar css = gantt.getGlobalTaskIndex(item.id) % 2 === 0 ? \"\" : \" odd\";\n\t\tcss += (item.$transparent) ? \" gantt_transparent\" : \"\";\n\n\t\tcss += (item.$dataprocessor_class ? \" \" + item.$dataprocessor_class : \"\");\n\n\t\tif (templates.grid_row_class) {\n\t\t\tvar css_template = templates.grid_row_class.call(gantt, item.start_date, item.end_date, item);\n\t\t\tif (css_template)\n\t\t\t\tcss += \" \" + css_template;\n\t\t}\n\n\t\tif(store.getSelectedId() == item.id) {\n\t\t\tcss += \" gantt_selected\";\n\t\t}\n\n\t\tvar el = document.createElement(\"div\");\n\t\tel.className = \"gantt_row\" + css + \" gantt_row_\" + gantt.getTaskType(item.type);\n\t\tvar height = view.getItemHeight();\n\t\tel.style.height = height + \"px\";\n\t\tel.style.lineHeight = height + \"px\";\n\n\t\tif(config.smart_rendering){\n\t\t\tel.style.position = \"absolute\";\n\t\t\tel.style.left = \"0px\";\n\t\t\tel.style.top = view.getItemTop(item.id) + \"px\";\n\t\t}\n\n\t\tif(view.$config.item_attribute){\n\t\t\tel.setAttribute(view.$config.item_attribute, item.id);\n\t\t}\n\n\t\tgantt._waiAria.taskRowAttr(item, el);\n\n\t\tel.innerHTML = cells.join(\"\");\n\t\treturn el;\n\t}\n\n\treturn _render_grid_item;\n}\n\nmodule.exports = createGridLineRender;\n\n","\nfunction createLinkRender(gantt){\n\nfunction _render_link_element(link, view) {\n\tvar config = view.$getConfig();\n\n\tvar pt = path_builder.get_endpoint(link, view);\n\tvar dy = pt.e_y - pt.y;\n\tvar dx = pt.e_x - pt.x;\n\tif(!dx && !dy){\n\t\treturn null;\n\t}\n\n\n\tvar dots = path_builder.get_points(link, view);\n\tvar lines = drawer.get_lines(dots, view);\n\n\tvar div = document.createElement(\"div\");\n\n\tvar css = \"gantt_task_link\";\n\n\tif (link.color) {\n\t\tcss += \" gantt_link_inline_color\";\n\t}\n\tvar cssTemplate = gantt.templates.link_class ? gantt.templates.link_class(link) : \"\";\n\tif (cssTemplate) {\n\t\tcss += \" \" + cssTemplate;\n\t}\n\n\tif (config.highlight_critical_path && gantt.isCriticalLink) {\n\t\tif (gantt.isCriticalLink(link))\n\t\t\tcss += \" gantt_critical_link\";\n\t}\n\n\tdiv.className = css;\n\n\tif(view.$config.link_attribute){\n\t\tdiv.setAttribute(view.$config.link_attribute, link.id);\n\t}\n\n\tfor (var i = 0; i < lines.length; i++) {\n\t\tif (i == lines.length - 1) {\n\t\t\tlines[i].size -= config.link_arrow_size;\n\t\t}\n\t\tvar el = drawer.render_line(lines[i], lines[i + 1], view);\n\t\tif (link.color) {\n\t\t\tel.firstChild.style.backgroundColor = link.color;\n\t\t}\n\t\tdiv.appendChild(el);\n\t}\n\n\tvar direction = lines[lines.length - 1].direction;\n\tvar endpoint = _render_link_arrow(dots[dots.length - 1], direction, view);\n\tif (link.color) {\n\t\tendpoint.style.borderColor = link.color;\n\t}\n\tdiv.appendChild(endpoint);\n\n\tgantt._waiAria.linkAttr(link, div);\n\n\treturn div;\n}\n\nfunction _render_link_arrow(point, direction, view) {\n\tvar config = view.$getConfig();\n\tvar div = document.createElement(\"div\");\n\tvar top = point.y;\n\tvar left = point.x;\n\n\tvar size = config.link_arrow_size;\n\tvar line_width = config.row_height;\n\tvar className = \"gantt_link_arrow gantt_link_arrow_\" + direction;\n\tswitch (direction) {\n\t\tcase drawer.dirs.right:\n\t\t\ttop -= (size - line_width) / 2;\n\t\t\tleft -= size;\n\t\t\tbreak;\n\t\tcase drawer.dirs.left:\n\t\t\ttop -= (size - line_width) / 2;\n\t\t\tbreak;\n\t\tcase drawer.dirs.up:\n\t\t\tleft -= size;\n\t\t\tbreak;\n\t\tcase drawer.dirs.down:\n\t\t\ttop += size * 2;\n\t\t\tleft -= size;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\tdiv.style.cssText = [\n\t\t\"top:\" + top + \"px\",\n\t\t\"left:\" + left + 'px'].join(';');\n\tdiv.className = className;\n\n\treturn div;\n}\n\n\nvar drawer = {\n\tcurrent_pos: null,\n\tdirs: {\"left\": 'left', \"right\": 'right', \"up\": 'up', \"down\": 'down'},\n\tpath: [],\n\tclear: function () {\n\t\tthis.current_pos = null;\n\t\tthis.path = [];\n\t},\n\tpoint: function (pos) {\n\t\tthis.current_pos = gantt.copy(pos);\n\t},\n\tget_lines: function (dots) {\n\t\tthis.clear();\n\t\tthis.point(dots[0]);\n\t\tfor (var i = 1; i < dots.length; i++) {\n\t\t\tthis.line_to(dots[i]);\n\t\t}\n\t\treturn this.get_path();\n\t},\n\tline_to: function (pos) {\n\t\tvar next = gantt.copy(pos);\n\t\tvar prev = this.current_pos;\n\n\t\tvar line = this._get_line(prev, next);\n\t\tthis.path.push(line);\n\t\tthis.current_pos = next;\n\t},\n\tget_path: function () {\n\t\treturn this.path;\n\t},\n\tget_wrapper_sizes: function (v, view) {\n\t\tvar config = view.$getConfig();\n\t\tvar res,\n\t\t\twrapper_size = config.link_wrapper_width,\n\t\t\ty = v.y + (config.row_height - wrapper_size) / 2;\n\t\tswitch (v.direction) {\n\t\t\tcase this.dirs.left:\n\t\t\t\tres = {\n\t\t\t\t\ttop: y,\n\t\t\t\t\theight: wrapper_size,\n\t\t\t\t\tlineHeight: wrapper_size,\n\t\t\t\t\tleft: v.x - v.size - wrapper_size / 2,\n\t\t\t\t\twidth: v.size + wrapper_size\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase this.dirs.right:\n\t\t\t\tres = {\n\t\t\t\t\ttop: y,\n\t\t\t\t\tlineHeight: wrapper_size,\n\t\t\t\t\theight: wrapper_size,\n\t\t\t\t\tleft: v.x - wrapper_size / 2,\n\t\t\t\t\twidth: v.size + wrapper_size\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase this.dirs.up:\n\t\t\t\tres = {\n\t\t\t\t\ttop: y - v.size,\n\t\t\t\t\tlineHeight: v.size + wrapper_size,\n\t\t\t\t\theight: v.size + wrapper_size,\n\t\t\t\t\tleft: v.x - wrapper_size / 2,\n\t\t\t\t\twidth: wrapper_size\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase this.dirs.down:\n\t\t\t\tres = {\n\t\t\t\t\ttop: y /*- wrapper_size/2*/,\n\t\t\t\t\tlineHeight: v.size + wrapper_size,\n\t\t\t\t\theight: v.size + wrapper_size,\n\t\t\t\t\tleft: v.x - wrapper_size / 2,\n\t\t\t\t\twidth: wrapper_size\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn res;\n\t},\n\tget_line_sizes: function (v, view) {\n\t\tvar config = view.$getConfig();\n\t\tvar res,\n\t\t\tline_size = config.link_line_width,\n\t\t\twrapper_size = config.link_wrapper_width,\n\t\t\tsize = v.size + line_size;\n\t\tswitch (v.direction) {\n\t\t\tcase this.dirs.left:\n\t\t\tcase this.dirs.right:\n\t\t\t\tres = {\n\t\t\t\t\theight: line_size,\n\t\t\t\t\twidth: size,\n\t\t\t\t\tmarginTop: (wrapper_size - line_size) / 2,\n\t\t\t\t\tmarginLeft: (wrapper_size - line_size) / 2\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase this.dirs.up:\n\t\t\tcase this.dirs.down:\n\t\t\t\tres = {\n\t\t\t\t\theight: size,\n\t\t\t\t\twidth: line_size,\n\t\t\t\t\tmarginTop: (wrapper_size - line_size) / 2,\n\t\t\t\t\tmarginLeft: (wrapper_size - line_size) / 2\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\n\t\treturn res;\n\t},\n\trender_line: function (v, end, view) {\n\t\tvar pos = this.get_wrapper_sizes(v, view);\n\t\tvar wrapper = document.createElement(\"div\");\n\t\twrapper.style.cssText = [\n\t\t\t\"top:\" + pos.top + \"px\",\n\t\t\t\"left:\" + pos.left + \"px\",\n\t\t\t\"height:\" + pos.height + \"px\",\n\t\t\t\"width:\" + pos.width + \"px\"\n\t\t].join(';');\n\t\twrapper.className = \"gantt_line_wrapper\";\n\n\t\tvar innerPos = this.get_line_sizes(v, view);\n\t\tvar inner = document.createElement(\"div\");\n\t\tinner.style.cssText = [\n\t\t\t\"height:\" + innerPos.height + \"px\",\n\t\t\t\"width:\" + innerPos.width + \"px\",\n\t\t\t\"margin-top:\" + innerPos.marginTop + \"px\",\n\t\t\t\"margin-left:\" + innerPos.marginLeft + \"px\"\n\t\t].join(\";\");\n\n\t\tinner.className = \"gantt_link_line_\" + v.direction;\n\t\twrapper.appendChild(inner);\n\n\t\treturn wrapper;\n\t},\n\t_get_line: function (from, to) {\n\t\tvar direction = this.get_direction(from, to);\n\t\tvar vect = {\n\t\t\tx: from.x,\n\t\t\ty: from.y,\n\t\t\tdirection: this.get_direction(from, to)\n\t\t};\n\t\tif (direction == this.dirs.left || direction == this.dirs.right) {\n\t\t\tvect.size = Math.abs(from.x - to.x);\n\t\t} else {\n\t\t\tvect.size = Math.abs(from.y - to.y);\n\t\t}\n\t\treturn vect;\n\t},\n\tget_direction: function (from, to) {\n\t\tvar direction = 0;\n\t\tif (to.x < from.x) {\n\t\t\tdirection = this.dirs.left;\n\t\t} else if (to.x > from.x) {\n\t\t\tdirection = this.dirs.right;\n\t\t} else if (to.y > from.y) {\n\t\t\tdirection = this.dirs.down;\n\t\t} else {\n\t\t\tdirection = this.dirs.up;\n\t\t}\n\t\treturn direction;\n\t}\n\n};\n\nvar path_builder = {\n\n\tpath: [],\n\tclear: function () {\n\t\tthis.path = [];\n\t},\n\tcurrent: function () {\n\t\treturn this.path[this.path.length - 1];\n\t},\n\tpoint: function (next) {\n\t\tif (!next)\n\t\t\treturn this.current();\n\n\t\tthis.path.push(gantt.copy(next));\n\t\treturn next;\n\t},\n\tpoint_to: function (direction, diff, point) {\n\t\tif (!point)\n\t\t\tpoint = gantt.copy(this.point());\n\t\telse\n\t\t\tpoint = {x: point.x, y: point.y};\n\t\tvar dir = drawer.dirs;\n\t\tswitch (direction) {\n\t\t\tcase (dir.left):\n\t\t\t\tpoint.x -= diff;\n\t\t\t\tbreak;\n\t\t\tcase (dir.right):\n\t\t\t\tpoint.x += diff;\n\t\t\t\tbreak;\n\t\t\tcase (dir.up):\n\t\t\t\tpoint.y -= diff;\n\t\t\t\tbreak;\n\t\t\tcase (dir.down):\n\t\t\t\tpoint.y += diff;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn this.point(point);\n\t},\n\tget_points: function (link, view) {\n\t\tvar pt = this.get_endpoint(link, view);\n\t\tvar xy = gantt.config;\n\n\t\tvar dy = pt.e_y - pt.y;\n\t\tvar dx = pt.e_x - pt.x;\n\n\t\tvar dir = drawer.dirs;\n\n\t\tthis.clear();\n\t\tthis.point({x: pt.x, y: pt.y});\n\n\t\tvar shiftX = 2 * xy.link_arrow_size;//just random size for first line\n\t\tvar lineType = this.get_line_type(link, view.$getConfig());\n\n\t\tvar forward = (pt.e_x > pt.x);\n\t\tif (lineType.from_start && lineType.to_start) {\n\t\t\tthis.point_to(dir.left, shiftX);\n\t\t\tif (forward) {\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t} else {\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t}\n\t\t\tthis.point_to(dir.right, shiftX);\n\n\t\t} else if (!lineType.from_start && lineType.to_start) {\n\t\t\tforward = (pt.e_x > (pt.x + 2 * shiftX));\n\t\t\tthis.point_to(dir.right, shiftX);\n\t\t\tif (forward) {\n\t\t\t\tdx -= shiftX;\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t} else {\n\t\t\t\tdx -= 2 * shiftX;\n\t\t\t\tvar sign = dy > 0 ? 1 : -1;\n\n\t\t\t\tthis.point_to(dir.down, sign * (xy.row_height / 2));\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t\tthis.point_to(dir.down, sign * ( Math.abs(dy) - (xy.row_height / 2)));\n\t\t\t\tthis.point_to(dir.right, shiftX);\n\t\t\t}\n\n\t\t} else if (!lineType.from_start && !lineType.to_start) {\n\t\t\tthis.point_to(dir.right, shiftX);\n\t\t\tif (forward) {\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t} else {\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t}\n\t\t\tthis.point_to(dir.left, shiftX);\n\t\t} else if (lineType.from_start && !lineType.to_start) {\n\n\t\t\tforward = (pt.e_x > (pt.x - 2 * shiftX));\n\t\t\tthis.point_to(dir.left, shiftX);\n\n\t\t\tif (!forward) {\n\t\t\t\tdx += shiftX;\n\t\t\t\tthis.point_to(dir.down, dy);\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t} else {\n\t\t\t\tdx += 2 * shiftX;\n\t\t\t\tvar sign = dy > 0 ? 1 : -1;\n\t\t\t\tthis.point_to(dir.down, sign * (xy.row_height / 2));\n\t\t\t\tthis.point_to(dir.right, dx);\n\t\t\t\tthis.point_to(dir.down, sign * ( Math.abs(dy) - (xy.row_height / 2)));\n\t\t\t\tthis.point_to(dir.left, shiftX);\n\t\t\t}\n\n\t\t}\n\n\t\treturn this.path;\n\t},\n\tget_line_type: function(link, config){\n\t\tvar types = config.links;\n\t\tvar from_start = false, to_start = false;\n\t\tif (link.type == types.start_to_start) {\n\t\t\tfrom_start = to_start = true;\n\t\t} else if (link.type == types.finish_to_finish) {\n\t\t\tfrom_start = to_start = false;\n\t\t} else if (link.type == types.finish_to_start) {\n\t\t\tfrom_start = false;\n\t\t\tto_start = true;\n\t\t} else if (link.type == types.start_to_finish) {\n\t\t\tfrom_start = true;\n\t\t\tto_start = false;\n\t\t} else {\n\t\t\tgantt.assert(false, \"Invalid link type\");\n\t\t}\n\n\t\tif(config.rtl){\n\t\t\tfrom_start = !from_start;\n\t\t\tto_start = !to_start;\n\t\t}\n\n\t\treturn {from_start: from_start, to_start: to_start};\n\t},\n\n\tget_endpoint: function (link, view) {\n\t\tvar config = view.$getConfig();\n\n\t\tvar lineType = this.get_line_type(link, config);\n\t\tvar from_start = lineType.from_start,\n\t\t\tto_start = lineType.to_start;\n\n\t\tvar source = gantt.getTask(link.source);\n\t\tvar target = gantt.getTask(link.target);\n\n\t\tvar from = getMilestonePosition(source, view),\n\t\t\tto = getMilestonePosition(target, view);\n\n\t\treturn {\n\t\t\tx: from_start ? from.left : (from.left + from.width),\n\t\t\te_x: to_start ? to.left : (to.left + to.width),\n\t\t\ty: from.top,\n\t\t\te_y: to.top\n\t\t};\n\t}\n};\n\nfunction getMilestonePosition(task, view){\n\tvar config = view.$getConfig();\n\tvar pos = view.getItemPosition(task);\n\tif(gantt.getTaskType(task.type) == config.types.milestone){\n\t\tvar milestoneHeight = gantt.getTaskHeight();\n\t\tvar milestoneWidth = Math.sqrt(2*milestoneHeight*milestoneHeight);\n\t\tpos.left -= milestoneWidth / 2;\n\t\tpos.width = milestoneWidth;\n\t}\n\treturn pos;\n}\n\nreturn _render_link_element;\n\n}\n\nmodule.exports = createLinkRender;","function createTaskBgRender(gantt){\n\t//this.getTaskTop\n\tfunction _render_bg_line(item, view) {\n\t\tvar config = view.$getConfig(),\n\t\t\ttemplates = view.$getTemplates();\n\t\tvar cfg = view.getScale();\n\t\tvar count = cfg.count;\n\t\tvar row = document.createElement(\"div\");\n\t\tif (config.show_task_cells) {\n\t\t\tfor (var j = 0; j < count; j++) {\n\t\t\t\tvar width = cfg.width[j],\n\t\t\t\t\tcssclass = \"\";\n\n\t\t\t\tif (width > 0) {//do not render skipped columns\n\t\t\t\t\tvar cell = document.createElement(\"div\");\n\t\t\t\t\tcell.style.width = (width) + \"px\";\n\n\t\t\t\t\tcssclass = \"gantt_task_cell\" + (j == count - 1 ? \" gantt_last_cell\" : \"\");\n\t\t\t\t\tcssTemplate = templates.task_cell_class(item, cfg.trace_x[j]);\n\t\t\t\t\tif (cssTemplate)\n\t\t\t\t\t\tcssclass += \" \" + cssTemplate;\n\t\t\t\t\tcell.className = cssclass;\n\n\t\t\t\t\trow.appendChild(cell);\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\tvar odd = gantt.getGlobalTaskIndex(item.id) % 2 !== 0;\n\t\tvar cssTemplate = templates.task_row_class(item.start_date, item.end_date, item);\n\t\tvar css = \"gantt_task_row\" + (odd ? \" odd\" : \"\") + (cssTemplate ? ' ' + cssTemplate : '');\n\n\t\tvar store = view.$config.rowStore;\n\t\tif(store.getSelectedId() == item.id) {\n\t\t\tcss += \" gantt_selected\";\n\t\t}\n\n\t\t//var row = \"<div class='\" + css + \"' \" + this.config.task_attribute + \"='\" + item.id + \"'>\" + cells.join(\"\") + \"</div>\";\n\n\t\trow.className = css;\n\n\t\tif (config.smart_rendering) {\n\t\t\trow.style.position = \"absolute\";\n\t\t\trow.style.top = view.getItemTop(item.id) + \"px\";\n\t\t\trow.style.width = \"100%\";\n\t\t}\n\t\trow.style.height = (config.row_height) + \"px\";\n\n\t\tif(view.$config.item_attribute){\n\t\t\trow.setAttribute(view.$config.item_attribute, item.id);\n\t\t}\n\n\t\treturn row;\n\t}\n\n\treturn _render_bg_line;\n}\n\nmodule.exports = createTaskBgRender;","function createTaskRenderer(gantt){\n\tvar defaultRender = require(\"./task_bar_render\")(gantt);\n\n\treturn function show_children(task, timeline) {\n\t\tif (gantt.isSplitTask(task)) {\n\t\t\tvar el = document.createElement('div'),\n\t\t\t\tsizes = gantt.getTaskPosition(task);\n\n\t\t\tvar sub_tasks = gantt.getChildren(task.id);\n\n\n\t\t\tfor (var i = 0; i < sub_tasks.length; i++) {\n\t\t\t\tvar child = gantt.getTask(sub_tasks[i]);\n\n\t\t\t\tvar element = defaultRender(child, timeline);\n\t\t\t\tif(!element)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tvar padding = Math.floor((gantt.config.row_height - sizes.height) / 2);\n\n\t\t\t\telement.style.top = (sizes.top + padding) + \"px\";\n\t\t\t\telement.className += \" gantt_split_child\";\n\n\t\t\t\tel.appendChild(element);\n\t\t\t}\n\t\t\treturn el;\n\t\t}\n\t\treturn false;\n\t};\n}\n\nmodule.exports = createTaskRenderer;","module.exports = function (gantt) {\n\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tfunction PredecessorEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\t\treturn self;\n\t}\n\n\t__extends(PredecessorEditor, BaseEditor);\n\n\tfunction parseInputString(value, config) {\n\t\tvar predecessors = (value || \"\").split(config.delimiter || \",\");\n\t\tfor (var i = 0; i < predecessors.length; i++) {\n\t\t\tvar val = predecessors[i].trim();\n\t\t\tif (val) {\n\t\t\t\tpredecessors[i] = val;\n\t\t\t} else {\n\t\t\t\tpredecessors.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\tpredecessors.sort();\n\t\treturn predecessors;\n\t}\n\n\tfunction formatPredecessors(task, config, gantt) {\n\t\tvar links = task.$target;\n\t\tvar labels = [];\n\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\tvar link = gantt.getLink(links[i]);\n\t\t\tvar pred = gantt.getTask(link.source);\n\t\t\tlabels.push(gantt.getWBSCode(pred));\n\t\t}\n\t\treturn labels.join((config.delimiter || \",\") + \" \");\n\t}\n\n\tfunction getSelectedLinks(taskId, predecessorCodes) {\n\t\tvar links = [];\n\t\tpredecessorCodes.forEach(function (code) {\n\t\t\tvar predecessor = gantt.getTaskByWBSCode(code);\n\t\t\tif (predecessor) {\n\t\t\t\tvar link = {\n\t\t\t\t\tsource: predecessor.id,\n\t\t\t\t\ttarget: taskId,\n\t\t\t\t\ttype: gantt.config.links.finish_to_start,\n\t\t\t\t\tlag: 0\n\t\t\t\t};\n\t\t\t\tif (gantt.isLinkAllowed(link)) {\n\t\t\t\t\tlinks.push(link);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn links;\n\t}\n\n\tfunction getLinksDiff(task, predecessorCodes) {\n\t\tvar selectedLinks = getSelectedLinks(task.id, predecessorCodes);\n\t\tvar existingLinksSearch = {};\n\t\ttask.$target.forEach(function (linkId) {\n\t\t\tvar link = gantt.getLink(linkId);\n\t\t\texistingLinksSearch[link.source + \"_\" + link.target] = link.id;\n\t\t});\n\n\t\tvar linksToAdd = [];\n\t\tselectedLinks.forEach(function (link) {\n\t\t\tvar linkKey = link.source + \"_\" + link.target;\n\t\t\tif (!existingLinksSearch[linkKey]) {\n\t\t\t\tlinksToAdd.push(link);\n\t\t\t} else {\n\t\t\t\tdelete existingLinksSearch[linkKey];\n\t\t\t}\n\t\t});\n\n\t\tvar linksToDelete = [];\n\t\tfor (var i in existingLinksSearch) {\n\t\t\tlinksToDelete.push(existingLinksSearch[i]);\n\t\t}\n\n\t\treturn {\n\t\t\tadd: linksToAdd,\n\t\t\tremove: linksToDelete\n\t\t};\n\t}\n\n\tutils.mixin(PredecessorEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t\tvar html = \"<div><input type='text' name='\" + column.name + \"'></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t},\n\t\thide: function () {\n\t\t},\n\t\tset_value: function (value, id, column, node) {\n\t\t\tthis.get_input(node).value = formatPredecessors(value, column.editor, gantt);\n\t\t},\n\t\tget_value: function (id, column, node) {\n\t\t\treturn parseInputString((this.get_input(node).value || \"\"), column.editor);\n\t\t},\n\t\tsave: function (id, column, node) {\n\t\t\tvar task = gantt.getTask(id);\n\n\t\t\tvar linksDiff = getLinksDiff(task, this.get_value(id, column, node));\n\n\t\t\tif (linksDiff.add.length || linksDiff.remove.length) {\n\t\t\t\tgantt.batchUpdate(function () {\n\t\t\t\t\tlinksDiff.add.forEach(function (link) {\n\t\t\t\t\t\tgantt.addLink(link);\n\t\t\t\t\t});\n\t\t\t\t\tlinksDiff.remove.forEach(function (linkId) {\n\t\t\t\t\t\tgantt.deleteLink(linkId);\n\t\t\t\t\t});\n\n\t\t\t\t\tif (gantt.autoSchedule)\n\t\t\t\t\t\tgantt.autoSchedule();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tis_changed: function (value, id, column, node) {\n\t\t\tvar inputPredecessors = this.get_value(id, column, node);\n\t\t\tvar taskPredecessors = parseInputString(formatPredecessors(value, column.editor, gantt), column.editor);\n\n\t\t\treturn inputPredecessors.join() !== taskPredecessors.join();\n\t\t}\n\t}, true);\n\n\treturn PredecessorEditor;\n};","module.exports = function(gantt) {\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tvar html5DateFormat = \"%Y-%m-%d\";\n\n\tvar dateToStr = null;\n\tvar strToDate = null;\n\n\tfunction init(){\n\t\tif(!dateToStr){\n\t\t\tdateToStr = gantt.date.date_to_str(html5DateFormat);\n\t\t}\n\t\tif(!strToDate){\n\t\t\tstrToDate = gantt.date.str_to_date(html5DateFormat);\n\t\t}\n\t}\n\n\tfunction DateEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\n\t\treturn self;\n\t}\n\n\t__extends(DateEditor, BaseEditor);\n\n\tutils.mixin(DateEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\n\t\t\tinit();\n\t\t\tvar minValue = dateToStr(config.min || gantt.getState().min_date);\n\t\t\tvar maxValue = dateToStr(config.max || gantt.getState().max_date);\n\n\t\t\tvar html = \"<div style='width:140px'><input type='date' min='\" + minValue + \"' max='\" + maxValue + \"' name='\" + column.name + \"'></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t},\n\t\tset_value: function (value, id, column, node) {\n\t\t\tthis.get_input(node).value = dateToStr(value);\n\t\t},\n\t\tis_valid: function (value, id, column, node) {\n\t\t\tif (!value || isNaN(value.getTime()))\n\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t},\n\t\tget_value: function (id, column, node) {\n\t\t\tvar parsed;\n\t\t\ttry {\n\t\t\t\tparsed = strToDate(this.get_input(node).value || \"\");\n\t\t\t} catch (e) {\n\t\t\t\tparsed = null;// return null will cancel changes\n\t\t\t}\n\n\t\t\treturn parsed;\n\t\t}\n\t}, true);\n\n\treturn DateEditor;\n};\n","module.exports = function(gantt) {\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tfunction SelectEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\t\treturn self;\n\t}\n\n\t__extends(SelectEditor, BaseEditor);\n\n\tutils.mixin(SelectEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t\tvar html = \"<div><select name='\" + column.name + \"'>\";\n\t\t\tvar optionsHtml = [],\n\t\t\t\toptions = config.options || [];\n\n\t\t\tfor (var i = 0; i < options.length; i++) {\n\t\t\t\toptionsHtml.push(\"<option value='\" + config.options[i].key + \"'>\" + options[i].label + \"</option>\");\n\t\t\t}\n\n\t\t\thtml += optionsHtml.join(\"\") + \"</select></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t},\n\t\tget_input: function (node) {\n\t\t\treturn node.querySelector(\"select\");\n\t\t}\n\t}, true);\n\n\treturn SelectEditor;\n};","module.exports = function (gantt) {\n\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tfunction NumberEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\t\treturn self;\n\t}\n\n\t__extends(NumberEditor, BaseEditor);\n\n\tutils.mixin(NumberEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t\tvar min = config.min || 0,\n\t\t\t\tmax = config.max || 100;\n\n\t\t\tvar html = \"<div><input type='number' min='\" + min + \"' max='\" + max + \"' name='\" + column.name + \"'></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t},\n\t\tget_value: function (id, column, node) {\n\t\t\treturn this.get_input(node).value || \"\";\n\t\t},\n\t\tis_valid: function (value, id, column, node) {\n\t\t\treturn !isNaN(parseInt(value, 10));\n\t\t}\n\t}, true);\n\n\treturn NumberEditor;\n};","module.exports = function(gantt) {\n\n\tvar BaseEditor = require(\"./base\")(gantt),\n\t\tutils = require(\"../../../../../utils/utils\");\n\tvar __extends = require(\"../../../../../utils/extends\");\n\n\tfunction TextEditor() {\n\t\tvar self = BaseEditor.apply(this, arguments) || this;\n\t\treturn self;\n\t}\n\n\t__extends(TextEditor, BaseEditor);\n\n\tutils.mixin(TextEditor.prototype, {\n\t\tshow: function (id, column, config, placeholder) {\n\t\t\tvar html = \"<div><input type='text' name='\" + column.name + \"'></div>\";\n\t\t\tplaceholder.innerHTML = html;\n\t\t}\n\t}, true);\n\n\treturn TextEditor;\n};","module.exports = {\n\tinit: function(controller, grid){\n\t\tvar self = controller;\n\t\tvar gantt = grid.$gantt;\n\n\t\tvar onBlurDelay = null;\n\t\tvar keyNav = gantt.ext.keyboardNavigation;\n\t\tkeyNav.attachEvent(\"onBeforeFocus\", function (node) {\n\t\t\tvar activeCell = controller.locateCell(node);\n\t\t\tclearTimeout(onBlurDelay);\n\t\t\tif (activeCell) {\n\t\t\t\tvar columnName = activeCell.columnName;\n\t\t\t\tvar id = activeCell.id;\n\n\t\t\t\tvar editorState = self.getState();\n\t\t\t\tif(self.isVisible()){\n\t\t\t\t\tif(editorState.id == id && editorState.columnName === columnName) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tkeyNav.attachEvent(\"onFocus\", function (node) {\n\t\t\tvar activeCell = controller.locateCell(node);\n\t\t\tvar state = controller.getState();\n\t\t\tclearTimeout(onBlurDelay);\n\t\t\tif (activeCell && !(activeCell.id == state.id && activeCell.columnName == state.columnName)) {\n\t\t\t\tif(self.isVisible()){\n\t\t\t\t\tself.save();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tcontroller.attachEvent(\"onHide\", function(){\n\t\t\tclearTimeout(onBlurDelay);\n\t\t});\n\n\t\tkeyNav.attachEvent(\"onBlur\", function () {\n\t\t\tonBlurDelay = setTimeout(function(){\n\t\t\t\tself.save();\n\t\t\t});\n\n\t\t\treturn true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onTaskDblClick\", function(id,e){\n\t\t\t// block lightbox on double click inside editor\n\t\t\tvar state = controller.getState();\n\t\t\tvar cell = controller.locateCell(e.target);\n\t\t\tif(cell && controller.isVisible() && cell.columnName == state.columnName){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onTaskClick\", function (id, e) {\n\t\t\tif(gantt._is_icon_open_click(e))\n\t\t\t\treturn true;\n\n\t\t\tvar state = controller.getState();\n\t\t\tvar cell = controller.locateCell(e.target);\n\n\t\t\tif (cell && controller.getEditorConfig(cell.columnName)) {\n\t\t\t\tif(controller.isVisible() && state.id == cell.id && state.columnName == cell.columnName){\n\t\t\t\t\t// do nothing if editor is already active in this cell\n\t\t\t\t}else{\n\t\t\t\t\tcontroller.startEdit(cell.id, cell.columnName);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\tgantt.attachEvent(\"onEmptyClick\", function () {\n\t\t\tself.save();\n\t\t\treturn true;\n\t\t});\n\n\t\tkeyNav.attachEvent(\"onKeyDown\", function(command, e){\n\t\t\tvar activeCell = controller.locateCell(e.target);\n\t\t\tvar hasEditor = activeCell ? controller.getEditorConfig(activeCell.columnName) : false;\n\n\t\t\tvar state = controller.getState();\n\t\t\tvar keyboard = gantt.constants.KEY_CODES;\n\t\t\tvar keyCode = e.keyCode;\n\t\t\tvar preventKeyNav = false;\n\n\t\t\tswitch (keyCode){\n\t\t\t\tcase keyboard.ENTER:\n\t\t\t\t\tif(controller.isVisible()){\n\t\t\t\t\t\tcontroller.save();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}else if(hasEditor && !(e.ctrlKey || e.metaKey || e.shiftKey)){\n\t\t\t\t\t\tself.startEdit(activeCell.id, activeCell.columnName);\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.ESC:\n\t\t\t\t\tif(controller.isVisible()){\n\t\t\t\t\t\tcontroller.hide();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.UP:\n\t\t\t\tcase keyboard.DOWN:\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.LEFT:\n\t\t\t\tcase keyboard.RIGHT:\n\t\t\t\t\tif(state.editorType === \"date\"){\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.SPACE:\n\t\t\t\t\tif(controller.isVisible()){\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(hasEditor && !controller.isVisible()){\n\t\t\t\t\t\tself.startEdit(activeCell.id, activeCell.columnName);\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.DELETE:\n\t\t\t\t\tif(hasEditor && !controller.isVisible()){\n\t\t\t\t\t\tself.startEdit(activeCell.id, activeCell.columnName);\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.TAB:\n\t\t\t\t\tif(controller.isVisible()){\n\n\t\t\t\t\t\tif(e.shiftKey){\n\t\t\t\t\t\t\tcontroller.editPrevCell(true);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tcontroller.editNextCell(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar newState = controller.getState();\n\t\t\t\t\t\tif(newState.id){\n\t\t\t\t\t\t\tkeyNav.focus({type:\"taskCell\", id: newState.id, column:newState.columnName});\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(controller.isVisible())\n\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\telse{\n\n\t\t\t\t\t\t// start editing on character key\n\t\t\t\t\t\tif((keyCode >= 48 && keyCode <= 57) || // [0-9]\n\t\t\t\t\t\t\t(keyCode > 95 && keyCode < 112) || // numpad\n\t\t\t\t\t\t\t(keyCode >= 64 && keyCode <= 91) || // [a-z]\n\t\t\t\t\t\t\t(keyCode > 185 && keyCode < 193) || //;=-,etc\n\t\t\t\t\t\t\t(keyCode > 218  && keyCode < 223)\n\t\t\t\t\t\t){\n\t\t\t\t\t\t\tvar modifiers = command.modifiers;\n\n\t\t\t\t\t\t\tvar anyModifier = modifiers.alt || modifiers.ctrl || modifiers.meta || modifiers.shift;\n\t\t\t\t\t\t\tif(modifiers.alt){\n\t\t\t\t\t\t\t\t// don't start editing on alt+key\n\t\t\t\t\t\t\t}else if (anyModifier && keyNav.getCommandHandler(command, \"taskCell\")){\n\t\t\t\t\t\t\t\t// don't start editing if command already have a keyboard shortcut\n\t\t\t\t\t\t\t}else if(hasEditor && !controller.isVisible()){\n\t\t\t\t\t\t\t\tself.startEdit(activeCell.id, activeCell.columnName);\n\t\t\t\t\t\t\t\tpreventKeyNav = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (preventKeyNav){\n\t\t\t\treturn false;\n\t\t\t} else{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t});\n\t},\n\tonShow: function(controller, placeholder, grid){},\n\tonHide: function(controller, placeholder, grid){\n\t\tvar gantt = grid.$gantt;\n\t\tgantt.focus();\n\n\t},\n\tdestroy: function(){}\n};\n\n","module.exports = {\n\tinit: function(controller, grid){\n\t\tvar gantt = grid.$gantt;\n\n\t\tgantt.attachEvent(\"onTaskClick\", function (id, e) {\n\t\t\tif(gantt._is_icon_open_click(e))\n\t\t\t\treturn true;\n\t\t\tvar state = controller.getState();\n\t\t\tvar cell = controller.locateCell(e.target);\n\n\t\t\tif (cell && controller.getEditorConfig(cell.columnName)) {\n\t\t\t\tif(controller.isVisible() && state.id == cell.id && state.columnName == cell.columnName){\n\t\t\t\t\t// do nothing if editor is already active in this cell\n\t\t\t\t}else{\n\t\t\t\t\tcontroller.startEdit(cell.id, cell.columnName);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\tgantt.attachEvent(\"onEmptyClick\", function () {\n\t\t\tcontroller.hide();\n\t\t\treturn true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onTaskDblClick\", function(id,e){\n\t\t\tvar state = controller.getState();\n\t\t\tvar cell = controller.locateCell(e.target);\n\t\t\tif(cell && controller.isVisible() && cell.columnName == state.columnName){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t},\n\n\tonShow: function(controller, placeholder, grid){\n\t\tif(grid.$getConfig().keyboard_navigation){\n\t\t\t// keyboard navigation extension will handle arrows if enabled\n\t\t\treturn;\n\t\t}\n\t\tvar gantt = grid.$gantt;\n\t\tplaceholder.onkeydown = function (e) {\n\t\t\te = e || window.event;\n\n\t\t\tvar keyboard = gantt.constants.KEY_CODES;\n\t\t\tif(e.defaultPrevented || (e.shiftKey && e.keyCode != keyboard.TAB)){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar shouldPrevent = true;\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase gantt.keys.edit_save:\n\t\t\t\t\tcontroller.save();\n\t\t\t\t\tbreak;\n\t\t\t\tcase gantt.keys.edit_cancel:\n\t\t\t\t\tcontroller.hide();\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyboard.TAB:\n\t\t\t\t\tif(e.shiftKey){\n\t\t\t\t\t\tcontroller.editPrevCell(true);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcontroller.editNextCell(true);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tshouldPrevent = false;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif(shouldPrevent){\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t};\n\t},\n\tonHide: function(){\n\n\t},\n\n\tdestroy: function(){\n\n\t}\n};\n\n","var defaultMapping = require(\"./keyboard_mappings/default\");\nvar keyNavMappings = require(\"./keyboard_mappings/keyboard_navigation\");\n\nmodule.exports = function(gantt){\n\n\tvar mapping = null;\n\n\treturn {\n\t\tsetMapping: function(map){\n\t\t\tmapping = map;\n\t\t},\n\t\tgetMapping: function(){\n\n\t\t\tif(mapping){\n\t\t\t\treturn mapping;\n\t\t\t}else if(gantt.config.keyboard_navigation_cells){\n\t\t\t\treturn keyNavMappings;\n\t\t\t}else{\n\t\t\t\treturn defaultMapping;\n\t\t\t}\n\t\t}\n\t};\n};\n","var getKeyboardMapping = require(\"./keyboard_mappings\");\nvar textEditorFactory = require(\"./editors/text\"),\n\tnumberEditorFactory = require(\"./editors/number\"),\n\tselectEditorFactory = require(\"./editors/select\"),\n\tdateEditorFactory = require(\"./editors/date\"),\n\tpredecessorEditorFactory = require(\"./editors/predecessor\");\nvar utils = require(\"../../../../utils/utils\");\nvar domHelpers = require(\"../../../../utils/dom_helpers\");\nvar eventable = require(\"../../../../utils/eventable\");\n\nfunction initConfigs(gantt){\n\tgantt.config.editor_types = {\n\t\ttext: new (textEditorFactory(gantt))(),\n\t\tnumber: new (numberEditorFactory(gantt))(),\n\t\tselect: new (selectEditorFactory(gantt))(),\n\t\tdate: new (dateEditorFactory(gantt))(),\n\t\tpredecessor: new (predecessorEditorFactory(gantt))()\n\t};\n}\n\nfunction create(gantt){\n\tvar keyboardMapping = getKeyboardMapping(gantt);\n\n\tvar eventBus = {};\n\teventable(eventBus);\n\n\tfunction createGridEditors(grid) {\n\n\t\tfunction _getGridCellFromNode(node){\n\t\t\tif(!domHelpers.isChildOf(node, grid.$grid)){\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar row = domHelpers.locateAttribute(node, grid.$config.item_attribute);\n\t\t\tvar cell = domHelpers.locateAttribute(node, \"data-column-name\");\n\t\t\tif(cell){\n\t\t\t\tvar columnName = cell.getAttribute(\"data-column-name\");\n\t\t\t\tvar id = row.getAttribute(grid.$config.item_attribute);\n\t\t\t\treturn {\n\t\t\t\t\tid: id,\n\t\t\t\t\tcolumnName: columnName\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfunction _getEditorPosition(itemId, columnName) {\n\t\t\tvar top = grid.getItemTop(itemId);\n\t\t\tvar height = grid.getItemHeight(itemId);\n\t\t\tvar cols = grid.getGridColumns();\n\t\t\tvar left = 0,\n\t\t\t\twidth = 0;\n\n\t\t\tfor (var i = 0; i < cols.length; i++) {\n\t\t\t\tif (cols[i].name == columnName) {\n\t\t\t\t\twidth = cols[i].width;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tleft += cols[i].width;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttop: top,\n\t\t\t\tleft: left,\n\t\t\t\theight: height,\n\t\t\t\twidth: width\n\t\t\t};\n\t\t}\n\t\tfunction _createPlaceholder(itemId, columnName) {\n\t\t\tvar pos = _getEditorPosition(itemId, columnName);\n\t\t\tvar el = document.createElement(\"div\");\n\t\t\tel.className = \"gantt_grid_editor_placeholder\";\n\t\t\tel.setAttribute(grid.$config.item_attribute, itemId);\n\t\t\tel.setAttribute(\"data-column-name\", columnName);\n\t\t\tel.setAttribute(\"data-column-index\", grid.getColumnIndex(columnName));\n\n\t\t\tel.style.cssText = [\n\t\t\t\t\"top:\" + pos.top + \"px\",\n\t\t\t\t\"left:\" + pos.left + \"px\",\n\t\t\t\t\"width:\" + pos.width + \"px\",\n\t\t\t\t\"height:\" + pos.height + \"px\"\n\t\t\t].join(\";\");\n\n\t\t\treturn el;\n\t\t}\n\n\n\t\tvar handlers = [];\n\t\tvar store = null;\n\t\tvar controller = {\n\t\t\t_itemId: null,\n\t\t\t_columnName: null,\n\t\t\t_editor: null,\n\t\t\t_editorType: null,\n\t\t\t_placeholder: null,\n\n\t\t\tlocateCell: _getGridCellFromNode,\n\t\t\tgetEditorConfig: function (columnName) {\n\t\t\t\tvar column = grid.getColumn(columnName);\n\t\t\t\treturn column.editor;\n\t\t\t},\n\n\t\t\tinit: function () {\n\t\t\t\tvar mapping = keyboardMapping.getMapping();\n\t\t\t\tif(mapping.init){\n\t\t\t\t\tmapping.init(this, grid);\n\t\t\t\t}\n\n\t\t\t\tstore = grid.$gantt.getDatastore(grid.$config.bind);\n\n\t\t\t\tvar self = this;\n\n\t\t\t\thandlers.push(store.attachEvent(\"onIdChange\", function(oldId, newId){\n\t\t\t\t\tif(self._itemId == oldId){\n\t\t\t\t\t\tself._itemId = newId;\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t\thandlers.push(store.attachEvent(\"onStoreUpdated\", function(){\n\t\t\t\t\tif(grid.$gantt.getState(\"batchUpdate\").batch_update){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(self.isVisible() && !store.isVisible(self._itemId)){\n\t\t\t\t\t\tself.hide();\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tthis.init = function(){};\n\t\t\t},\n\n\t\t\tgetState: function(){\n\t\t\t\treturn {\n\t\t\t\t\teditor: this._editor,\n\t\t\t\t\teditorType: this._editorType,\n\t\t\t\t\tplaceholder: this._placeholder,\n\t\t\t\t\tid: this._itemId,\n\t\t\t\t\tcolumnName: this._columnName\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tstartEdit: function(itemId, columnName) {\n\t\t\t\tif (this.isVisible()) {\n\t\t\t\t\tthis.save();\n\t\t\t\t}\n\n\t\t\t\tif(!store.exists(itemId)){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar editorState = {id: itemId, columnName: columnName};\n\t\t\t\tif(this.callEvent(\"onBeforeEditStart\", [editorState]) === false){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.show(editorState.id, editorState.columnName);\n\t\t\t\tthis.setValue();\n\n\t\t\t\tthis.callEvent(\"onEditStart\", [editorState]);\n\t\t\t},\n\t\t\tisVisible: function(){\n\t\t\t\treturn !!(this._editor && domHelpers.isChildOf(this._placeholder, document.body));\n\t\t\t},\n\t\t\tshow: function (itemId, columnName) {\n\t\t\t\tif (this.isVisible()) {\n\t\t\t\t\tthis.save();\n\t\t\t\t}\n\t\t\t\tvar editorState = {id: itemId, columnName: columnName};\n\n\t\t\t\tvar column = grid.getColumn(editorState.columnName);\n\t\t\t\tvar editorConfig = this.getEditorConfig(column.name);\n\t\t\t\tif(!editorConfig)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar editor = grid.$getConfig().editor_types[editorConfig.type];\n\n\t\t\t\tvar placeholder = _createPlaceholder(editorState.id, editorState.columnName);\n\t\t\t\tgrid.$grid_data.appendChild(placeholder);\n\t\t\t\teditor.show(editorState.id, column, editorConfig, placeholder);\n\t\t\t\tthis._editor = editor;\n\t\t\t\tthis._placeholder = placeholder;\n\t\t\t\tthis._itemId = editorState.id;\n\t\t\t\tthis._columnName = editorState.columnName;\n\t\t\t\tthis._editorType = editorConfig.type;\n\n\t\t\t\tvar mapping = keyboardMapping.getMapping();\n\t\t\t\tif(mapping.onShow){\n\t\t\t\t\tmapping.onShow(this, placeholder, grid);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tsetValue: function () {\n\t\t\t\tvar state = this.getState();\n\t\t\t\tvar itemId = state.id,\n\t\t\t\t\tcolumnName = state.columnName;\n\n\t\t\t\tvar column = grid.getColumn(columnName);\n\t\t\t\tvar item = store.getItem(itemId);\n\t\t\t\tvar editorConfig = this.getEditorConfig(columnName);\n\n\t\t\t\tif(!editorConfig)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar value = item[editorConfig.map_to];\n\t\t\t\tif(editorConfig.map_to == \"auto\"){\n\t\t\t\t\tvalue = store.getItem(itemId);\n\t\t\t\t}\n\n\t\t\t\tthis._editor.set_value(value, itemId, column, this._placeholder);\n\t\t\t\tthis.focus();\n\t\t\t},\n\n\t\t\tfocus: function(){\n\t\t\t\tthis._editor.focus(this._placeholder);\n\t\t\t},\n\n\t\t\tgetValue: function () {\n\t\t\t\tvar column = grid.getColumn(this._columnName);\n\t\t\t\treturn this._editor.get_value(this._itemId, column, this._placeholder);\n\t\t\t},\n\n\t\t\t_getItemValue: function() {\n\t\t\t\tvar editorConfig = this.getEditorConfig(this._columnName);\n\n\t\t\t\tif(!editorConfig)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar item = gantt.getTask(this._itemId);\n\t\t\t\tvar value = item[editorConfig.map_to];\n\t\t\t\tif(editorConfig.map_to == \"auto\"){\n\t\t\t\t\tvalue = store.getItem(this._itemId);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\n\t\t\tisChanged: function(){\n\n\t\t\t\tvar column = grid.getColumn(this._columnName);\n\n\t\t\t\tvar value = this._getItemValue();\n\n\t\t\t\treturn this._editor.is_changed(value, this._itemId, column, this._placeholder);\n\t\t\t},\n\n\t\t\thide: function () {\n\t\t\t\tif(!this._itemId)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar itemId = this._itemId,\n\t\t\t\t\tcolumnName = this._columnName;\n\n\t\t\t\tvar mapping = keyboardMapping.getMapping();\n\t\t\t\tif(mapping.onHide){\n\t\t\t\t\tmapping.onHide(this, this._placeholder, grid);\n\t\t\t\t}\n\n\t\t\t\tthis._itemId = null;\n\t\t\t\tthis._columnName = null;\n\t\t\t\tthis._editorType = null;\n\t\t\t\tif (!this._placeholder) return;\n\n\t\t\t\tif (this._editor) {\n\t\t\t\t\tthis._editor.hide(this._placeholder);\n\t\t\t\t}\n\t\t\t\tthis._editor = null;\n\t\t\t\tif (this._placeholder.parentNode) {\n\t\t\t\t\tthis._placeholder.parentNode.removeChild(this._placeholder);\n\t\t\t\t}\n\t\t\t\tthis._placeholder = null;\n\n\t\t\t\tthis.callEvent(\"onEditEnd\", [{id: itemId, columnName: columnName}]);\n\t\t\t},\n\t\t\tsave: function () {\n\t\t\t\tif(!(this.isVisible() && store.exists(this._itemId) && this.isChanged())) {\n\t\t\t\t\tthis.hide();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar itemId = this._itemId,\n\t\t\t\t\tcolumnName = this._columnName;\n\n\t\t\t\tif(!store.exists(itemId)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar item = store.getItem(itemId);\n\t\t\t\tvar editorConfig = this.getEditorConfig(columnName);\n\t\t\t\tvar editorState = {\n\t\t\t\t\tid: itemId,\n\t\t\t\t\tcolumnName: columnName,\n\t\t\t\t\tnewValue: this.getValue(),\n\t\t\t\t\toldValue: this._getItemValue()\n\t\t\t\t};\n\t\t\t\tif(this.callEvent(\"onBeforeSave\", [editorState]) !== false) {\n\t\t\t\t\tif(this._editor.is_valid(editorState.newValue, editorState.id, editorState.columnName, this._placeholder)){\n\n\n\t\t\t\t\t\tvar mapTo = editorConfig.map_to;\n\t\t\t\t\t\tvar value = editorState.newValue;\n\t\t\t\t\t\tif (mapTo != \"auto\") {\n\t\t\t\t\t\t\titem[mapTo] = value;\n\t\t\t\t\t\t\tif (mapTo == \"duration\") {\n\t\t\t\t\t\t\t\titem.end_date = gantt.calculateEndDate(item);\n\t\t\t\t\t\t\t} else if (mapTo == \"end_date\") {\n\t\t\t\t\t\t\t\titem.start_date = gantt.calculateEndDate({\n\t\t\t\t\t\t\t\t\tstart_date: item.end_date,\n\t\t\t\t\t\t\t\t\tduration: -item.duration,\n\t\t\t\t\t\t\t\t\ttask: item}\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (mapTo == \"start_date\") {\n\t\t\t\t\t\t\t\titem.end_date = gantt.calculateEndDate(item);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tstore.updateItem(itemId);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tthis._editor.save(itemId, grid.getColumn(columnName), this._placeholder);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.callEvent(\"onSave\", [editorState]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.hide();\n\t\t\t},\n\n\t\t\t_findEditableCell: function findEditableCell(start, direction){\n\t\t\t\tvar nextIndex = start;\n\t\t\t\tvar columns = grid.getGridColumns();\n\t\t\t\tvar nextColumn = columns[nextIndex];\n\n\t\t\t\tvar columnName = nextColumn ? nextColumn.name : null;\n\t\t\t\tif(columnName){\n\t\t\t\t\twhile(columnName && !this.getEditorConfig(columnName)){\n\t\t\t\t\t\tcolumnName = this._findEditableCell(start + direction, direction);\n\t\t\t\t\t}\n\t\t\t\t\treturn columnName;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\n\t\t\tgetNextCell: function moveCell(dir){\n\t\t\t\treturn this._findEditableCell(grid.getColumnIndex(this._columnName) + dir, dir);\n\t\t\t},\n\n\t\t\tgetFirstCell: function getFirstCell(){\n\t\t\t\treturn this._findEditableCell(0, 1);\n\t\t\t},\n\n\t\t\tgetLastCell: function getLastCell(){\n\t\t\t\treturn this._findEditableCell(grid.getGridColumns().length - 1, -1);\n\t\t\t},\n\n\t\t\teditNextCell: function nextCell(canChangeRow){\n\t\t\t\tvar cell = this.getNextCell(1);\n\t\t\t\tif(cell){\n\t\t\t\t\tvar nextColumn = this.getNextCell(1);\n\t\t\t\t\tif(nextColumn && this.getEditorConfig(nextColumn)){\n\t\t\t\t\t\tthis.startEdit(this._itemId, nextColumn);\n\t\t\t\t\t}\n\t\t\t\t}else if(canChangeRow && this.moveRow(1)){\n\t\t\t\t\tvar task = this.moveRow(1);\n\t\t\t\t\tcell = this.getFirstCell();\n\t\t\t\t\tif(cell && this.getEditorConfig(cell)){\n\t\t\t\t\t\tthis.startEdit(task, cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\teditPrevCell: function prevCell(canChangeRow){\n\t\t\t\tvar cell = this.getNextCell(-1);\n\t\t\t\tif(cell){\n\t\t\t\t\tvar nextColumn = this.getNextCell(-1);\n\t\t\t\t\tif(nextColumn && this.getEditorConfig(nextColumn)){\n\t\t\t\t\t\tthis.startEdit(this._itemId, nextColumn);\n\t\t\t\t\t}\n\t\t\t\t}else if(canChangeRow && this.moveRow(-1)){\n\t\t\t\t\tvar task = this.moveRow(-1);\n\t\t\t\t\tcell = this.getLastCell();\n\t\t\t\t\tif(cell && this.getEditorConfig(cell)){\n\t\t\t\t\t\tthis.startEdit(task, cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tmoveRow: function moveRow(dir){\n\t\t\t\tif(dir > 0){\n\t\t\t\t\treturn gantt.getNext(this._itemId);\n\t\t\t\t}else {\n\t\t\t\t\treturn  gantt.getPrev(this._itemId);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\teditNextRow: function nextRow(){\n\t\t\t\tvar row = this.getNextCell(1);\n\t\t\t\tif(row){\n\t\t\t\t\tthis.startEdit(row, this._columnName);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\teditPrevRow: function prevRow(){\n\t\t\t\tvar row = this.getNextCell(-1);\n\t\t\t\tif(row){\n\t\t\t\t\tthis.startEdit(row, this._columnName);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdestructor: function(){\n\t\t\t\thandlers.forEach(function(handlerId){\n\t\t\t\t\tstore.detachEvent(handlerId);\n\t\t\t\t});\n\t\t\t\tstore = null;\n\t\t\t\tthis.hide();\n\t\t\t\tthis.detachAllEvents();\n\t\t\t}\n\t\t};\n\n\t\tutils.mixin(controller, keyboardMapping);\n\t\tutils.mixin(controller, eventBus);\n\n\t\treturn controller;\n\t}\n\n\n\tvar inlineEditController = {\n\t\tinit: initConfigs,\n\t\tcreateEditors: createGridEditors\n\t};\n\n\tutils.mixin(inlineEditController, keyboardMapping);\n\tutils.mixin(inlineEditController, eventBus);\n\n\treturn inlineEditController;\n}\n\nmodule.exports = create;","function createResizer(gantt, grid){\n\treturn {\n\t\tinit: function(){},\n\t\tdoOnRender: function(){}\n\t};\n}\n\nmodule.exports = createResizer;","var createStaticBgHelper = function(){\n\treturn {\n\t\trender: function(){}\n\t};\n};\n\nmodule.exports = {\n\tcreate: function(){\n\t\treturn createStaticBgHelper();\n\t}\n};\n\n","var __extends = require(\"../../../utils/extends\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\"),\n\tutils = require(\"../../../utils/utils\"),\n\tenv = require(\"../../../utils/env\"),\n\tCell = require(\"./cell\");\n\nvar ScrollbarCell = (function (_super) {\n\t\"use strict\";\n\n\t__extends(ScrollbarCell, _super);\n\tfunction ScrollbarCell(parent, config, factory, gantt) {\n\n\t\tvar _this = _super.apply(this, arguments) || this;\n\t\tthis.$config = utils.mixin(config, {scroll: \"x\"});\n\t\t_this._scrollHorizontalHandler = utils.bind(_this._scrollHorizontalHandler, _this);\n\t\t_this._scrollVerticalHandler = utils.bind(_this._scrollVerticalHandler, _this);\n\t\t_this._outerScrollVerticalHandler = utils.bind(_this._outerScrollVerticalHandler, _this);\n\t\t_this._outerScrollHorizontalHandler = utils.bind(_this._outerScrollHorizontalHandler, _this);\n\t\t_this._mouseWheelHandler = utils.bind(_this._mouseWheelHandler, _this);\n\n\t\tthis.$config.hidden = true;\n\t\tvar size = gantt.config.scroll_size;\n\n\t\tif(gantt.env.isIE){\n\t\t\t// full element height/width must be bigger than just a browser scrollbar,\n\t\t\t// otherwise the scrollbar element won't be scrolled on click\n\t\t\tsize += 1;\n\t\t}\n\n\t\tif(this._isHorizontal()){\n\t\t\t_this.$config.height = size;\n\t\t\t_this.$parent.$config.height = size;\n\t\t}else{\n\t\t\t_this.$config.width = size;\n\t\t\t_this.$parent.$config.width = size;\n\t\t}\n\n\t\tthis.$config.scrollPosition = 0;\n\n\t\t_this.$name = \"scroller\";\n\t\treturn _this;\n\t}\n\n\tScrollbarCell.prototype.init = function(container){\n\t\tcontainer.innerHTML = this.$toHTML();\n\t\tthis.$view = container.firstChild;\n\n\t\tif(!this.$view){\n\t\t\tthis.init();\n\t\t}\n\t\tif(this._isVertical()){\n\t\t\tthis._initVertical();\n\t\t}else{\n\t\t\tthis._initHorizontal();\n\t\t}\n\t\tthis._initMouseWheel();\n\t\tthis._initLinkedViews();\n\t};\n\n\tScrollbarCell.prototype.$toHTML = function () {\n\t\tvar className = this._isHorizontal() ? \"gantt_hor_scroll\" : \"gantt_ver_scroll\";\n\t\treturn \"<div class='gantt_layout_cell \"+className+\"'><div style='\"+(this._isHorizontal() ? \"width:2000px\" : \"height:2000px\")+\"'></div></div>\";\n\t};\n\n\tScrollbarCell.prototype._getRootParent = function(){\n\t\tvar parent = this.$parent;\n\t\twhile(parent && parent.$parent){\n\t\t\tparent = parent.$parent;\n\t\t}\n\t\tif(parent){\n\t\t\treturn parent;\n\t\t}\n\t};\n\n\n\tfunction eachCell(root, res){\n\t\tres.push(root);\n\t\tif(root.$cells){\n\t\t\tfor(var i = 0; i < root.$cells.length; i++){\n\t\t\t\teachCell(root.$cells[i], res);\n\t\t\t}\n\t\t}\n\t}\n\tScrollbarCell.prototype._eachView = function(){\n\t\tvar res = [];\n\t\teachCell(this._getRootParent(), res);\n\t\treturn res;\n\t};\n\n\tScrollbarCell.prototype._getLinkedViews = function(){\n\t\tvar views = this._eachView();\n\t\tvar res = [];\n\t\tfor(var i = 0; i < views.length; i++){\n\t\t\tif(views[i].$config && ((this._isVertical() && views[i].$config.scrollY == this.$id) || (this._isHorizontal() && views[i].$config.scrollX == this.$id)) ){\n\t\t\t\tres.push(views[i]);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t};\n\n\n\tScrollbarCell.prototype._initHorizontal = function(){\n\t\tthis.$scroll_hor = this.$view;\n\t\tthis.$domEvents.attach(this.$view, \"scroll\", this._scrollHorizontalHandler);\n\n\t};\n\n\tScrollbarCell.prototype._initLinkedViews = function(){\n\t\tvar views = this._getLinkedViews();\n\t\tvar css = this._isVertical() ?\"gantt_layout_outer_scroll gantt_layout_outer_scroll_vertical\" : \"gantt_layout_outer_scroll gantt_layout_outer_scroll_horizontal\";\n\t\tfor(var i = 0; i < views.length; i++){\n\t\t\t//views[i].$config.css = [views[i].$config.css || \"\", css].join(\" \");\n\t\t\tdomHelpers.addClassName(views[i].$view || views[i].getNode(), css);\n\t\t}\n\t};\n\n\tScrollbarCell.prototype._initVertical = function(){\n\t\tthis.$scroll_ver = this.$view;\n\t\tthis.$domEvents.attach(this.$view, \"scroll\", this._scrollVerticalHandler);\n\t};\n\n\tScrollbarCell.prototype._updateLinkedViews = function(){\n\t};\n\n\tScrollbarCell.prototype._initMouseWheel = function(){\n\t\tvar ff = env.isFF;\n\t\tif (ff)\n\t\t\tthis.$domEvents.attach(this._getRootParent().$view, \"wheel\", this._mouseWheelHandler);\n\t\telse\n\t\t\tthis.$domEvents.attach(this._getRootParent().$view, \"mousewheel\", this._mouseWheelHandler);\n\t};\n\n\n\n\n\tScrollbarCell.prototype.scrollHorizontally = function(left){\n\t\tif(this._scrolling) return;\n\t\tthis._scrolling = true;\n\n\t\tthis.$scroll_hor.scrollLeft = left;\n\t\tthis.$config.codeScrollLeft = left;\n\t\tleft = this.$scroll_hor.scrollLeft;\n\n\t\tvar views = this._getLinkedViews();\n\t\tfor(var i = 0; i < views.length; i++){\n\t\t\tif(views[i].scrollTo){\n\t\t\t\tviews[i].scrollTo(left, undefined);\n\t\t\t}\n\t\t}\n\t\tvar oldSize = this.$config.scrollPosition;\n\t\tthis.$config.scrollPosition = left;\n\t\tthis.callEvent(\"onScroll\", [oldSize, left, this.$config.scroll]);\n\t\tthis._scrolling = false;\n\t};\n\tScrollbarCell.prototype.scrollVertically = function(top){\n\t\tif(this._scrolling) return;\n\t\tthis._scrolling = true;\n\n\t\tthis.$scroll_ver.scrollTop = top;\n\t\ttop = this.$scroll_ver.scrollTop;\n\n\t\tvar views = this._getLinkedViews();\n\n\t\tfor(var i = 0; i < views.length; i++){\n\t\t\tif(views[i].scrollTo){\n\t\t\t\tviews[i].scrollTo(undefined, top);\n\t\t\t}\n\t\t}\n\t\tvar oldSize = this.$config.scrollPosition;\n\t\tthis.$config.scrollPosition = top;\n\t\tthis.callEvent(\"onScroll\", [oldSize, top, this.$config.scroll]);\n\t\tthis._scrolling = false;\n\t};\n\n\tScrollbarCell.prototype._isVertical = function(){\n\t\treturn this.$config.scroll == \"y\";\n\t};\n\tScrollbarCell.prototype._isHorizontal = function(){\n\t\treturn this.$config.scroll == \"x\";\n\t};\n\tScrollbarCell.prototype._scrollHorizontalHandler = function (e) {\n\t\tif(this._isVertical() || this._scrolling){\n\t\t\treturn;\n\t\t}\n\n\t\t//in safari we can catch previous onscroll after setting new value from mouse-wheel event\n\t\t//set delay to prevent value drifiting\n\t\tif ((new Date()) - ( this._wheel_time || 0 ) < 100) return true;\n\t\tif (this.$gantt._touch_scroll_active) return;\n\t\tvar left = this.$scroll_hor.scrollLeft;\n\n\t\tthis.scrollHorizontally(left);\n\n\t\tthis._oldLeft = this.$scroll_hor.scrollLeft;\n\t};\n\tScrollbarCell.prototype._outerScrollHorizontalHandler = function(e){\n\t\tif(this._isVertical()){\n\t\t\treturn;\n\t\t}\n\t};\n\n\tScrollbarCell.prototype.show = function(){\n\t\tthis.$parent.show();\n\t};\n\tScrollbarCell.prototype.hide = function(){\n\t\tthis.$parent.hide();\n\t};\n\n\tScrollbarCell.prototype._getScrollSize = function(){\n\t\tvar scrollSize = 0;\n\t\tvar outerSize = 0;\n\t\tvar isHorizontal = this._isHorizontal();\n\n\t\tvar linked = this._getLinkedViews();\n\t\tvar view;\n\t\tvar scrollProperty = isHorizontal ? \"scrollWidth\" : \"scrollHeight\",\n\t\t\tinnerSizeProperty = isHorizontal ? \"contentX\" : \"contentY\";\n\t\tvar outerProperty = isHorizontal ? \"x\" : \"y\";\n\t\tvar offset = this._getScrollOffset();\n\n\t\tfor(var i = 0; i < linked.length; i++){\n\t\t\tview = linked[i];\n\t\t\tif(!(view && view.$content && view.$content.getSize && !view.$config.hidden)) continue;\n\n\t\t\tvar sizes = view.$content.getSize();\n\t\t\tvar cellScrollSize;\n\t\t\tif(sizes.hasOwnProperty(scrollProperty)){\n\t\t\t\tcellScrollSize = sizes[scrollProperty];\n\t\t\t}else{\n\t\t\t\tcellScrollSize = sizes[innerSizeProperty];\n\t\t\t}\n\n\t\t\tif(offset){\n\t\t\t\t// precalculated vertical/horizontal offsets of scrollbar to emulate 4.x look\n\t\t\t\tif(sizes[innerSizeProperty] > sizes[outerProperty] && sizes[innerSizeProperty] > scrollSize && (cellScrollSize > (sizes[outerProperty] - offset + 2))){\n\t\t\t\t\tscrollSize = cellScrollSize + (isHorizontal ? 0 : 2);\n\t\t\t\t\touterSize = sizes[outerProperty];\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tvar nonScrollableSize = Math.max(sizes[innerSizeProperty] - cellScrollSize, 0);\n\t\t\t\tvar scrollableViewPortSize = Math.max(sizes[outerProperty] - nonScrollableSize, 0);\n\t\t\t\tcellScrollSize = cellScrollSize + nonScrollableSize;\n\n\t\t\t\tif(cellScrollSize > scrollableViewPortSize && (cellScrollSize > scrollSize) ){\n\t\t\t\t\t//|| (cellScrollSize === scrollSize && sizes[outerProperty] < outerSize) // same scroll width but smaller scrollable view port\n\n\t\t\t\t\tscrollSize = cellScrollSize;\n\t\t\t\t\touterSize = sizes[outerProperty];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\touterScroll: outerSize,\n\t\t\tinnerScroll: scrollSize\n\t\t};\n\t};\n\n\tScrollbarCell.prototype.scroll = function(position){\n\t\tif(this._isHorizontal()){\n\t\t\tthis.scrollHorizontally(position);\n\t\t}else{\n\t\t\tthis.scrollVertically(position);\n\t\t}\n\t};\n\n\tScrollbarCell.prototype.getScrollState = function(){\n\t\treturn {\n\t\t\tvisible: this.isVisible(),\n\t\t\tdirection: this.$config.scroll,\n\t\t\tsize: this.$config.outerSize,\n\t\t\tscrollSize: this.$config.scrollSize || 0,\n\t\t\tposition: this.$config.scrollPosition || 0\n\t\t};\n\t};\n\n\tScrollbarCell.prototype.setSize = function(width, height){\n\t\t_super.prototype.setSize.apply(this, arguments);\n\n\t\tvar scrollSizes = this._getScrollSize();\n\n\t\tvar ownSize = (this._isVertical() ? height : width) - this._getScrollOffset() + (this._isHorizontal() ? 1 : 0);\n\n\t\tif(scrollSizes.innerScroll && ownSize > scrollSizes.outerScroll){\n\t\t\tscrollSizes.innerScroll += (ownSize - scrollSizes.outerScroll);\n\t\t}\n\t\tthis.$config.scrollSize = scrollSizes.innerScroll;\n\n\t\tthis.$config.width = width;\n\t\tthis.$config.height = height;\n\t\tthis._setScrollSize(scrollSizes.innerScroll);\n\t};\n\n\tScrollbarCell.prototype.isVisible = function(){\n\t\treturn !!(this.$parent && this.$parent.$view.parentNode);\n\t};\n\n\tScrollbarCell.prototype.shouldShow = function(){\n\t\tvar scrollSizes = this._getScrollSize();\n\t\tif(!scrollSizes.innerScroll && (this.$parent && this.$parent.$view.parentNode)){\n\t\t\treturn false;\n\t\t}else if(scrollSizes.innerScroll && !(this.$parent && this.$parent.$view.parentNode)){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tScrollbarCell.prototype.shouldHide = function(){\n\t\tvar scrollSizes = this._getScrollSize();\n\t\tif(!scrollSizes.innerScroll && (this.$parent && this.$parent.$view.parentNode)){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t};\n\n\n\tScrollbarCell.prototype.toggleVisibility = function(){\n\t\tif(this.shouldHide()){\n\t\t\tthis.hide();\n\t\t}else if(this.shouldShow()){\n\t\t\tthis.show();\n\t\t}\n\t};\n\t\n\tScrollbarCell.prototype._getScaleOffset = function(view){\n\t\tvar offset = 0;\n\t\tif(view && (view.$config.view == \"timeline\" || view.$config.view == \"grid\")){\n\t\t\toffset = view.$content.$getConfig().scale_height;\n\t\t}\n\t\treturn offset;\n\t};\n\n\tScrollbarCell.prototype._getScrollOffset = function(){\n\t\tvar offset = 0;\n\t\tif(this._isVertical()){\n\t\t\tvar parentLayout = this.$parent.$parent;\n\t\t\toffset = Math.max(\n\t\t\t\tthis._getScaleOffset(parentLayout.getPrevSibling(this.$parent.$id)),\n\t\t\t\tthis._getScaleOffset(parentLayout.getNextSibling(this.$parent.$id))\n\t\t\t\t);\n\t\t}else{\n\t\t\tvar linked = this._getLinkedViews();\n\n\t\t\tfor (var i = 0; i < linked.length; i++) {\n\t\t\t\tvar view = linked[i],\n\t\t\t\t\tvparent = view.$parent;\n\t\t\t\tvar cells = vparent.$cells;\n\n\t\t\t\tvar last = cells[cells.length - 1];\n\n\t\t\t\tif (last && last.$config.view == \"scrollbar\" && last.$config.hidden === false) {\n\t\t\t\t\toffset = last.$config.width;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\treturn offset || 0;\n\t};\n\n\tScrollbarCell.prototype._setScrollSize = function(size){\n\t\tvar property = this._isHorizontal() ? \"width\" : \"height\";\n\t\tvar scrollbar = this._isHorizontal() ? this.$scroll_hor : this.$scroll_ver;\n\n\t\tvar offset = this._getScrollOffset();\n\n\t\tvar node = scrollbar.firstChild;\n\n\t\tif(offset){\n\t\t\tif(this._isVertical()){\n\n\t\t\t\tthis.$config.outerSize = (this.$config.height - offset + 3);\n\t\t\t\tscrollbar.style.height = this.$config.outerSize + \"px\";\n\t\t\t\tscrollbar.style.top = (offset-1) + \"px\";\n\t\t\t\tdomHelpers.addClassName(scrollbar, this.$parent._borders.top);\n\t\t\t\tdomHelpers.addClassName(scrollbar.parentNode, \"gantt_task_vscroll\");\n\t\t\t}else{\n\t\t\t\tthis.$config.outerSize = (this.$config.width - offset + 1);\n\t\t\t\tscrollbar.style.width = this.$config.outerSize + \"px\";\n\t\t\t\t//domHelpers.addClassName(scrollbar, this.$parent._borders.right);\n\t\t\t}\n\t\t}else{\n\t\t\tscrollbar.style.top = \"auto\";\n\t\t\tdomHelpers.removeClassName(scrollbar, this.$parent._borders.top);\n\t\t\tdomHelpers.removeClassName(scrollbar.parentNode, \"gantt_task_vscroll\");\n\t\t\tthis.$config.outerSize = this.$config.height;\n\t\t}\n\n\t\tnode.style[property] = size + \"px\";\n\t};\n\n\tScrollbarCell.prototype._scrollVerticalHandler = function (e) {\n\t\tif(this._scrollHorizontalHandler() || this._scrolling){\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.$gantt._touch_scroll_active) return;\n\t\tvar top = this.$scroll_ver.scrollTop;\n\t\tvar prev = this._oldTop;\n\t\tif(top == prev) return;\n\n\t\tthis.scrollVertically(top);\n\n\t\tthis._oldTop = this.$scroll_ver.scrollTop;\n\n\t};\n\tScrollbarCell.prototype._outerScrollVerticalHandler = function(e){\n\t\tif(this._scrollHorizontalHandler()){\n\t\t\treturn;\n\t\t}\n\t};\n\n\tScrollbarCell.prototype._checkWheelTarget = function(targetNode){\n\t\tvar connectedViews = this._getLinkedViews().concat(this);\n\n\t\tfor(var i = 0; i < connectedViews.length; i++){\n\t\t\tvar node = connectedViews[i].$view;\n\t\t\tif(domHelpers.isChildOf(targetNode, node)){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tScrollbarCell.prototype._mouseWheelHandler = function(e){\n\t\tvar target = e.target || e.srcElement;\n\n\t\tif(!this._checkWheelTarget(target))\n\t\t\treturn;\n\n\t\tthis._wheel_time = new Date();\n\n\t\tvar res = {};\n\t\tvar ff = env.isFF;\n\t\tvar wx = ff ? (e.deltaX*-20) : e.wheelDeltaX*2;\n\t\tvar wy = ff ? (e.deltaY*-40) : e.wheelDelta;\n\n\t\tif(e.shiftKey && !(e.deltaX || e.wheelDeltaX)){\n\t\t\t// shift+mousewheel for horizontal scroll\n\t\t\twx = wy*2;\n\t\t\twy = 0;\n\t\t}\n\n\t\tif (wx && Math.abs(wx) > Math.abs(wy)){\n\t\t\tif(this._isVertical()){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(res.x) return true;//no horisontal scroll, must not block scrolling\n\t\t\tif(!this.$scroll_hor || !this.$scroll_hor.offsetWidth) return true;\n\n\t\t\tvar dir  = wx/-40;\n\t\t\tvar oldLeft = this._oldLeft;\n\t\t\tvar left = oldLeft+dir*30;\n\t\t\tthis.scrollHorizontally(left);\n\t\t\tthis.$scroll_hor.scrollLeft = left;\n\t\t\t// not block scroll if position hasn't changed\n\t\t\tif(oldLeft == this.$scroll_hor.scrollLeft){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tthis._oldLeft = this.$scroll_hor.scrollLeft;\n\t\t} else {\n\t\t\tif(this._isHorizontal()){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(res.y) return true;//no vertical scroll, must not block scrolling\n\t\t\tif(!this.$scroll_ver || !this.$scroll_ver.offsetHeight) return true;\n\n\t\t\tvar dir  = wy/-40;\n\t\t\tif (typeof wy == \"undefined\")\n\t\t\t\tdir = e.detail;\n\n\t\t\tvar oldTop = this._oldTop;\n\t\t\tvar top = this.$scroll_ver.scrollTop+dir*30;\n\n\t\t\t//if(!this.$gantt.config.prevent_default_scroll &&\n\t\t\t//\t(this.$gantt._cached_scroll_pos && ((this.$gantt._cached_scroll_pos.y == top) || (this.$gantt._cached_scroll_pos.y <= 0 && top <= 0)))) return true;\n\n\n\t\t\tthis.scrollVertically(top);\n\t\t\tthis.$scroll_ver.scrollTop = top;\n\n\t\t\t// not block scroll if position hasn't changed\n\t\t\tif(oldTop == this.$scroll_ver.scrollTop){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tthis._oldTop = this.$scroll_ver.scrollTop;\n\t\t}\n\n\t\tif (e.preventDefault)\n\t\t\te.preventDefault();\n\t\te.cancelBubble=true;\n\t\treturn false;\n\t};\n\n\treturn ScrollbarCell;\n})(Cell);\n\nmodule.exports = ScrollbarCell;","module.exports = null;","var __extends = require(\"../../../utils/extends\"),\n\tutils = require(\"../../../utils/utils\"),\n\tCell = require(\"./cell\");\n\nvar ViewCell = (function (_super) {\n\t\"use strict\";\n\n\t__extends(ViewCell, _super);\n\tfunction ViewCell(parent, config, factory) {\n\n\t\tvar _this = _super.apply(this, arguments) || this;\n\n\t\tif(config.view){\n\t\t\tif(config.id){\n\t\t\t\t// pass id to the nested view\n\t\t\t\tthis.$id = utils.uid();\n\t\t\t}\n\t\t\tvar childConfig = utils.copy(config);\n\t\t\tdelete childConfig.config;\n\t\t\tdelete childConfig.templates;\n\n\t\t\tthis.$content = this.$factory.createView(config.view, this, childConfig, this);\n\t\t\tif(!this.$content)\n\t\t\t\treturn false;\n\t\t}\n\n\t\t_this.$name = \"viewCell\";\n\t\treturn _this;\n\t}\n\n\tViewCell.prototype.destructor = function(){\n\t\tthis.clear();\n\t\t_super.prototype.destructor.call(this);\n\t};\n\n\tViewCell.prototype.clear = function(){\n\n\t\tthis.$initialized = false;\n\n\t\t// call destructor\n\t\tif (this.$content){\n\t\t\tvar method = this.$content.unload || this.$content.destructor;\n\t\t\tif (method){\n\t\t\t\tmethod.call(this.$content);\n\t\t\t}\n\t\t}\n\n\t\t_super.prototype.clear.call(this);\n\n\t};\n\n\tViewCell.prototype.scrollTo = function(left, top){\n\n\t\tif(this.$content && this.$content.scrollTo){\n\t\t\tthis.$content.scrollTo(left, top);\n\t\t}else{\n\t\t\t_super.prototype.scrollTo.call(this, left, top);\n\t\t}\n\t};\n\n\tViewCell.prototype._setContentSize = function(x, y){\n\t\tvar borders = this._getBorderSizes();\n\t\tvar outerX = x + borders.horizontal;\n\t\tvar outerY = y + borders.vertical;\n\t\tthis.$config.width = outerX;\n\t\tthis.$config.height = outerY;\n\t};\n\n\tViewCell.prototype.setSize = function(x, y){\n\t\t_super.prototype.setSize.call(this, x, y);\n\n\t\tif(!this.$preResize && this.$content) {\n\t\t\tif (!this.$initialized) {\n\t\t\t\tthis.$initialized = true;\n\t\t\t\tvar header = this.$view.childNodes[0];\n\t\t\t\tvar content = this.$view.childNodes[1];\n\t\t\t\tif(!content) content = header;\n\n\t\t\t\t/*if(this.$content.$config){\n\t\t\t\t\tthis.$content.$config.width = this.$lastSize.contentX;\n\t\t\t\t\tthis.$content.$config.height = this.$lastSize.contentY;\n\t\t\t\t}*/\n\t\t\t\tthis.$content.init(content);\n\t\t\t}\n\t\t}\n\t};\n\n\tViewCell.prototype.setContentSize = function(){\n\t\tif(!this.$preResize && this.$content) {\n\t\t\tif (this.$initialized) {\n\t\t\t\tthis.$content.setSize(this.$lastSize.contentX, this.$lastSize.contentY);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tViewCell.prototype.getContentSize = function(){\n\t\tvar size = _super.prototype.getContentSize.call(this);\n\n\t\tif(this.$content && this.$initialized){\n\t\t\tvar childSize = this.$content.getSize();\n\t\t\tsize.width = childSize.contentX === undefined ? childSize.width : childSize.contentX;\n\t\t\tsize.height = childSize.contentY === undefined ? childSize.height : childSize.contentY;\n\t\t}\n\n\t\tvar borders = this._getBorderSizes();\n\t\tsize.width += borders.horizontal;\n\t\tsize.height += borders.vertical;\n\n\t\treturn size;\n\t};\n\n\treturn ViewCell;\n}(Cell));\n\nmodule.exports = ViewCell;","var __extends = require(\"../../../utils/extends\"),\n\tLayout = require(\"./layout\"),\n\tCell = require(\"./cell\");\n\nvar ViewLayout = (function (_super) {\n\t\"use strict\";\n\n\t__extends(ViewLayout, _super);\n\tfunction ViewLayout(parent, config, factory) {\n\t\tvar _this = _super.apply(this, arguments) || this;\n\t\tfor (var i = 0; i < _this.$cells.length; i++) {\n\t\t\t_this.$cells[i].$config.hidden = (i !== 0);\n\t\t}\n\t\t_this.$cell = _this.$cells[0];\n\t\t_this.$name = \"viewLayout\";\n\n\t\treturn _this;\n\t}\n\tViewLayout.prototype.cell = function (id) {\n\t\tvar cell = _super.prototype.cell.call(this, id);\n\t\tif (!cell.$view) {\n\t\t\tthis.$fill(null, this);\n\t\t}\n\t\treturn cell;\n\t};\n\tViewLayout.prototype.moveView = function (view) {\n\t\tvar body = this.$view;\n\t\tif (this.$cell) {\n\t\t\tthis.$cell.$config.hidden = true;\n\t\t\tbody.removeChild(this.$cell.$view);\n\t\t}\n\t\tthis.$cell = view;\n\t\tbody.appendChild(view.$view);\n\t};\n\tViewLayout.prototype.setSize = function (x, y) {\n\t\tCell.prototype.setSize.call(this, x, y);\n\t};\n\n\tViewLayout.prototype.setContentSize = function(){\n\t\tvar size = this.$lastSize;\n\t\tthis.$cell.setSize(size.contentX, size.contentY);\n\t};\n\n\tViewLayout.prototype.getSize = function () {\n\t\tvar sizes = _super.prototype.getSize.call(this);\n\t\tif (this.$cell) {\n\t\t\tvar cellSize = this.$cell.getSize();\n\t\t\tif (this.$config.byMaxSize) {\n\t\t\t\tfor (var i = 0; i < this.$cells.length; i++) {\n\t\t\t\t\tvar otherCell = this.$cells[i].getSize();\n\t\t\t\t\tfor (var cell in cellSize) {\n\t\t\t\t\t\tcellSize[cell] = Math.max(cellSize[cell], otherCell[cell]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var size in sizes) {\n\t\t\t\tsizes[size] = sizes[size] || cellSize[size];\n\t\t\t}\n\t\t\tsizes.gravity = Math.max(sizes.gravity, cellSize.gravity);\n\t\t}\n\t\treturn sizes;\n\t};\n\treturn ViewLayout;\n}(Layout));\n\nmodule.exports = ViewLayout;","var rendererFactory = function(gantt){\n\tvar services = gantt.$services;\n\n\t//hash of dom elements is needed to redraw single bar/link\n\tvar task_area_pulls = {},\n\t\ttask_area_renderers = {};\n\n\tfunction getRenderer(id, layer, node) {\n\n\t\tif (task_area_renderers[id])\n\t\t\treturn task_area_renderers[id];\n\n\t\tif (!layer.renderer)\n\t\t\tgantt.assert(false, \"Invalid renderer call\");\n\n\t\tvar renderOne = function(item){\n\t\t\treturn layer.renderer.call(this, item, layer.host);\n\t\t} ;\n\n\t\tvar filter = layer.filter;\n\n\t\tif (node)\n\t\t\tnode.setAttribute(services.config().layer_attribute, true);\n\n\t\ttask_area_renderers[id] = {\n\t\t\trender_item: function (item, container) {\n\t\t\t\tcontainer = container || node;\n\n\t\t\t\tif (filter) {\n\t\t\t\t\tif (!filter(item)) {\n\t\t\t\t\t\tthis.remove_item(item.id);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar dom = renderOne.call(gantt, item);\n\t\t\t\tthis.append(item, dom, container);\n\n\t\t\t},\n\n\t\t\tclear: function (container) {\n\n\t\t\t\tthis.rendered = task_area_pulls[id] = {};\n\t\t\t\tif(!layer.append)\n\t\t\t\t\tthis.clear_container(container);\n\t\t\t},\n\t\t\tclear_container: function (container) {\n\t\t\t\tcontainer = container || node;\n\t\t\t\tif (container)\n\t\t\t\t\tcontainer.innerHTML = \"\";\n\t\t\t},\n\t\t\trender_items: function (items, container) {\n\t\t\t\tcontainer = container || node;\n\n\t\t\t\tvar buffer = document.createDocumentFragment();\n\t\t\t\tthis.clear(container);\n\t\t\t\tfor (var i = 0, vis = items.length; i < vis; i++) {\n\t\t\t\t\tthis.render_item(items[i], buffer);\n\t\t\t\t}\n\n\t\t\t\tcontainer.appendChild(buffer);\n\t\t\t},\n\t\t\tappend: function (item, node, container) {\n\t\t\t\tif (!node) {\n\t\t\t\t\tif (this.rendered[item.id]) {\n\t\t\t\t\t\tthis.remove_item(item.id);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.rendered[item.id] && this.rendered[item.id].parentNode) {\n\t\t\t\t\tthis.replace_item(item.id, node);\n\t\t\t\t} else {\n\t\t\t\t\tcontainer.appendChild(node);\n\t\t\t\t}\n\t\t\t\tthis.rendered[item.id] = node;\n\n\t\t\t},\n\t\t\treplace_item: function (item_id, newNode) {\n\t\t\t\tvar item = this.rendered[item_id];\n\t\t\t\tif (item && item.parentNode) {\n\t\t\t\t\titem.parentNode.replaceChild(newNode, item);\n\t\t\t\t}\n\t\t\t\tthis.rendered[item_id] = newNode;\n\t\t\t},\n\t\t\tremove_item: function (item_id) {\n\t\t\t\tthis.hide(item_id);\n\t\t\t\tdelete this.rendered[item_id];\n\t\t\t},\n\t\t\thide: function (item_id) {\n\t\t\t\tvar item = this.rendered[item_id];\n\t\t\t\tif (item && item.parentNode) {\n\t\t\t\t\titem.parentNode.removeChild(item);\n\t\t\t\t}\n\t\t\t},\n\t\t\trestore: function (item) {\n\t\t\t\tvar dom = this.rendered[item.id];\n\t\t\t\tif (dom) {\n\t\t\t\t\tif (!dom.parentNode) {\n\t\t\t\t\t\tthis.append(item, dom, node);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.render_item(item, node);\n\t\t\t\t}\n\t\t\t},\n\t\t\tchange_id: function (oldid, newid) {\n\t\t\t\tthis.rendered[newid] = this.rendered[oldid];\n\t\t\t\tdelete this.rendered[oldid];\n\t\t\t},\n\t\t\trendered: task_area_pulls[id],\n\t\t\tnode: node,\n\t\t\tdestructor: function () {\n\t\t\t\tthis.clear();\n\t\t\t\tdelete task_area_renderers[id];\n\t\t\t\tdelete task_area_pulls[id];\n\t\t\t}\n\t\t};\n\n\t\treturn task_area_renderers[id];\n\t}\n\n\n\tfunction clearRenderers() {\n\t\tfor (var i in task_area_renderers) {\n\t\t\tgetRenderer(i).destructor();\n\t\t}\n\t}\n\n\treturn {\n\t\tgetRenderer: getRenderer,\n\t\tclearRenderers: clearRenderers\n\t};\n\n};\n\nmodule.exports = rendererFactory;","var renderFactoryProvider = require(\"./render_factory\");\nvar utils = require(\"../../../utils/utils\"),\n\tdomHelpers = require(\"../../../utils/dom_helpers\");\n\nvar layerFactory = function(gantt){\n\n\tvar renderFactory = renderFactoryProvider(gantt);\n\treturn {\n\tcreateGroup: function (get_container, rel_root, defaultFilters) {\n\n\t\tvar renderGroup = {\n\t\t\ttempCollection: [],\n\t\t\trenderers: {},\n\t\t\tcontainer: get_container,\n\t\t\tfilters: [],\n\t\t\tgetLayers: function () {\n\t\t\t\tthis._add();// add pending layers\n\n\t\t\t\tvar res = [];\n\t\t\t\tfor (var i in this.renderers) {\n\t\t\t\t\tres.push(this.renderers[i]);\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t},\n\t\t\tgetLayer: function (id) {\n\t\t\t\treturn this.renderers[id];\n\t\t\t},\n\t\t\t_add: function (layer) {\n\t\t\t\tif (layer) {\n\t\t\t\t\tlayer.id = layer.id || utils.uid();\n\t\t\t\t\tthis.tempCollection.push(layer);\n\t\t\t\t}\n\n\t\t\t\tvar container = this.container();\n\n\t\t\t\tvar pending = this.tempCollection;\n\t\t\t\tfor (var i = 0; i < pending.length; i++) {\n\t\t\t\t\tlayer = pending[i];\n\n\t\t\t\t\tif (!this.container() && !(layer && layer.container && domHelpers.isChildOf(layer.container, document.body))) continue;\n\n\t\t\t\t\tvar node = layer.container,\n\t\t\t\t\t\tid = layer.id,\n\t\t\t\t\t\ttopmost = layer.topmost;\n\t\t\t\t\tif (!node.parentNode) {\n\t\t\t\t\t\t//insert on top or below the tasks\n\t\t\t\t\t\tif (topmost) {\n\t\t\t\t\t\t\tcontainer.appendChild(node);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar rel = rel_root ? rel_root() : container.firstChild;\n\t\t\t\t\t\t\tif (rel)\n\t\t\t\t\t\t\t\tcontainer.insertBefore(node, rel);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tcontainer.appendChild(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.renderers[id] = renderFactory.getRenderer(\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tlayer,\n\t\t\t\t\t\tnode\n\t\t\t\t\t);\n\t\t\t\t\tthis.tempCollection.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t},\n\t\t\taddLayer: function (config) {\n\t\t\t\t//config = prepareConfig(config);\n\t\t\t\tif(config){\n\t\t\t\t\tif(typeof config == \"function\"){\n\t\t\t\t\t\tconfig = {renderer: config};\n\t\t\t\t\t}\n\n\t\t\t\t\tif(config.filter === undefined){\n\t\t\t\t\t\tconfig.filter = mergeFilters(defaultFilters || []);\n\t\t\t\t\t}else if(config.filter instanceof Array){\n\t\t\t\t\t\tconfig.filter.push(defaultFilters);\n\t\t\t\t\t\tconfig.filter = mergeFilters(config.filter);\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!config.container){\n\t\t\t\t\t\tconfig.container = document.createElement(\"div\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._add(config);\n\t\t\t\treturn (config ? config.id : undefined);\n\t\t\t},\n\t\t\teachLayer: function(code){\n\t\t\t\tfor (var i in this.renderers) {\n\t\t\t\t\tcode(this.renderers[i]);\n\t\t\t\t}\n\t\t\t},\n\t\t\tremoveLayer: function (id) {\n\t\t\t\tif(!this.renderers[id])\n\t\t\t\t\treturn;\n\t\t\t\tthis.renderers[id].destructor();\n\t\t\t\tdelete this.renderers[id];\n\t\t\t},\n\t\t\tclear: function () {\n\t\t\t\tfor (var i in this.renderers) {\n\t\t\t\t\tthis.renderers[i].destructor();\n\t\t\t\t}\n\t\t\t\tthis.renderers = {};\n\t\t\t}//,\n\t\t\t//prepareConfig: prepareConfig\n\t\t};\n\n\t\tgantt.attachEvent(\"onDestroy\", function(){\n\t\t\trenderGroup.clear();\n\t\t\trenderGroup = null;\n\t\t});\n\n\t\treturn renderGroup;\n\t}\n};};\n\n\nfunction mergeFilters(filter_methods){\n\tif(!(filter_methods instanceof Array)){\n\t\tfilter_methods = Array.prototype.slice.call(arguments, 0);\n\t}\n\n\treturn function(obj){\n\t\tvar res = true;\n\t\tfor(var i = 0, len = filter_methods.length; i < len; i++){\n\t\t\tvar filter_method = filter_methods[i];\n\t\t\tif(filter_method){\n\t\t\t\tres = res && (filter_method(obj.id, obj) !== false);\n\t\t\t}\n\t\t}\n\n\t\treturn res;\n\t};\n}\n\n\nmodule.exports = layerFactory;\n","var createLayerFactory = require(\"./render/layer_engine\");\n\nvar createLayerEngine = function(gantt){\n\tvar factory = createLayerFactory(gantt);\n\treturn {\n\t\tgetDataRender: function(name){\n\t\t\treturn gantt.$services.getService(\"layer:\" + name) || null;\n\t\t},\n\t\tcreateDataRender: function(config){\n\t\t\tvar name = config.name,\n\t\t\t\tdefaultContainer = config.defaultContainer,\n\t\t\t\tpreviusSiblingContainer = config.defaultContainerSibling;\n\n\t\t\tvar layers = factory.createGroup(\n\t\t\t\tdefaultContainer,\n\t\t\t\tpreviusSiblingContainer,\n\t\t\t\tfunction(itemId, item){\n\t\t\t\t\tif(layers.filters){\n\t\t\t\t\t\tfor(var i = 0; i < layers.filters.length; i++){\n\t\t\t\t\t\t\tif(layers.filters[i](itemId, item) === false){\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tgantt.$services.setService(\"layer:\" + name, function(){\n\t\t\t\treturn layers;\n\t\t\t});\n\n\t\t\tgantt.attachEvent(\"onGanttReady\", function () {\n\t\t\t\tlayers.addLayer();// init layers on start\n\t\t\t});\n\n\t\t\treturn layers;\n\t\t},\n\t\tinit: function(){\n\t\t\tvar taskLayers = this.createDataRender({\n\t\t\t\tname: \"task\",\n\t\t\t\tdefaultContainer: function(){\n\t\t\t\t\tif(gantt.$task_data){\n\t\t\t\t\t\treturn gantt.$task_data;\n\t\t\t\t\t}else if(gantt.$ui.getView(\"timeline\")){\n\t\t\t\t\t\treturn gantt.$ui.getView(\"timeline\").$task_data;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdefaultContainerSibling: function(){\n\t\t\t\t\tif(gantt.$task_links){\n\t\t\t\t\t\treturn gantt.$task_links;\n\t\t\t\t\t}else if(gantt.$ui.getView(\"timeline\")){\n\t\t\t\t\t\treturn gantt.$ui.getView(\"timeline\").$task_links;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfilter: function(item){\n\n\t\t\t\t}\n\t\t\t}, gantt);\n\n\t\t\tvar linkLayers = this.createDataRender({\n\t\t\t\tname: \"link\",\n\t\t\t\tdefaultContainer: function(){\n\t\t\t\t\tif(gantt.$task_data){\n\t\t\t\t\t\treturn gantt.$task_data;\n\t\t\t\t\t}else if(gantt.$ui.getView(\"timeline\")){\n\t\t\t\t\t\treturn gantt.$ui.getView(\"timeline\").$task_data;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, gantt);\n\n\t\t\treturn {\n\t\t\t\taddTaskLayer: function(config){\n\t\t\t\t\treturn taskLayers.addLayer(config);\n\t\t\t\t},\n\n\t\t\t\t/*getTaskLayer: function(id){\n\t\t\t\t\treturn taskLayers.getLayer(id);\n\t\t\t\t},*/\n\n\t\t\t\t_getTaskLayers: function(){\n\t\t\t\t\treturn taskLayers.getLayers();\n\t\t\t\t},\n\t\t\t\tremoveTaskLayer: function(id){\n\t\t\t\t\ttaskLayers.removeLayer(id);\n\t\t\t\t},\n\t\t\t\t/*eachTaskLayer: function(code){\n\t\t\t\t\ttaskLayers.eachLayer(code);\n\t\t\t\t},*/\n\t\t\t\t_clearTaskLayers: function(){\n\t\t\t\t\ttaskLayers.clear();\n\t\t\t\t},\n\t\t\t\taddLinkLayer: function(config){\n\t\t\t\t\treturn linkLayers.addLayer(config);\n\t\t\t\t},\n\t\t\t\t/*getLinkLayer: function(id){\n\t\t\t\t\treturn linkLayers.getLayer(id);\n\t\t\t\t},*/\n\t\t\t\t_getLinkLayers: function(){\n\t\t\t\t\treturn linkLayers.getLayers();\n\t\t\t\t},\n\t\t\t\tremoveLinkLayer: function(id){\n\t\t\t\t\tlinkLayers.removeLayer(id);\n\t\t\t\t},\n\t\t\t\t/*eachLinkLayer: function(code){\n\t\t\t\t\tlinkLayers.eachLayer(code);\n\t\t\t\t},*/\n\t\t\t\t_clearLinkLayers: function(){\n\t\t\t\t\tlinkLayers.clear();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n};\n\nmodule.exports = createLayerEngine;","var domHelpers = require(\"../../utils/dom_helpers\");\n\nvar createMouseHandler = (function(domHelpers) {\n\treturn function (gantt) {\n\t\tvar eventHandlers = {\n\t\t\t\"click\": {},\n\t\t\t\"doubleclick\": {},\n\t\t\t\"contextMenu\": {}\n\t\t};\n\n\t\tfunction addEventTarget(event, className, handler, root) {\n\t\t\tif(!eventHandlers[event][className]){\n\t\t\t\teventHandlers[event][className] = [];\n\t\t\t}\n\n\t\t\teventHandlers[event][className].push({\n\t\t\t\thandler: handler,\n\t\t\t\troot: root\n\t\t\t});\n\t\t}\n\n\t\tfunction callHandler(eventName, className, root, args) {\n\t\t\tvar handlers = eventHandlers[eventName][className];\n\t\t\tif(handlers){\n\t\t\t\tfor(var i = 0; i < handlers.length; i++){\n\t\t\t\t\tif(!(root || handlers[i].root) || handlers[i].root === root){\n\t\t\t\t\t\thandlers[i].handler.apply(this, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction onClick(e) {\n\t\t\te = e || window.event;\n\t\t\tvar id = gantt.locate(e);\n\n\t\t\tvar handlers = findEventHandlers(e, eventHandlers.click);\n\t\t\tvar res = true;\n\t\t\tif (id !== null) {\n\t\t\t\tres = !gantt.checkEvent(\"onTaskClick\") || gantt.callEvent(\"onTaskClick\", [id, e]);\n\t\t\t} else {\n\t\t\t\tgantt.callEvent(\"onEmptyClick\", [e]);\n\t\t\t}\n\n\t\t\tif (res) {\n\t\t\t\tvar default_action = callEventHandlers(handlers, e, id);\n\t\t\t\tif (!default_action)\n\t\t\t\t\treturn;\n\n\t\t\t\tif (id && gantt.getTask(id) && gantt.config.select_task && !gantt.config.multiselect) {\n\t\t\t\t\tgantt.selectTask(id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction onContextMenu(e) {\n\t\t\te = e || window.event;\n\t\t\tvar src = e.target || e.srcElement,\n\t\t\t\ttaskId = gantt.locate(src),\n\t\t\t\tlinkId = gantt.locate(src, gantt.config.link_attribute);\n\n\t\t\tvar res = !gantt.checkEvent(\"onContextMenu\") || gantt.callEvent(\"onContextMenu\", [taskId, linkId, e]);\n\t\t\tif (!res) {\n\t\t\t\tif (e.preventDefault)\n\t\t\t\t\te.preventDefault();\n\t\t\t\telse\n\t\t\t\t\te.returnValue = false;\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tfunction findEventHandlers(e, hash){\n\t\t\tvar trg = e.target || e.srcElement;\n\t\t\tvar handlers = [];\n\t\t\twhile (trg) {\n\t\t\t\tvar css = domHelpers.getClassName(trg);\n\t\t\t\tif (css) {\n\t\t\t\t\tcss = css.split(\" \");\n\t\t\t\t\tfor (var i = 0; i < css.length; i++) {\n\t\t\t\t\t\tif (!css[i]) continue;\n\t\t\t\t\t\tif (hash[css[i]]) {\n\t\t\t\t\t\t\tvar delegateHandlers = hash[css[i]];\n\n\t\t\t\t\t\t\tfor(var h = 0; h < delegateHandlers.length; h++){\n\t\t\t\t\t\t\t\tif(delegateHandlers[h].root){\n\t\t\t\t\t\t\t\t\tif(!domHelpers.isChildOf(trg, delegateHandlers[h].root)){\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\thandlers.push(delegateHandlers[h].handler);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttrg = trg.parentNode;\n\t\t\t}\n\t\t\treturn handlers;\n\t\t}\n\n\t\tfunction callEventHandlers(handlers, e, id){\n\t\t\tvar res = true;\n\n\t\t\tfor(var i = 0; i < handlers.length; i++){\n\t\t\t\tvar handlerResult =  handlers[i].call(gantt, e, id, e.target || e.srcElement);\n\t\t\t\tres = res && !(typeof handlerResult != \"undefined\" && handlerResult !== true);\n\t\t\t}\n\n\t\t\treturn res;\n\t\t}\n\n\n\t\tfunction onDoubleClick(e) {\n\t\t\te = e || window.event;\n\t\t\tvar id = gantt.locate(e);\n\n\t\t\tvar handlers = findEventHandlers(e, eventHandlers.doubleclick);\n\t\t\tvar res = !gantt.checkEvent(\"onTaskDblClick\") || gantt.callEvent(\"onTaskDblClick\", [id, e]);\n\t\t\tif (res) {\n\t\t\t\tvar default_action = callEventHandlers(handlers, e, id);\n\t\t\t\tif (!default_action)\n\t\t\t\t\treturn;\n\n\t\t\t\tif (id !== null && gantt.getTask(id)) {\n\t\t\t\t\tif (res && gantt.config.details_on_dblclick) {\n\t\t\t\t\t\tgantt.showLightbox(id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction onMouseMove(e) {\n\t\t\tif (gantt.checkEvent(\"onMouseMove\")) {\n\t\t\t\tvar id = gantt.locate(e);\n\t\t\t\tgantt._last_move_event = e;\n\t\t\t\tgantt.callEvent(\"onMouseMove\", [id, e]);\n\t\t\t}\n\t\t}\n\n\t\tfunction detach(eventName, className, handler, root) {\n\t\t\tif (eventHandlers[eventName] && eventHandlers[eventName][className]) {\n\t\t\t\tvar handlers = eventHandlers[eventName];\n\t\t\t\tvar elementHandlers = handlers[className];\n\t\t\t\tfor(var i = 0; i < elementHandlers.length; i++){\n\t\t\t\t\tif(elementHandlers[i].root == root){\n\t\t\t\t\t\telementHandlers.splice(i, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!elementHandlers.length){\n\t\t\t\t\tdelete handlers[className];\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\tvar domEvents = gantt._createDomEventScope();\n\n\t\tfunction reset(node){\n\n\t\t\tdomEvents.detachAll();\n\n\t\t\tif(node){\n\t\t\t\tdomEvents.attach(node, \"click\", onClick);\n\t\t\t\tdomEvents.attach(node, \"dblclick\", onDoubleClick);\n\t\t\t\tdomEvents.attach(node, \"mousemove\", onMouseMove);\n\t\t\t\tdomEvents.attach(node, \"contextmenu\", onContextMenu);\n\t\t\t}\n\t\t}\n\n\n\n\t\treturn {\n\t\t\treset: reset,\n\t\t\tglobal: function(event, classname, handler){\n\t\t\t\taddEventTarget(event, classname, handler, null);\n\t\t\t},\n\t\t\tdelegate: addEventTarget,\n\t\t\tdetach: detach,\n\t\t\tcallHandler: callHandler,\n\t\t\tonDoubleClick: onDoubleClick,\n\t\t\tonMouseMove: onMouseMove,\n\t\t\tonContextMenu: onContextMenu,\n\t\t\tonClick: onClick,\n\t\t\tdestructor: function(){\n\t\t\t\treset();\n\t\t\t\teventHandlers = null;\n\t\t\t\tdomEvents = null;\n\t\t\t}\n\n\t\t};\n\t};\n\n})(domHelpers);\n\n\nmodule.exports = {\n\tinit:createMouseHandler\n};","var utils = require(\"../../utils/utils\");\n\nfunction ViewSettings(config){\n\tutils.mixin(this, config, true);\n}\n\n\nfunction extendSettings (store, parentSettings){\n\tvar own = this.$config[store];\n\n\tif(own){\n\t\tif(own instanceof ViewSettings){\n\t\t\treturn own;\n\t\t}else{\n\t\t\tViewSettings.prototype = parentSettings;\n\t\t\tthis.$config[store] = new ViewSettings(own);\n\t\t\treturn this.$config[store];\n\t\t}\n\t}else{\n\t\treturn parentSettings;\n\t}\n}\n\nvar configurable = function(parentView){\n\tvar parentConfig,\n\t\tparentTemplates;\n\n\treturn {\n\t\t$getConfig: function(){\n\t\t\tif(!parentConfig){\n\t\t\t\tparentConfig = parentView ? parentView.$getConfig() : this.$gantt.config;\n\t\t\t}\n\n\t\t\treturn extendSettings.call(this, \"config\", parentConfig);\n\t\t},\n\t\t$getTemplates: function(){\n\t\t\tif(!parentTemplates){\n\t\t\t\tparentTemplates = parentView ? parentView.$getTemplates() : this.$gantt.templates;\n\t\t\t}\n\n\t\t\treturn extendSettings.call(this, \"templates\", parentTemplates);\n\t\t}\n\t};\n};\n\nmodule.exports = function(obj, parent){\n\tutils.mixin(obj, configurable(parent));\n};","var utils = require(\"../../utils/utils\"),\n\tconfigurable = require(\"./configurable\");\n\nvar uiFactory = function createFactory(gantt){\n\tvar views = {};\n\n\tfunction ui(cell, parentView) {\n\t\tvar content;\n\t\tvar view = \"cell\";\n\t\tif (cell.view){\n\t\t\tview = \"viewcell\";\n\t\t}else if (cell.resizer) {\n\t\t\tview = \"resizer\";\n\t\t}\n\t\telse if (cell.rows || cell.cols) {\n\t\t\tview = \"layout\";\n\t\t}\n\t\telse if (cell.views) {\n\t\t\tview = \"multiview\";\n\t\t}\n\n\t\tcontent = createView.call(this, view, null, cell, parentView);\n\t\treturn content;\n\t}\n\t\n\tvar createdViews = {};\n\n\tfunction createView(name, parent, config, parentView) {\n\t\tvar creator = views[name];\n\n\t\tif(!creator || !creator.create)\n\t\t\treturn false;\n\n\t\tif(name == \"resizer\" && !config.mode){\n\t\t\tif(parentView.$config.cols){\n\t\t\t\tconfig.mode = \"x\";\n\t\t\t}else{\n\t\t\t\tconfig.mode = \"y\";\n\t\t\t}\n\t\t}\n\n\t\tif(name == \"viewcell\" && config.view == \"scrollbar\" && !config.scroll){\n\t\t\tif(parentView.$config.cols){\n\t\t\t\tconfig.scroll = \"y\";\n\t\t\t}else{\n\t\t\t\tconfig.scroll = \"x\";\n\t\t\t}\n\t\t}\n\n\t\tvar config = utils.copy(config);\n\n\t\tif(!config.id && !createdViews[config.view]){\n\t\t\tconfig.id = config.view;\n\t\t}\n\n\t\tif(config.id && !config.css){\n\t\t\tconfig.css = config.id+\"_cell\";\n\t\t}\n\n\t\tvar view = new creator.create(parent, config, this, gantt);\n\n\t\tif(creator.configure){\n\t\t\tcreator.configure(view);\n\t\t}\n\n\t\tconfigurable(view, parentView);\n\t\tif(!view.$id){\n\t\t\tview.$id = config.id || gantt.uid();\n\t\t}\n\n\t\tif(!view.$parent && typeof parent == \"object\"){\n\t\t\tview.$parent = parent;\n\t\t}\n\t\tif(!view.$config){\n\t\t\tview.$config = config;\n\t\t}\n\n\t\tif(createdViews[view.$id]){\n\t\t\tview.$id = gantt.uid();\n\t\t}\n\n\t\tcreatedViews[view.$id] = view;\n\n\t\treturn view;\n\t}\n\n\tfunction reset(){\n\t\tcreatedViews = {};\n\t}\n\n\tfunction register(name, viewConstructor, configure){\n\t\tviews[name] = {create: viewConstructor, configure: configure};\n\t}\n\n\tfunction getView(id){\n\t\treturn createdViews[id];\n\t}\n\n\tvar factory = {\n\t\tinitUI:ui,\n\t\treset: reset,\n\t\tregisterView: register,\n\t\tcreateView: createView,\n\t\tgetView: getView\n\t};\n\n\treturn factory;\n};\n\nmodule.exports = {\n\tcreateFactory: uiFactory\n};\n\n","var uiFactory = require(\"./ui_factory\"),\n\tmouseEvents = require(\"./mouse\"),\n\tcreateLayers = require(\"./gantt_layers\"),\n\tCell = require(\"./layout/cell\"),\n\tLayout = require(\"./layout/layout\"),\n\tViewLayout = require(\"./layout/view_layout\"),\n\tViewCell = require(\"./layout/view_cell\"),\n\tResizer = require(\"./layout/resizer_cell\"),\n\tScrollbar = require(\"./layout/scrollbar_cell\"),\n\tTimeline = require(\"./timeline/timeline\"),\n\tGrid = require(\"./grid/grid\"),\n\tResourceGrid = require(\"./grid/resource_grid\"),\n\tResourceTimeline = require(\"./timeline/resource_timeline\"),\n\tResourceHistogram = require(\"./timeline/resource_histogram\");\n\n\nvar gridEditorsFactory = require(\"./grid/editors/controller\");\n\n\nvar renderTaskBar = require(\"./render/task_bar_render\"),\n\trenderSplitTaskBar = require(\"./render/task_split_render\"),\n\trenderTaskBg = require(\"./render/task_bg_render\"),\n\trenderLink = require(\"./render/link_render\"),\n\tgridRenderer = require(\"./render/task_grid_line_render\");\n\nvar mainGridInitializer = require(\"./grid/main_grid_initializer\");\nvar mainTimelineInitializer = require(\"./timeline/main_timeline_initializer\");\nvar mainLayoutInitializer = require(\"./main_layout_initializer\");\n\nfunction initUI(gantt){\n\tfunction attachInitializer(view, initializer){\n\t\tvar ext = initializer(gantt);\n\t\tif(ext.onCreated)\n\t\t\text.onCreated(view);\n\t\tview.attachEvent(\"onReady\", function(){\n\t\t\tif(ext.onInitialized)\n\t\t\t\text.onInitialized(view);\n\t\t});\n\t\tview.attachEvent(\"onDestroy\", function(){\n\t\t\tif(ext.onDestroyed)\n\t\t\t\text.onDestroyed(view);\n\t\t});\n\t}\n\n\tvar factory = uiFactory.createFactory(gantt);\n\tfactory.registerView(\"cell\", Cell);\n\tfactory.registerView(\"resizer\", Resizer);\n\tfactory.registerView(\"scrollbar\", Scrollbar);\n\tfactory.registerView(\"layout\", Layout, function(view){\n\t\tvar id = view.$config ? view.$config.id : null;\n\t\tif(id === \"main\"){\n\t\t\tattachInitializer(view, mainLayoutInitializer);\n\t\t}\n\t});\n\tfactory.registerView(\"viewcell\", ViewCell);\n\tfactory.registerView(\"multiview\", ViewLayout);\n\tfactory.registerView(\"timeline\", Timeline, function(view){\n\t\tvar id = view.$config ? view.$config.id : null;\n\t\tif(id === \"timeline\" || view.$config.bind == \"task\"){\n\t\t\tattachInitializer(view, mainTimelineInitializer);\n\t\t}\n\t});\n\tfactory.registerView(\"grid\", Grid, function(view){\n\t\tvar id = view.$config ? view.$config.id : null;\n\t\tif(id === \"grid\" || view.$config.bind == \"task\"){\n\t\t\tattachInitializer(view, mainGridInitializer);\n\t\t}\n\t});\n\n\tfactory.registerView(\"resourceGrid\", ResourceGrid);\n\tfactory.registerView(\"resourceTimeline\", ResourceTimeline);\n\tfactory.registerView(\"resourceHistogram\", ResourceHistogram);\n\n\tvar layersEngine = createLayers(gantt);\n\n\tvar inlineEditors = gridEditorsFactory(gantt);\n\n\tgantt.ext.inlineEditors = inlineEditors;\n\tgantt.ext._inlineEditors = inlineEditors;\n\tinlineEditors.init(gantt);\n\n\treturn {\n\t\tfactory:factory,\n\t\tmouseEvents: mouseEvents.init(gantt),\n\t\tlayersApi: layersEngine.init(),\n\t\trender:{\n\t\t\tgridLine: gridRenderer(gantt),\n\t\t\ttaskBg: renderTaskBg(gantt),\n\t\t\ttaskBar: renderTaskBar(gantt),\n\t\t\ttaskSplitBar: renderSplitTaskBar(gantt),\n\t\t\tlink: renderLink(gantt)\n\t\t},\n\t\tlayersService: {\n\t\t\tgetDataRender: function(name){\n\t\t\t\treturn layersEngine.getDataRender(name, gantt);\n\t\t\t},\n\t\t\tcreateDataRender: function(config){\n\t\t\t\treturn layersEngine.createDataRender(config, gantt);\n\t\t\t}\n\t\t}\n\t};\n}\n\nmodule.exports = {\n\tinit: initUI\n};","var utils = require(\"../utils/utils\");\nvar domHelpers = require(\"../utils/dom_helpers\");\n\nmodule.exports = function(gantt) {\n\n\tvar boxAttribute = \"data-dhxbox\";\n\n\tvar _dhx_msg_cfg = null;\n\n\tfunction callback(config, result) {\n\t\tvar usercall = config.callback;\n\t\tmodalBox.hide(config.box);\n\n\t\t_dhx_msg_cfg = config.box = null;\n\t\tif (usercall)\n\t\t\tusercall(result);\n\t}\n\n\tfunction modal_key(e) {\n\t\tif (_dhx_msg_cfg) {\n\t\t\te = e || event;\n\t\t\tvar code = e.which || event.keyCode;\n\t\t\tvar preventDefault = false;\n\n\t\t\tif (messageBox.keyboard) {\n\t\t\t\tif (code == 13 || code == 32) {\n\t\t\t\t\t// default behavior is to confirm/submit popup on space/enter\n\t\t\t\t\t// if browser focus is set on button element - do button click instead of default behavior\n\t\t\t\t\tvar target = e.target || e.srcElement;\n\t\t\t\t\tif (domHelpers.getClassName(target).indexOf(\"gantt_popup_button\") > -1 && target.click) {\n\t\t\t\t\t\ttarget.click();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(_dhx_msg_cfg, true);\n\t\t\t\t\t\tpreventDefault = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (code == 27) {\n\t\t\t\t\tcallback(_dhx_msg_cfg, false);\n\t\t\t\t\tpreventDefault = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (preventDefault) {\n\t\t\t\tif (e.preventDefault)\n\t\t\t\t\te.preventDefault();\n\t\t\t\treturn !(e.cancelBubble = true);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\n\tgantt.event(document, \"keydown\", modal_key, true);\n\n\tfunction modality(mode) {\n\t\tif (!modality.cover) {\n\t\t\tmodality.cover = document.createElement(\"div\");\n\t\t\t//necessary for IE only\n\t\t\tmodality.cover.onkeydown = modal_key;\n\t\t\tmodality.cover.className = \"dhx_modal_cover\";\n\t\t\tdocument.body.appendChild(modality.cover);\n\t\t}\n\n\t\tmodality.cover.style.display = mode ? \"inline-block\" : \"none\";\n\t}\n\n\tfunction button(text, className, result) {\n\t\tvar buttonAriaAttrs = gantt._waiAria.messageButtonAttrString(text);\n\t\tvar name = className.toLowerCase().replace(/ /g, \"_\");\n\t\tvar button_css = \"gantt_\" + name + \"_button\" + \" dhtmlx_\" + name + \"_button\"; // dhtmlx_ok_button, dhtmlx_click_me_button\n\t\treturn \"<div \" + buttonAriaAttrs + \" class='gantt_popup_button dhtmlx_popup_button \" + button_css + \"' data-result='\" + result + \"' result='\" + result + \"' ><div>\" + text + \"</div></div>\";\n\t}\n\n\tfunction info(text) {\n\t\tif (!messageBox.area) {\n\t\t\tmessageBox.area = document.createElement(\"div\");\n\t\t\tmessageBox.area.className = \"gantt_message_area dhtmlx_message_area\";\n\t\t\tmessageBox.area.style[messageBox.position] = \"5px\";\n\t\t\tdocument.body.appendChild(messageBox.area);\n\t\t}\n\n\t\tmessageBox.hide(text.id);\n\t\tvar message = document.createElement(\"div\");\n\t\tmessage.innerHTML = \"<div>\" + text.text + \"</div>\";\n\t\tmessage.className = \"gantt-info dhtmlx-info gantt-\" + text.type + \" dhtmlx-\" + text.type;\n\t\tmessage.onclick = function () {\n\t\t\tmessageBox.hide(text.id);\n\t\t\ttext = null;\n\t\t};\n\n\t\tgantt._waiAria.messageInfoAttr(message);\n\n\t\tif (messageBox.position == \"bottom\" && messageBox.area.firstChild)\n\t\t\tmessageBox.area.insertBefore(message, messageBox.area.firstChild);\n\t\telse\n\t\t\tmessageBox.area.appendChild(message);\n\n\t\tif (text.expire > 0)\n\t\t\tmessageBox.timers[text.id] = window.setTimeout(function () {\n\t\t\t\tmessageBox.hide(text.id);\n\t\t\t}, text.expire);\n\n\t\tmessageBox.pull[text.id] = message;\n\t\tmessage = null;\n\n\t\treturn text.id;\n\t}\n\n\tfunction getFirstDefined() {\n\t\tvar values = [].slice.apply(arguments, [0]);\n\n\t\tfor (var i = 0; i < values.length; i++) {\n\t\t\tif (values[i]) {\n\t\t\t\treturn values[i];\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction _boxStructure(config, ok, cancel) {\n\t\tvar box = document.createElement(\"div\");\n\n\t\tvar contentId = utils.uid();\n\t\tgantt._waiAria.messageModalAttr(box, contentId);\n\n\n\t\tbox.className = \" gantt_modal_box dhtmlx_modal_box gantt-\" + config.type + \" dhtmlx-\" + config.type;\n\t\tbox.setAttribute(boxAttribute, 1);\n\n\t\tvar inner = '';\n\n\t\tif (config.width)\n\t\t\tbox.style.width = config.width;\n\t\tif (config.height)\n\t\t\tbox.style.height = config.height;\n\t\tif (config.title)\n\t\t\tinner += '<div class=\"gantt_popup_title dhtmlx_popup_title\">' + config.title + '</div>';\n\t\tinner += '<div class=\"gantt_popup_text dhtmlx_popup_text\" id=\"' + contentId + '\"><span>' + (config.content ? '' : config.text) + '</span></div><div  class=\"gantt_popup_controls dhtmlx_popup_controls\">';\n\t\tif (ok)\n\t\t\tinner += button(getFirstDefined(config.ok, gantt.locale.labels.message_ok, \"OK\"), \"ok\", true);\n\t\tif (cancel)\n\t\t\tinner += button(getFirstDefined(config.cancel, gantt.locale.labels.message_cancel, \"Cancel\"), \"cancel\", false);\n\n\t\tif (config.buttons) {\n\t\t\tfor (var i = 0; i < config.buttons.length; i++) {\n\t\t\t\tvar btn = config.buttons[i];\n\t\t\t\tif (typeof btn == \"object\") {\n\t\t\t\t\t// Support { label:\"Save\", css:\"main_button\", value:\"save\" }\n\t\t\t\t\tvar label = btn.label;\n\t\t\t\t\tvar css = btn.css || (\"gantt_\" + btn.label.toLowerCase() + \"_button dhtmlx_\" + btn.label.toLowerCase() + \"_button\");\n\t\t\t\t\tvar value = btn.value || i;\n\t\t\t\t\tinner += button(label, css, value);\n\t\t\t\t} else {\n\t\t\t\t\tinner += button(btn, btn, i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinner += '</div>';\n\t\tbox.innerHTML = inner;\n\n\t\tif (config.content) {\n\t\t\tvar node = config.content;\n\t\t\tif (typeof node == \"string\")\n\t\t\t\tnode = document.getElementById(node);\n\t\t\tif (node.style.display == 'none')\n\t\t\t\tnode.style.display = \"\";\n\t\t\tbox.childNodes[config.title ? 1 : 0].appendChild(node);\n\t\t}\n\n\t\tbox.onclick = function (e) {\n\t\t\te = e || event;\n\t\t\tvar source = e.target || e.srcElement;\n\t\t\tif (!source.className) source = source.parentNode;\n\t\t\tif (source.className.split(\" \")[0] == \"gantt_popup_button\") {\n\t\t\t\tvar result = source.getAttribute(\"data-result\");\n\t\t\t\tresult = (result == \"true\") || (result == \"false\" ? false : result);\n\t\t\t\tcallback(config, result);\n\t\t\t}\n\t\t};\n\t\tconfig.box = box;\n\t\tif (ok || cancel)\n\t\t\t_dhx_msg_cfg = config;\n\n\t\treturn box;\n\t}\n\n\tfunction _createBox(config, ok, cancel) {\n\t\tvar box = config.tagName ? config : _boxStructure(config, ok, cancel);\n\n\t\tif (!config.hidden)\n\t\t\tmodality(true);\n\t\tdocument.body.appendChild(box);\n\t\tvar x = Math.abs(Math.floor(((window.innerWidth || document.documentElement.offsetWidth) - box.offsetWidth) / 2));\n\t\tvar y = Math.abs(Math.floor(((window.innerHeight || document.documentElement.offsetHeight) - box.offsetHeight) / 2));\n\t\tif (config.position == \"top\")\n\t\t\tbox.style.top = \"-3px\";\n\t\telse\n\t\t\tbox.style.top = y + 'px';\n\t\tbox.style.left = x + 'px';\n\t\t//necessary for IE only\n\t\tbox.onkeydown = modal_key;\n\n\t\tmodalBox.focus(box);\n\n\t\tif (config.hidden)\n\t\t\tmodalBox.hide(box);\n\n\t\tgantt.callEvent(\"onMessagePopup\", [box]);\n\t\treturn box;\n\t}\n\n\tfunction alertPopup(config) {\n\t\treturn _createBox(config, true, false);\n\t}\n\n\tfunction confirmPopup(config) {\n\t\treturn _createBox(config, true, true);\n\t}\n\n\tfunction boxPopup(config) {\n\t\treturn _createBox(config);\n\t}\n\n\tfunction box_params(text, type, callback) {\n\t\tif (typeof text != \"object\") {\n\t\t\tif (typeof type == \"function\") {\n\t\t\t\tcallback = type;\n\t\t\t\ttype = \"\";\n\t\t\t}\n\t\t\ttext = {text: text, type: type, callback: callback};\n\t\t}\n\t\treturn text;\n\t}\n\n\tfunction params(text, type, expire, id) {\n\t\tif (typeof text != \"object\")\n\t\t\ttext = {text: text, type: type, expire: expire, id: id};\n\t\ttext.id = text.id || utils.uid();\n\t\ttext.expire = text.expire || messageBox.expire;\n\t\treturn text;\n\t}\n\n\tvar alertBox = function () {\n\t\tvar text = box_params.apply(this, arguments);\n\t\ttext.type = text.type || \"confirm\";\n\t\treturn alertPopup(text);\n\t};\n\tvar confirmBox = function () {\n\t\tvar text = box_params.apply(this, arguments);\n\t\ttext.type = text.type || \"alert\";\n\t\treturn confirmPopup(text);\n\t};\n\tvar modalBox = function () {\n\t\tvar text = box_params.apply(this, arguments);\n\t\ttext.type = text.type || \"alert\";\n\t\treturn boxPopup(text);\n\t};\n\tmodalBox.hide = function (node) {\n\t\twhile (node && node.getAttribute && !node.getAttribute(boxAttribute))\n\t\t\tnode = node.parentNode;\n\t\tif (node) {\n\t\t\tnode.parentNode.removeChild(node);\n\t\t\tmodality(false);\n\n\t\t\tgantt.callEvent(\"onAfterMessagePopup\", [node]);\n\t\t}\n\t};\n\n\tmodalBox.focus = function (node) {\n\t\tsetTimeout(function () {\n\t\t\tvar focusable = domHelpers.getFocusableNodes(node);\n\t\t\tif (focusable.length) {\n\t\t\t\tif (focusable[0].focus) focusable[0].focus();\n\t\t\t}\n\t\t}, 1);\n\t};\n\n\tvar messageBox = function (text, type, expire, id) {\n\t\ttext = params.apply(this, arguments);\n\t\ttext.type = text.type || \"info\";\n\n\t\tvar subtype = text.type.split(\"-\")[0];\n\t\tswitch (subtype) {\n\t\t\tcase \"alert\":\n\t\t\t\treturn alertPopup(text);\n\t\t\tcase \"confirm\":\n\t\t\t\treturn confirmPopup(text);\n\t\t\tcase \"modalbox\":\n\t\t\t\treturn boxPopup(text);\n\t\t\tdefault:\n\t\t\t\treturn info(text);\n\t\t}\n\t};\n\n\tmessageBox.seed = (new Date()).valueOf();\n\tmessageBox.uid = utils.uid;\n\tmessageBox.expire = 4000;\n\tmessageBox.keyboard = true;\n\tmessageBox.position = \"top\";\n\tmessageBox.pull = {};\n\tmessageBox.timers = {};\n\n\tmessageBox.hideAll = function () {\n\t\tfor (var key in messageBox.pull)\n\t\t\tmessageBox.hide(key);\n\t};\n\tmessageBox.hide = function (id) {\n\t\tvar obj = messageBox.pull[id];\n\t\tif (obj && obj.parentNode) {\n\t\t\twindow.setTimeout(function () {\n\t\t\t\tobj.parentNode.removeChild(obj);\n\t\t\t\tobj = null;\n\t\t\t}, 2000);\n\t\t\tobj.className += \" hidden\";\n\n\t\t\tif (messageBox.timers[id])\n\t\t\t\twindow.clearTimeout(messageBox.timers[id]);\n\t\t\tdelete messageBox.pull[id];\n\t\t}\n\t};\n\n\tvar popups = [];\n\tgantt.attachEvent(\"onMessagePopup\", function(box){\n\t\tpopups.push(box);\n\t});\n\tgantt.attachEvent(\"onAfterMessagePopup\", function(box){\n\t\tfor(var i = 0; i < popups.length; i++){\n\t\t\tif(popups[i] === box){\n\t\t\t\tpopups.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t});\n\n\tgantt.attachEvent(\"onDestroy\", function(){\n\t\tif(modality.cover && modality.cover.parentNode){\n\t\t\tmodality.cover.parentNode.removeChild(modality.cover);\n\t\t}\n\n\t\tfor(var i = 0; i < popups.length; i++){\n\t\t\tif(popups[i].parentNode){\n\t\t\t\tpopups[i].parentNode.removeChild(popups[i]);\n\t\t\t}\n\t\t}\n\t\tpopups = null;\n\n\t\tif(messageBox.area && messageBox.area.parentNode){\n\t\t\tmessageBox.area.parentNode.removeChild(messageBox.area);\n\t\t}\n\t\tmessageBox = null;\n\t});\n\n\treturn {\n\t\talert: alertBox,\n\t\tconfirm: confirmBox,\n\t\tmessage: messageBox,\n\t\tmodalbox: modalBox\n\t};\n};","var utils = require(\"./utils\");\n\nfunction createScope(addEvent, removeEvent){\n\taddEvent = addEvent || utils.event;\n\tremoveEvent = removeEvent || utils.eventRemove;\n\n\tvar handlers = [];\n\n\treturn {\n\t\tattach: function(el, event, handler, capture){\n\t\t\thandlers.push({element: el, event:event, callback: handler, capture: capture});\n\t\t\taddEvent(el, event, handler, capture);\n\t\t},\n\t\tdetach: function(el, event, handler, capture){\n\t\t\tremoveEvent(el, event, handler, capture);\n\t\t\tfor(var i = 0; i < handlers.length; i++){\n\t\t\t\tvar handler = handlers[i];\n\t\t\t\tif(handler.element === el && handler.event === event && handler.callback === handler && handler.capture === capture){\n\t\t\t\t\thandlers.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdetachAll: function(){\n\t\t\tfor(var i = 0; i < handlers.length; i++){\n\t\t\t\tremoveEvent(handlers[i].element, handlers[i].event, handlers[i].callback, handlers[i].capture);\n\t\t\t\tremoveEvent(handlers[i].element, handlers[i].event, handlers[i].callback, undefined);\n\t\t\t\tremoveEvent(handlers[i].element, handlers[i].event, handlers[i].callback, false);\n\t\t\t\tremoveEvent(handlers[i].element, handlers[i].event, handlers[i].callback, true);\n\t\t\t}\n\t\t\thandlers = [];\n\t\t},\n\t\textend: function(){\n\t\t\treturn createScope(this.event, this.eventRemove);\n\t\t}\n\t};\n}\n\nmodule.exports = createScope;","var utils = require(\"../../utils/utils\");\n\nvar StateService = (function(){\n\tvar stateProviders = {};\n\n\tfunction getState(name){\n\t\tif(name){\n\t\t\treturn stateProviders[name].method();\n\t\t}else{\n\t\t\tvar res = {};\n\t\t\tfor(var i in stateProviders){\n\t\t\t\tif(!stateProviders[i].internal)\n\t\t\t\t\tutils.mixin(res, stateProviders[i].method(), true);\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tfunction registerProvider(name, provider, internal){\n\t\tstateProviders[name] = { method: provider, internal: internal};\n\t}\n\n\tfunction unregisterProvider(name){\n\t\tdelete stateProviders[name];\n\t}\n\n\treturn {\n\t\tgetState: getState,\n\t\tregisterProvider: registerProvider,\n\t\tunregisterProvider: unregisterProvider\n\t};\n});\n\nmodule.exports = StateService;\n\n","module.exports = function(gantt) {\n\n\tvar regTemplates = {};\n\n\tfunction initTemplate(name, initial, template_name) {\n\t\ttemplate_name = template_name || name;\n\t\tvar config = gantt.config,\n\t\t\ttemplates = gantt.templates;\n\n\t\tif (gantt.config[name] && regTemplates[template_name] != config[name]) {\n\t\t\tif (!(initial && templates[template_name])) {\n\t\t\t\ttemplates[template_name] = gantt.date.date_to_str(config[name]);\n\t\t\t\tregTemplates[template_name] = config[name];\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction initTemplates() {\n\t\tvar labels = gantt.locale.labels;\n\t\tlabels.gantt_save_btn = labels.icon_save;\n\t\tlabels.gantt_cancel_btn = labels.icon_cancel;\n\t\tlabels.gantt_delete_btn = labels.icon_delete;\n\n\n\t\tvar date = gantt.date;\n\n\t\t//build configuration based templates\n\t\tvar d = date.date_to_str;\n\t\tvar c = gantt.config;\n\t\tinitTemplate(\"date_scale\", true, undefined, gantt.config, gantt.templates);\n\t\tinitTemplate(\"date_grid\", true, \"grid_date_format\", gantt.config, gantt.templates);\n\t\tinitTemplate(\"task_date\", true, undefined, gantt.config, gantt.templates);\n\n\t\tgantt.mixin(gantt.templates, {\n\t\t\txml_date: date.str_to_date(c.xml_date, c.server_utc),\n\t\t\txml_format: d(c.xml_date, c.server_utc),\n\t\t\tapi_date: date.str_to_date(c.api_date),\n\t\t\tprogress_text: function (start, end, task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tgrid_header_class: function (column, config) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\n\t\t\ttask_text: function (start, end, task) {\n\t\t\t\treturn task.text;\n\t\t\t},\n\t\t\ttask_class: function (start, end, task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tgrid_row_class: function (start, end, task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\ttask_row_class: function (start, end, task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\ttask_cell_class: function (item, date) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tscale_cell_class: function (date) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tscale_row_class: function (date) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\n\t\t\tgrid_indent: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_indent'></div>\";\n\t\t\t},\n\t\t\tgrid_folder: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_icon gantt_folder_\" + (item.$open ? \"open\" : \"closed\") + \"'></div>\";\n\t\t\t},\n\t\t\tgrid_file: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_icon gantt_file'></div>\";\n\t\t\t},\n\t\t\tgrid_open: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_icon gantt_\" + (item.$open ? \"close\" : \"open\") + \"'></div>\";\n\t\t\t},\n\t\t\tgrid_blank: function (item) {\n\t\t\t\treturn \"<div class='gantt_tree_icon gantt_blank'></div>\";\n\t\t\t},\n\t\t\tdate_grid: function (date, item) {\n\t\t\t\tif (item && gantt.isUnscheduledTask(item) && gantt.config.show_unscheduled) {\n\t\t\t\t\treturn gantt.templates.task_unscheduled_time(item);\n\t\t\t\t} else {\n\t\t\t\t\treturn gantt.templates.grid_date_format(date);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ttask_time: function (start, end, ev) {\n\t\t\t\tif (gantt.isUnscheduledTask(ev) && gantt.config.show_unscheduled) {\n\t\t\t\t\treturn gantt.templates.task_unscheduled_time(ev);\n\t\t\t\t} else {\n\t\t\t\t\treturn gantt.templates.task_date(start) + \" - \" + gantt.templates.task_date(end);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ttask_unscheduled_time: function (task) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\n\t\t\ttime_picker: d(c.time_picker),\n\t\t\tlink_class: function (link) {\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tlink_description: function (link) {\n\t\t\t\tvar from = gantt.getTask(link.source),\n\t\t\t\t\tto = gantt.getTask(link.target);\n\n\t\t\t\treturn \"<b>\" + from.text + \"</b> &ndash;  <b>\" + to.text + \"</b>\";\n\t\t\t},\n\n\t\t\tdrag_link: function (from, from_start, to, to_start) {\n\t\t\t\tfrom = gantt.getTask(from);\n\t\t\t\tvar labels = gantt.locale.labels;\n\n\t\t\t\tvar text = \"<b>\" + from.text + \"</b> \" + (from_start ? labels.link_start : labels.link_end) + \"<br/>\";\n\t\t\t\tif (to) {\n\t\t\t\t\tto = gantt.getTask(to);\n\t\t\t\t\ttext += \"<b> \" + to.text + \"</b> \" + (to_start ? labels.link_start : labels.link_end) + \"<br/>\";\n\t\t\t\t}\n\t\t\t\treturn text;\n\t\t\t},\n\t\t\tdrag_link_class: function (from, from_start, to, to_start) {\n\t\t\t\tvar add = \"\";\n\n\t\t\t\tif (from && to) {\n\t\t\t\t\tvar allowed = gantt.isLinkAllowed(from, to, from_start, to_start);\n\t\t\t\t\tadd = \" \" + (allowed ? \"gantt_link_allow\" : \"gantt_link_deny\");\n\t\t\t\t}\n\n\t\t\t\treturn \"gantt_link_tooltip\" + add;\n\t\t\t},\n\n\t\t\t/* used for aria-labels of bar elements and for tooltip.js */\n\t\t\ttooltip_date_format: date.date_to_str(\"%Y-%m-%d\"),\n\t\t\ttooltip_text: function (start, end, event) {\n\t\t\t\treturn \"<b>Task:</b> \" + event.text + \"<br/><b>Start date:</b> \" + gantt.templates.tooltip_date_format(start) + \"<br/><b>End date:</b> \" + gantt.templates.tooltip_date_format(end);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn {\n\t\tinitTemplates: initTemplates,\n\t\tinitTemplate: initTemplate\n\t};\n\n};","var eventable = require(\"../../utils/eventable\");\nvar utils = require(\"../../utils/utils\");\nvar timeout = require(\"../../utils/timeout\");\n\nmodule.exports = function(gantt){\n\n\tfunction copyDomEvent(e){\n\t\treturn {\n\t\t\ttarget: e.target || e.srcElement,\n\t\t\tpageX: e.pageX,\n\t\t\tpageY: e.pageY,\n\t\t\tclientX: e.clientX,\n\t\t\tclientY: e.clientY,\n\t\t\tmetaKey: e.metaKey,\n\t\t\tshiftKey: e.shiftKey,\n\t\t\tctrlKey: e.ctrlKey,\n\t\t\taltKey: e.altKey\n\t\t};\n\t}\n\n\tfunction DnD(obj, config) {\n\t\tthis._obj = obj;\n\t\tthis._settings = config || {};\n\t\teventable(this);\n\n\t\tvar inputMethods = this.getInputMethods();\n\n\t\tthis._drag_start_timer = null;\n\t\tgantt.attachEvent(\"onGanttScroll\", utils.bind(function (left, top) {\n\t\t\tthis.clearDragTimer();\n\t\t}, this));\n\n\t\tfor(var i = 0; i < inputMethods.length; i++){\n\t\t\t(utils.bind(function(input){\n\n\t\t\t\tgantt.event(obj, input.down, utils.bind(function (e) {\n\t\t\t\t\tif(!input.accessor(e)){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._settings.original_target = copyDomEvent(e);\n\n\t\t\t\t\tif (gantt.config.touch) {\n\t\t\t\t\t\tthis.clearDragTimer();\n\n\t\t\t\t\t\tthis._drag_start_timer = setTimeout(utils.bind(function () {\n\t\t\t\t\t\t\tthis.dragStart(obj, e, input);\n\t\t\t\t\t\t}, this), gantt.config.touch_drag);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.dragStart(obj, e, input);\n\t\t\t\t\t}\n\t\t\t\t}, this));\n\n\t\t\t\tgantt.event(document.body, input.up, utils.bind(function (e) {\n\t\t\t\t\tif(!input.accessor(e)){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.clearDragTimer();\n\t\t\t\t}, this));\n\n\t\t\t}, this))(inputMethods[i]);\n\t\t}\n\t}\n\n\tDnD.prototype = {\n\t\ttraceDragEvents: function (domElement, inputMethod) {\n\t\t\tvar mousemove = utils.bind(function (e) {\n\t\t\t\treturn this.dragMove(domElement, e, inputMethod.accessor);\n\t\t\t}, this);\n\t\t\tutils.bind(function (e) {\n\t\t\t\treturn this.dragScroll(domElement, e);\n\t\t\t}, this);\n\n\t\t\tvar limited_mousemove = utils.bind(function (e) {\n\t\t\t\tif (e && e.preventDefault) //Cancel default action on DND\n\t\t\t\t\te.preventDefault();\n\t\t\t\t(e || event).cancelBubble = true;\n\t\t\t\tif (utils.defined(this.config.updates_per_second)) {\n\t\t\t\t\tif (!timeout(this, this.config.updates_per_second))\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn mousemove(e);\n\t\t\t}, this);\n\n\t\t\tvar mouseup = utils.bind(function (e) {\n\t\t\t\tgantt.eventRemove(document.body, inputMethod.move, limited_mousemove);\n\t\t\t\tgantt.eventRemove(document.body, inputMethod.up, mouseup);\n\t\t\t\treturn this.dragEnd(domElement);\n\t\t\t}, this);\n\n\t\t\tgantt.event(document.body, inputMethod.move, limited_mousemove);\n\t\t\tgantt.event(document.body, inputMethod.up, mouseup);\n\t\t},\n\t\tcheckPositionChange: function (pos) {\n\t\t\tvar diff_x = pos.x - this.config.pos.x;\n\t\t\tvar diff_y = pos.y - this.config.pos.y;\n\t\t\tvar distance = Math.sqrt(Math.pow(Math.abs(diff_x), 2) + Math.pow(Math.abs(diff_y), 2));\n\n\t\t\tif (distance > this.config.sensitivity) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tinitDnDMarker: function () {\n\t\t\t// create dnd placeholder and put it in dom\n\t\t\tvar marker = this.config.marker = document.createElement(\"div\");\n\t\t\tmarker.className = \"gantt_drag_marker\";\n\t\t\tmarker.innerHTML = \"Dragging object\";\n\t\t\tdocument.body.appendChild(marker);\n\t\t},\n\t\tbackupEventTarget: function (domEvent, getEvent) {\n\t\t\tif (!gantt.config.touch) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// keep original event target in DOM in order to keep dnd on touchmove event\n\t\t\tvar e = getEvent(domEvent);\n\n\t\t\tvar el = e.target || e.srcElement;\n\t\t\tvar copy = el.cloneNode(true);\n\t\t\t//this.config.target.target = copy;\n\t\t\tthis.config.original_target = copyDomEvent(e);\n\t\t\tthis.config.original_target.target = copy;\n\t\t\tthis.config.backup_element = el;\n\t\t\tel.parentNode.appendChild(copy);\n\n\t\t\tel.style.display = \"none\";\n\t\t\tdocument.body.appendChild(el);\n\t\t},\n\t\tgetInputMethods: function () {\n\t\t\t// bind actions to browser events\n\t\t\tvar inputMethods = [];\n\n\t\t\tinputMethods.push({\n\t\t\t\t\"move\": \"mousemove\",\n\t\t\t\t\"down\": \"mousedown\",\n\t\t\t\t\"up\": \"mouseup\",\n\t\t\t\t\"accessor\": function (e) {\n\t\t\t\t\treturn e;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (gantt.config.touch) {\n\n\t\t\t\tvar touchEventsSupported = true;\n\t\t\t\ttry{\n\t\t\t\t\tdocument.createEvent(\"TouchEvent\");\n\t\t\t\t}catch (e){\n\t\t\t\t\ttouchEventsSupported = false;\n\t\t\t\t}\n\n\t\t\t\tif(touchEventsSupported){\n\t\t\t\t\tinputMethods.push({\n\t\t\t\t\t\t\"move\": \"touchmove\",\n\t\t\t\t\t\t\"down\": \"touchstart\",\n\t\t\t\t\t\t\"up\": \"touchend\",\n\t\t\t\t\t\t\"accessor\": function (ev) {\n\t\t\t\t\t\t\tif (ev.touches && ev.touches.length > 1) return null;\n\t\t\t\t\t\t\tif (ev.touches[0])\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\ttarget: document.elementFromPoint(ev.touches[0].clientX, ev.touches[0].clientY),\n\t\t\t\t\t\t\t\t\tpageX: ev.touches[0].pageX,\n\t\t\t\t\t\t\t\t\tpageY: ev.touches[0].pageY,\n\t\t\t\t\t\t\t\t\tclientX: ev.touches[0].clientX,\n\t\t\t\t\t\t\t\t\tclientY: ev.touches[0].clientY\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\treturn ev;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}else if(window.navigator.pointerEnabled){\n\t\t\t\t\tinputMethods.push({\n\t\t\t\t\t\t\"move\": \"pointermove\",\n\t\t\t\t\t\t\"down\": \"pointerdown\",\n\t\t\t\t\t\t\"up\": \"pointerup\",\n\t\t\t\t\t\t\"accessor\": function (ev) {\n\t\t\t\t\t\t\tif (ev.pointerType == \"mouse\") return null;\n\t\t\t\t\t\t\treturn ev;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t}else if (window.navigator.msPointerEnabled){\n\t\t\t\t\tinputMethods.push({\n\t\t\t\t\t\t\"move\": \"MSPointerMove\",\n\t\t\t\t\t\t\"down\": \"MSPointerDown\",\n\t\t\t\t\t\t\"up\": \"MSPointerUp\",\n\t\t\t\t\t\t\"accessor\": function (ev) {\n\t\t\t\t\t\t\tif (ev.pointerType == ev.MSPOINTER_TYPE_MOUSE) return null;\n\t\t\t\t\t\t\treturn ev;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn inputMethods;\n\t\t},\n\t\tclearDragTimer: function () {\n\t\t\tif (this._drag_start_timer) {\n\t\t\t\tclearTimeout(this._drag_start_timer);\n\t\t\t\tthis._drag_start_timer = null;\n\t\t\t}\n\t\t},\n\t\tdragStart: function (obj, e, inputMethod) {\n\t\t\tif (this.config && this.config.started) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.config = {\n\t\t\t\tobj: obj,\n\t\t\t\tmarker: null,\n\t\t\t\tstarted: false,\n\t\t\t\tpos: this.getPosition(e),\n\t\t\t\tsensitivity: 4\n\t\t\t};\n\t\t\tif (this._settings)\n\t\t\t\tutils.mixin(this.config, this._settings, true);\n\n\n\t\t\tthis.traceDragEvents(obj, inputMethod);\n\n\t\t\tgantt._prevent_touch_scroll = true;\n\t\t\tdocument.body.className += \" gantt_noselect\";\n\n\t\t\tif (gantt.config.touch) {\n\t\t\t\tthis.dragMove(obj, e, inputMethod.accessor);\n\t\t\t}\n\n\t\t},\n\t\tdragMove: function (obj, e, getEvent) {\n\t\t\tvar source = getEvent(e);\n\t\t\tif (!source) return;\n\n\t\t\tif (!this.config.marker && !this.config.started) {\n\t\t\t\tvar pos = this.getPosition(source);\n\n\t\t\t\tif (gantt.config.touch || this.checkPositionChange(pos)) {\n\t\t\t\t\t// real drag starts here,\n\t\t\t\t\t// when user moves mouse at first time after onmousedown\n\t\t\t\t\tthis.config.started = true;\n\t\t\t\t\tthis.config.ignore = false;\n\t\t\t\t\tif (this.callEvent(\"onBeforeDragStart\", [obj, this.config.original_target]) === false) {\n\t\t\t\t\t\tthis.config.ignore = true;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tthis.backupEventTarget(e, getEvent);\n\t\t\t\t\tthis.initDnDMarker();\n\t\t\t\t\tgantt._touch_feedback();\n\t\t\t\t\tthis.callEvent(\"onAfterDragStart\", [obj, this.config.original_target]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.config.ignore = true;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tif (!this.config.ignore) {\n\t\t\t\tsource.pos = this.getPosition(source);\n\t\t\t\tthis.config.marker.style.left = source.pos.x + \"px\";\n\t\t\t\tthis.config.marker.style.top = source.pos.y + \"px\";\n\t\t\t\tthis.callEvent(\"onDragMove\", [obj, source]);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\tdragEnd: function (obj) {\n\t\t\tvar target = this.config.backup_element;\n\t\t\tif (target && target.parentNode) {\n\t\t\t\ttarget.parentNode.removeChild(target);\n\t\t\t}\n\t\t\tgantt._prevent_touch_scroll = false;\n\t\t\tif (this.config.marker) {\n\t\t\t\tthis.config.marker.parentNode.removeChild(this.config.marker);\n\t\t\t\tthis.config.marker = null;\n\n\t\t\t\tthis.callEvent(\"onDragEnd\", []);\n\t\t\t}\n\t\t\tthis.config.started = false;\n\t\t\tdocument.body.className = document.body.className.replace(\" gantt_noselect\", \"\");\n\t\t},\n\n\t\tgetPosition: function (e) {\n\t\t\tvar x = 0, y = 0;\n\t\t\te = e || window.event;\n\t\t\tif (e.pageX || e.pageY) {\n\t\t\t\tx = e.pageX;\n\t\t\t\ty = e.pageY;\n\t\t\t} else if (e.clientX || e.clientY) {\n\t\t\t\tx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n\t\t\t\ty = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n\t\t\t}\n\t\t\treturn {x: x, y: y};\n\t\t}\n\t};\n\n\treturn DnD;\n};\n","/*\n %d - the day as a number with a leading zero ( 01 to 31 );\n %j - the day as a number without a leading zero ( 1 to 31 );\n %D - the day as an abbreviation ( Sun to Sat );\n %l - the day as a full name ( Sunday to Saturday );\n %W - the ISO-8601 week number of the year. Weeks start on Monday; 1)\n %m - the month as a number without a leading zero ( 1 to 12 );\n %n - the month as a number with a leading zero ( 01 to 12);\n %M - the month as an abbreviation ( Jan to Dec );\n %F - the month as a full name ( January to December );\n %y - the year as a two-digit number ( 00 to 99 );\n %Y - the year as a four-digit number ( 1900–9999 );\n %h - the hour based on the 12-hour clock ( 00 to 11 );\n %H - the hour based on the 24-hour clock ( 00 to 23 );\n %i - the minute as a number with a leading zero ( 00 to 59 );\n %s - the second as a number without a leading zero ( 00 to 59 ); 2)\n %a - displays am (for times from midnight until noon) and pm (for times from noon until midnight);\n %A - displays AM (for times from midnight until noon) and PM (for times from noon until midnight).\n*/\n\nmodule.exports = function(gantt) {\n\tvar dateHelper = {\n\t\tinit: function () {\n\t\t\tvar locale = gantt.locale;\n\n\t\t\tvar s = locale.date.month_short;\n\t\t\tvar t = locale.date.month_short_hash = {};\n\t\t\tfor (var i = 0; i < s.length; i++)\n\t\t\t\tt[s[i]] = i;\n\n\t\t\tvar s = locale.date.month_full;\n\t\t\tvar t = locale.date.month_full_hash = {};\n\t\t\tfor (var i = 0; i < s.length; i++)\n\t\t\t\tt[s[i]] = i;\n\t\t},\n\t\tdate_part: function (date) {\n\t\t\tvar old = new Date(date);\n\t\t\tdate.setHours(0);\n\t\t\tthis.hour_start(date);\n\t\t\tif (date.getHours() && //shift to yesterday on dst\n\t\t\t\t(date.getDate() < old.getDate() || date.getMonth() < old.getMonth() || date.getFullYear() < old.getFullYear()))\n\t\t\t\tdate.setTime(date.getTime() + 60 * 60 * 1000 * (24 - date.getHours()));\n\t\t\treturn date;\n\t\t},\n\t\ttime_part: function (date) {\n\t\t\treturn (date.valueOf() / 1000 - date.getTimezoneOffset() * 60) % 86400;\n\t\t},\n\t\tweek_start: function (date) {\n\t\t\tvar shift = date.getDay();\n\t\t\tif (gantt.config.start_on_monday) {\n\t\t\t\tif (shift === 0) shift = 6;\n\t\t\t\telse shift--;\n\t\t\t}\n\t\t\treturn this.date_part(this.add(date, -1 * shift, \"day\"));\n\t\t},\n\t\tmonth_start: function (date) {\n\t\t\tdate.setDate(1);\n\t\t\treturn this.date_part(date);\n\t\t},\n\t\tquarter_start: function (date) {\n\t\t\tthis.month_start(date);\n\t\t\tvar m = date.getMonth(),\n\t\t\t\tres_month;\n\n\t\t\tif (m >= 9) {\n\t\t\t\tres_month = 9;\n\t\t\t} else if (m >= 6) {\n\t\t\t\tres_month = 6;\n\t\t\t} else if (m >= 3) {\n\t\t\t\tres_month = 3;\n\t\t\t} else {\n\t\t\t\tres_month = 0;\n\t\t\t}\n\n\t\t\tdate.setMonth(res_month);\n\t\t\treturn date;\n\t\t},\n\t\tyear_start: function (date) {\n\t\t\tdate.setMonth(0);\n\t\t\treturn this.month_start(date);\n\t\t},\n\t\tday_start: function (date) {\n\t\t\treturn this.date_part(date);\n\t\t},\n\t\thour_start: function (date) {\n\t\t\tif (date.getMinutes())\n\t\t\t\tdate.setMinutes(0);\n\t\t\tthis.minute_start(date);\n\n\t\t\treturn date;\n\t\t},\n\t\tminute_start: function (date) {\n\t\t\tif (date.getSeconds())\n\t\t\t\tdate.setSeconds(0);\n\t\t\tif (date.getMilliseconds())\n\t\t\t\tdate.setMilliseconds(0);\n\t\t\treturn date;\n\t\t},\n\t\t_add_days: function (date, inc) {\n\t\t\tvar ndate = new Date(date.valueOf());\n\n\t\t\tndate.setDate(ndate.getDate() + inc);\n\t\t\tif (inc >= 0 && (!date.getHours() && ndate.getHours()) &&//shift to yesterday on dst\n\t\t\t\t(ndate.getDate() <= date.getDate() || ndate.getMonth() < date.getMonth() || ndate.getFullYear() < date.getFullYear()))\n\t\t\t\tndate.setTime(ndate.getTime() + 60 * 60 * 1000 * (24 - ndate.getHours()));\n\t\t\treturn ndate;\n\t\t},\n\n\t\tadd: function (date, inc, mode) {\n\t\t\t/*jsl:ignore*/\n\t\t\tvar ndate = new Date(date.valueOf());\n\t\t\tswitch (mode) {\n\t\t\t\tcase \"day\":\n\t\t\t\t\tndate = this._add_days(ndate, inc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"week\":\n\t\t\t\t\tndate = this._add_days(ndate, inc * 7);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"month\":\n\t\t\t\t\tndate.setMonth(ndate.getMonth() + inc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"year\":\n\t\t\t\t\tndate.setYear(ndate.getFullYear() + inc);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"hour\":\n\t\t\t\t\t/*\n\t\t\t\t\t\tadding hours/minutes via setHour(getHour() + inc) gives weird result when\n\t\t\t\t\t\tadding one hour to the time before switch to a Daylight Saving time\n\n\t\t\t\t\t\texample: //Sun Mar 30 2014 01:00:00 GMT+0100 (W. Europe Standard Time)\n\t\t\t\t\t\tnew Date(2014, 02, 30, 1).setHours(2)\n\t\t\t\t\t\t>>Sun Mar 30 2014 01:00:00 GMT+0100 (W. Europe Standard Time)\n\n\t\t\t\t\t\tsetTime seems working as expected\n\t\t\t\t\t */\n\t\t\t\t\tndate.setTime(ndate.getTime() + inc * 60 * 60 * 1000);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"minute\":\n\n\t\t\t\t\tndate.setTime(ndate.getTime() + inc * 60 * 1000);\n\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn this[\"add_\" + mode](date, inc, mode);\n\t\t\t}\n\t\t\treturn ndate;\n\t\t\t/*jsl:end*/\n\t\t},\n\t\tadd_quarter: function (date, inc) {\n\t\t\treturn this.add(date, inc * 3, \"month\");\n\t\t},\n\n\t\tto_fixed: function (num) {\n\t\t\tif (num < 10) return \"0\" + num;\n\t\t\treturn num;\n\t\t},\n\t\tcopy: function (date) {\n\t\t\treturn new Date(date.valueOf());\n\t\t},\n\t\tdate_to_str: function (format, utc) {\n\t\t\tformat = format.replace(/%[a-zA-Z]/g, function (a) {\n\t\t\t\tswitch (a) {\n\t\t\t\t\tcase \"%d\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getDate())+\\\"\";\n\t\t\t\t\tcase \"%m\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed((date.getMonth()+1))+\\\"\";\n\t\t\t\t\tcase \"%j\":\n\t\t\t\t\t\treturn \"\\\"+date.getDate()+\\\"\";\n\t\t\t\t\tcase \"%n\":\n\t\t\t\t\t\treturn \"\\\"+(date.getMonth()+1)+\\\"\";\n\t\t\t\t\tcase \"%y\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getFullYear()%100)+\\\"\";\n\t\t\t\t\tcase \"%Y\":\n\t\t\t\t\t\treturn \"\\\"+date.getFullYear()+\\\"\";\n\t\t\t\t\tcase \"%D\":\n\t\t\t\t\t\treturn \"\\\"+locale.date.day_short[date.getDay()]+\\\"\";\n\t\t\t\t\tcase \"%l\":\n\t\t\t\t\t\treturn \"\\\"+locale.date.day_full[date.getDay()]+\\\"\";\n\t\t\t\t\tcase \"%M\":\n\t\t\t\t\t\treturn \"\\\"+locale.date.month_short[date.getMonth()]+\\\"\";\n\t\t\t\t\tcase \"%F\":\n\t\t\t\t\t\treturn \"\\\"+locale.date.month_full[date.getMonth()]+\\\"\";\n\t\t\t\t\tcase \"%h\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed((date.getHours()+11)%12+1)+\\\"\";\n\t\t\t\t\tcase \"%g\":\n\t\t\t\t\t\treturn \"\\\"+((date.getHours()+11)%12+1)+\\\"\";\n\t\t\t\t\tcase \"%G\":\n\t\t\t\t\t\treturn \"\\\"+date.getHours()+\\\"\";\n\t\t\t\t\tcase \"%H\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getHours())+\\\"\";\n\t\t\t\t\tcase \"%i\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getMinutes())+\\\"\";\n\t\t\t\t\tcase \"%a\":\n\t\t\t\t\t\treturn \"\\\"+(date.getHours()>11?\\\"pm\\\":\\\"am\\\")+\\\"\";\n\t\t\t\t\tcase \"%A\":\n\t\t\t\t\t\treturn \"\\\"+(date.getHours()>11?\\\"PM\\\":\\\"AM\\\")+\\\"\";\n\t\t\t\t\tcase \"%s\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(date.getSeconds())+\\\"\";\n\t\t\t\t\tcase \"%W\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(getISOWeek(date))+\\\"\";\n\t\t\t\t\tcase \"%w\":\n\t\t\t\t\t\treturn \"\\\"+to_fixed(getWeek(date))+\\\"\";\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (utc) format = format.replace(/date\\.get/g, \"date.getUTC\");\n\t\t\tvar dateToStr = new Function(\"date\", \"to_fixed\", \"locale\", \"getISOWeek\", \"getWeek\", \"return \\\"\" + format + \"\\\";\");\n\n\t\t\treturn function (date) {\n\t\t\t\treturn dateToStr(date, dateHelper.to_fixed, gantt.locale, dateHelper.getISOWeek, dateHelper.getWeek);\n\t\t\t};\n\t\t},\n\t\tstr_to_date: function (format, utc) {\n\t\t\tvar splt = \"var temp=date.match(/[a-zA-Z]+|[0-9]+/g);\";\n\t\t\tvar mask = format.match(/%[a-zA-Z]/g);\n\t\t\tfor (var i = 0; i < mask.length; i++) {\n\t\t\t\tswitch (mask[i]) {\n\t\t\t\t\tcase \"%j\":\n\t\t\t\t\tcase \"%d\":\n\t\t\t\t\t\tsplt += \"set[2]=temp[\" + i + \"]||1;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%n\":\n\t\t\t\t\tcase \"%m\":\n\t\t\t\t\t\tsplt += \"set[1]=(temp[\" + i + \"]||1)-1;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%y\":\n\t\t\t\t\t\tsplt += \"set[0]=temp[\" + i + \"]*1+(temp[\" + i + \"]>50?1900:2000);\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%g\":\n\t\t\t\t\tcase \"%G\":\n\t\t\t\t\tcase \"%h\":\n\t\t\t\t\tcase \"%H\":\n\t\t\t\t\t\tsplt += \"set[3]=temp[\" + i + \"]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%i\":\n\t\t\t\t\t\tsplt += \"set[4]=temp[\" + i + \"]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%Y\":\n\t\t\t\t\t\tsplt += \"set[0]=temp[\" + i + \"]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%a\":\n\t\t\t\t\tcase \"%A\":\n\t\t\t\t\t\tsplt += \"set[3]=set[3]%12+((temp[\" + i + \"]||'').toLowerCase()=='am'?0:12);\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%s\":\n\t\t\t\t\t\tsplt += \"set[5]=temp[\" + i + \"]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%M\":\n\t\t\t\t\t\tsplt += \"set[1]=locale.date.month_short_hash[temp[\" + i + \"]]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"%F\":\n\t\t\t\t\t\tsplt += \"set[1]=locale.date.month_full_hash[temp[\" + i + \"]]||0;\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar code = \"set[0],set[1],set[2],set[3],set[4],set[5]\";\n\t\t\tif (utc) code = \" Date.UTC(\" + code + \")\";\n\t\t\tvar strToDate = new Function(\"date\", \"locale\", \"var set=[0,0,1,0,0,0]; \" + splt + \" return new Date(\" + code + \");\");\n\n\t\t\treturn function (dateString) {\n\t\t\t\treturn strToDate(dateString, gantt.locale);\n\t\t\t};\n\t\t},\n\t\tgetISOWeek: function (ndate) {\n\t\t\treturn gantt.date._getWeekNumber(ndate, true);\n\t\t},\n\t\t_getWeekNumber: function(ndate, isoWeek){\n\t\t\tif (!ndate) return false;\n\t\t\tvar nday = ndate.getDay();\n\t\t\tif(isoWeek){\n\t\t\t\tif (nday === 0) {\n\t\t\t\t\tnday = 7;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar first_thursday = new Date(ndate.valueOf());\n\t\t\tfirst_thursday.setDate(ndate.getDate() + (4 - nday));\n\t\t\tvar year_number = first_thursday.getFullYear(); // year of the first Thursday\n\t\t\tvar ordinal_date = Math.round((first_thursday.getTime() - new Date(year_number, 0, 1).getTime()) / 86400000); //ordinal date of the first Thursday - 1 (so not really ordinal date)\n\t\t\tvar week_number = 1 + Math.floor(ordinal_date / 7);\n\t\t\treturn week_number;\n\t\t},\n\n\t\tgetWeek: function(ndate){\n\t\t\treturn gantt.date._getWeekNumber(ndate, gantt.config.start_on_monday);\n\t\t},\n\t\tgetUTCISOWeek: function (ndate) {\n\t\t\treturn gantt.date.getISOWeek(ndate);\n\t\t},\n\t\tconvert_to_utc: function (date) {\n\t\t\treturn new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n\t\t},\n\t\tparseDate: function (date, format) {\n\t\t\t// raw date may be of type string, number (timestamp) or something else\n\t\t\t// do not check for instanceof Date explicitly, since we may swap native date with different date implementation at some point\n\t\t\tif (date && !date.getFullYear) {\n\t\t\t\tif (gantt.defined(format)) {\n\t\t\t\t\tif (typeof(format) == \"string\")\n\t\t\t\t\t\tformat = gantt.defined(gantt.templates[format]) ? gantt.templates[format] : gantt.date.str_to_date(format);\n\t\t\t\t\telse\n\t\t\t\t\t\tformat = gantt.templates.xml_date;\n\t\t\t\t}\n\t\t\t\tif (date)\n\t\t\t\t\tdate = format(date);\n\t\t\t\telse\n\t\t\t\t\tdate = null;\n\t\t\t}\n\t\t\treturn date;\n\t\t}\n\t};\n\treturn dateHelper;\n};","var env = require(\"../../utils/env\");\n\nmodule.exports = function(gantt){\n\treturn {\n\n\t\t// if false - dhxr param will added to prevent caching on client side (default),\n\t\t// if true - do not add extra params\n\t\tcache: true,\n\n\t\t// default method for load/loadStruct, post/get allowed\n\t\t// get - since 4.1.1, this should fix 412 error for macos safari\n\t\tmethod: \"get\",\n\n\t\tparse: function(data) {\n\t\t\tif (typeof data !== \"string\") return data;\n\n\t\t\tvar obj;\n\t\t\tdata = data.replace(/^[\\s]+/,\"\");\n\t\t\tif (window.DOMParser && !env.isIE) { // ff,ie9\n\t\t\t\tobj = (new window.DOMParser()).parseFromString(data, \"text/xml\");\n\t\t\t} else if (window.ActiveXObject !== window.undefined) {\n\t\t\t\tobj = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n\t\t\t\tobj.async = \"false\";\n\t\t\t\tobj.loadXML(data);\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\t\txmltop: function(tagname, xhr, obj) {\n\t\t\tif (typeof xhr.status == \"undefined\" || xhr.status < 400) {\n\t\t\t\tvar xml = (!xhr.responseXML) ? this.parse(xhr.responseText || xhr) : (xhr.responseXML || xhr);\n\t\t\t\tif (xml && xml.documentElement !== null && !xml.getElementsByTagName(\"parsererror\").length) {\n\t\t\t\t\treturn xml.getElementsByTagName(tagname)[0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (obj !== -1) gantt.callEvent(\"onLoadXMLError\",[\"Incorrect XML\", arguments[1], obj]);\n\t\t\treturn document.createElement(\"DIV\");\n\t\t},\n\t\txpath: function(xpathExp, docObj) {\n\t\t\tif (!docObj.nodeName) docObj = docObj.responseXML || docObj;\n\t\t\tif (env.isIE) {\n\t\t\t\treturn docObj.selectNodes(xpathExp)||[];\n\t\t\t} else {\n\t\t\t\tvar rows = [];\n\t\t\t\tvar first;\n\t\t\t\tvar col = (docObj.ownerDocument||docObj).evaluate(xpathExp, docObj, null, XPathResult.ANY_TYPE, null);\n\n\t\t\t\twhile (true){\n\t\t\t\t\tfirst = col.iterateNext();\n\t\t\t\t\tif(first){\n\t\t\t\t\t\trows.push(first);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn rows;\n\t\t\t}\n\t\t},\n\t\tquery: function(config) {\n\t\t\tthis._call(\n\t\t\t\t(config.method || \"GET\"),\n\t\t\t\tconfig.url,\n\t\t\t\tconfig.data || \"\",\n\t\t\t\t(config.async || true),\n\t\t\t\tconfig.callback,\n\t\t\t\tnull,\n\t\t\t\tconfig.headers\n\t\t\t);\n\t\t},\n\t\tget: function(url, onLoad) {\n\t\t\tthis._call(\"GET\", url, null, true, onLoad);\n\t\t},\n\t\tgetSync: function(url) {\n\t\t\treturn this._call(\"GET\", url, null, false);\n\t\t},\n\t\tput: function(url, postData, onLoad) {\n\t\t\tthis._call(\"PUT\", url, postData, true, onLoad);\n\t\t},\n\t\tdel: function(url, postData, onLoad) {\n\t\t\tthis._call(\"DELETE\", url, postData, true, onLoad);\n\t\t},\n\t\tpost: function(url, postData, onLoad) {\n\t\t\tif (arguments.length == 1) {\n\t\t\t\tpostData = \"\";\n\t\t\t} else if (arguments.length == 2 && (typeof(postData) == \"function\" || typeof(window[postData]) == \"function\")) {\n\t\t\t\tonLoad = postData;\n\t\t\t\tpostData = \"\";\n\t\t\t} else {\n\t\t\t\tpostData = String(postData);\n\t\t\t}\n\t\t\tthis._call(\"POST\", url, postData, true, onLoad);\n\t\t},\n\t\tpostSync: function(url, postData) {\n\t\t\tpostData = (postData === null ? \"\" : String(postData));\n\t\t\treturn this._call(\"POST\", url, postData, false);\n\t\t},\n\t\tgetLong: function(url, onLoad) {\n\t\t\tthis._call(\"GET\", url, null, true, onLoad, {url:url});\n\t\t},\n\t\tpostLong: function(url, postData, onLoad) {\n\t\t\tif (arguments.length == 2 && (typeof(postData) == \"function\" || typeof(window[postData]))) {\n\t\t\t\tonLoad = postData;\n\t\t\t\tpostData = \"\";\n\t\t\t}\n\t\t\tthis._call(\"POST\", url, postData, true, onLoad, {url:url, postData:postData});\n\t\t},\n\t\t_call: function(method, url, postData, async, onLoad, longParams, headers) {\n\n\t\t\tvar t = (window.XMLHttpRequest && !env.isIE ? new XMLHttpRequest() : new window.ActiveXObject(\"Microsoft.XMLHTTP\"));\n\t\t\tvar isQt = (navigator.userAgent.match(/AppleWebKit/) !== null && navigator.userAgent.match(/Qt/) !== null && navigator.userAgent.match(/Safari/) !== null);\n\n\t\t\tif (!!async) {\n\t\t\t\tt.onreadystatechange = function() {\n\t\t\t\t\tif ((t.readyState == 4) || (isQt && t.readyState == 3)) { // what for long response and status 404?\n\t\t\t\t\t\tif (t.status != 200 || t.responseText === \"\")\n\t\t\t\t\t\t\tif (!gantt.callEvent(\"onAjaxError\", [t])) return;\n\n\t\t\t\t\t\twindow.setTimeout(function(){\n\t\t\t\t\t\t\tif (typeof(onLoad) == \"function\") {\n\t\t\t\t\t\t\t\tonLoad.apply(window, [{xmlDoc:t, filePath:url}]); // dhtmlx-compat, response.xmlDoc.responseXML/responseText\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (longParams) {\n\t\t\t\t\t\t\t\tif (typeof(longParams.postData) != \"undefined\") {\n\t\t\t\t\t\t\t\t\tthis.postLong(longParams.url, longParams.postData, onLoad);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.getLong(longParams.url, onLoad);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonLoad = null;\n\t\t\t\t\t\t\tt = null;\n\t\t\t\t\t\t},1);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (method == \"GET\" && !this.cache) {\n\t\t\t\turl += (url.indexOf(\"?\")>=0?\"&\":\"?\")+\"dhxr\"+new Date().getTime()+\"=1\";\n\t\t\t}\n\n\t\t\tt.open(method, url, async);\n\n\t\t\tif (headers){\n\t\t\t\tfor (var key in headers)\n\t\t\t\t\tt.setRequestHeader(key, headers[key]);\n\t\t\t} else if (method.toUpperCase() == \"POST\" || method == \"PUT\" || method == \"DELETE\") {\n\t\t\t\tt.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t\t\t} else if (method == \"GET\") {\n\t\t\t\tpostData = null;\n\t\t\t}\n\n\t\t\tt.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n\t\t\tt.send(postData);\n\n\t\t\tif (!async) return {xmlDoc:t, filePath:url}; // dhtmlx-compat, response.xmlDoc.responseXML/responseText\n\n\t\t},\n\t\turlSeparator: function(str){\n\t\t\tif (str.indexOf(\"?\") != -1)\n\t\t\t\treturn \"&\";\n\t\t\telse\n\t\t\t\treturn \"?\";\n\t\t}\n\t};\n};\n","module.exports = function() {\n\treturn {\n\t\tlayout: {\n\t\t\tcss: \"gantt_container\",\n\t\t\trows: [\n\t\t\t\t{\n\t\t\t\t\tcols: [\n\t\t\t\t\t\t{view: \"grid\", scrollX: \"scrollHor\", scrollY: \"scrollVer\"},\n\t\t\t\t\t\t{resizer: true, width: 1},\n\t\t\t\t\t\t{view: \"timeline\", scrollX: \"scrollHor\", scrollY: \"scrollVer\"},\n\t\t\t\t\t\t{view: \"scrollbar\", id: \"scrollVer\"}\n\t\t\t\t\t]\n\n\t\t\t\t},\n\t\t\t\t{view: \"scrollbar\", id: \"scrollHor\", height: 20}\n\t\t\t]\n\t\t},\n\t\tlinks: {\n\t\t\t\"finish_to_start\": \"0\",\n\t\t\t\"start_to_start\": \"1\",\n\t\t\t\"finish_to_finish\": \"2\",\n\t\t\t\"start_to_finish\": \"3\"\n\t\t},\n\t\ttypes: {\n\t\t\t'task': 'task',\n\t\t\t'project': 'project',\n\t\t\t'milestone': 'milestone'\n\t\t},\n\t\tauto_types: false,\n\t\tduration_unit: \"day\",\n\t\twork_time: false,\n\t\tcorrect_work_time: false,\n\t\tskip_off_time: false,\n\n\t\tcascade_delete: true,\n\n\t\tautosize: false,\n\t\tautosize_min_width: 0,\n\t\tautoscroll: true,\n\t\tautoscroll_speed: 30,\n\n\t\tshow_links: true,\n\t\tshow_task_cells: true,\n\t\t// replace backgroung of the task area with a canvas img\n\t\tstatic_background: false,\n\t\tbranch_loading: false,\n\t\tbranch_loading_property: \"$has_child\",\n\t\tshow_loading: false,\n\t\tshow_chart: true,\n\t\tshow_grid: true,\n\t\tmin_duration: 60 * 60 * 1000,\n\t\txml_date: \"%d-%m-%Y %H:%i\",\n\t\tapi_date: \"%d-%m-%Y %H:%i\",\n\t\tstart_on_monday: true,\n\t\tserver_utc: false,\n\t\tshow_progress: true,\n\t\tfit_tasks: false,\n\t\tselect_task: true,\n\t\tscroll_on_click: true,\n\t\tpreserve_scroll: true,\n\t\treadonly: false,\n\n\t\t/*grid */\n\t\tdate_grid: \"%Y-%m-%d\",\n\n\t\tdrag_links: true,\n\t\tdrag_progress: true,\n\t\tdrag_resize: true,\n\t\tdrag_project: false,\n\t\tdrag_move: true,\n\t\tdrag_mode: {\n\t\t\t\"resize\": \"resize\",\n\t\t\t\"progress\": \"progress\",\n\t\t\t\"move\": \"move\",\n\t\t\t\"ignore\": \"ignore\"\n\t\t},\n\t\tround_dnd_dates: true,\n\t\tlink_wrapper_width: 20,\n\t\troot_id: 0,\n\n\t\tautofit: false, // grid column automatic fit grid_width config\n\t\tcolumns: [\n\t\t\t{name: \"text\", tree: true, width: '*', resize: true},\n\t\t\t{name: \"start_date\", align: \"center\", resize: true},\n\t\t\t{name: \"duration\", align: \"center\"},\n\t\t\t{name: \"add\", width: 44}\n\t\t],\n\n\t\t/*scale*/\n\t\tstep: 1,\n\t\tscale_unit: \"day\",\n\t\tscale_offset_minimal: true,\n\t\tsubscales: [],\n\n\t\tinherit_scale_class: false,\n\n\t\ttime_step: 60,\n\t\tduration_step: 1,\n\t\tdate_scale: \"%d %M\",\n\t\ttask_date: \"%d %F %Y\",\n\t\ttime_picker: \"%H:%i\",\n\t\ttask_attribute: \"task_id\",\n\t\tlink_attribute: \"link_id\",\n\t\tlayer_attribute: \"data-layer\",\n\t\tbuttons_left: [\n\t\t\t\"gantt_save_btn\",\n\t\t\t\"gantt_cancel_btn\"\n\t\t],\n\t\t_migrate_buttons: {\n\t\t\t\"dhx_save_btn\": \"gantt_save_btn\",\n\t\t\t\"dhx_cancel_btn\": \"gantt_cancel_btn\",\n\t\t\t\"dhx_delete_btn\": \"gantt_delete_btn\"\n\t\t},\n\t\tbuttons_right: [\n\t\t\t\"gantt_delete_btn\"\n\t\t],\n\t\tlightbox: {\n\t\t\tsections: [\n\t\t\t\t{name: \"description\", height: 70, map_to: \"text\", type: \"textarea\", focus: true},\n\t\t\t\t{name: \"time\", type: \"duration\", map_to: \"auto\"}\n\t\t\t],\n\t\t\tproject_sections: [\n\t\t\t\t{name: \"description\", height: 70, map_to: \"text\", type: \"textarea\", focus: true},\n\t\t\t\t{name: \"type\", type: \"typeselect\", map_to: \"type\"},\n\t\t\t\t{name: \"time\", type: \"duration\", readonly: true, map_to: \"auto\"}\n\t\t\t],\n\t\t\tmilestone_sections: [\n\t\t\t\t{name: \"description\", height: 70, map_to: \"text\", type: \"textarea\", focus: true},\n\t\t\t\t{name: \"type\", type: \"typeselect\", map_to: \"type\"},\n\t\t\t\t{name: \"time\", type: \"duration\", single_date: true, map_to: \"auto\"}\n\t\t\t]\n\t\t},\n\t\tdrag_lightbox: true,\n\t\tsort: false,\n\t\tdetails_on_create: true,\n\t\tdetails_on_dblclick: true,\n\t\tinitial_scroll: true,\n\t\ttask_scroll_offset: 100,\n\n\t\torder_branch: false,\n\t\torder_branch_free: false,\n\n\t\ttask_height: \"full\",//number px of 'full' for row height\n\t\tmin_column_width: 70,\n\n\t\t// min width for grid column (when resizing)\n\t\tmin_grid_column_width: 70,\n\t\t// name of the attribute with column index for resize element\n\t\tgrid_resizer_column_attribute: \"column_index\",\n\t\t// name of the attribute with column index for resize element\n\t\tgrid_resizer_attribute: \"grid_resizer\",\n\n\t\t// grid width can be increased after the column has been resized\n\t\tkeep_grid_width: false,\n\n\t\t// grid width can be adjusted\n\t\tgrid_resize: false,\n\n\t\tshow_unscheduled: true,\n\n\t\t//\n\t\treadonly_property: \"readonly\",\n\t\teditable_property: \"editable\",\n\t\tcalendar_property: \"calendar_id\",\n\t\tresource_calendars: {},\n\n\t\ttype_renderers: {},\n\n\t\topen_tree_initially: false,\n\t\toptimize_render: true,\n\t\tprevent_default_scroll: false,\n\t\tshow_errors: true,\n\t\twai_aria_attributes: true,\n\t\tsmart_scales: true,\n\t\trtl:false,\n\t\tplaceholder_task: false\n\t};\n};\n","module.exports = function(){\n\tvar services = {};\n\tfunction register (name, getter){\n\t\tservices[name] = getter;\n\t}\n\n\tfunction getService(name){\n\t\tif(!services[name]){\n\t\t\treturn null;\n\t\t}\n\t\treturn services[name]();\n\t}\n\n\tvar servicesEnum = {\n\t\t\"config\": \"config\",\n\t\t\"templates\": \"templates\",\n\t\t\"locale\": \"locale\"\n\t};\n\n\treturn {\n\t\tservices: servicesEnum,\n\t\tsetService: register,\n\t\tgetService: getService,\n\t\tconfig: function(){\n\t\t\treturn this.getService(\"config\");\n\t\t},\n\t\ttemplates: function(){\n\t\t\treturn this.getService(\"templates\");\n\t\t},\n\t\tlocale: function(){\n\t\t\treturn this.getService(\"locale\");\n\t\t},\n\t\tdestructor: function(){\n\t\t\tfor(var i in services){\n\t\t\t\tif(services[i]){\n\t\t\t\t\tvar service = services[i];\n\t\t\t\t\tif(service && service.destructor){\n\t\t\t\t\t\tservice.destructor();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tservices = null;\n\t\t}\n\t};\n};\n","module.exports = function(gantt){\n\tgantt.$inject = function(module){\n\t\treturn module(this.$services);\n\t};\n};","module.exports = {\n\tKEY_CODES: {\n\t\tUP: 38,\n\t\tDOWN: 40,\n\t\tLEFT: 37,\n\t\tRIGHT: 39,\n\t\tSPACE: 32,\n\t\tENTER: 13,\n\t\tDELETE: 46,\n\t\tESC: 27,\n\t\tTAB: 9\n\t}\n};","require(\"css/skins/terrace.less\");\n\nfunction DHXGantt(){\n\tthis.constants = require(\"./../constants\");\n\tthis.version = VERSION;\n\tthis.templates = {};\n\tthis.ext = {};\n\tthis.keys = {\n\t\tedit_save: this.constants.KEY_CODES.ENTER,\n\t\tedit_cancel: this.constants.KEY_CODES.ESC\n\t};\n}\n\nmodule.exports = function() {\n\t// use a named constructor to make gantt instance discoverable in heap snapshots\n\tvar gantt = new DHXGantt();\n\n\trequire(\"./common/import\")(gantt);\n\n\tgantt.$services = gantt.$inject(require(\"./common/services\"));\n\tgantt.config = gantt.$inject(require(\"./common/config\"));\n\tgantt.ajax =  require(\"./common/ajax\")(gantt);\n\tgantt.date = require(\"./common/date\")(gantt);\n\tvar dnd = require(\"./common/dnd\")(gantt);\n\tgantt.$services.setService(\"dnd\", function(){return dnd;});\n\n\tgantt.$services.setService(\"config\", function () {\n\t\treturn gantt.config;\n\t});\n\tgantt.$services.setService(\"date\", function () {\n\t\treturn gantt.date;\n\t});\n\tgantt.$services.setService(\"locale\", function () {\n\t\treturn gantt.locale;\n\t});\n\tgantt.$services.setService(\"templates\", function () {\n\t\treturn gantt.templates;\n\t});\n\n\tvar templatesLoader = require(\"./common/templates\")(gantt);\n\tgantt.$services.setService(\"templateLoader\", function () {\n\t\treturn templatesLoader;\n\t});\n\n\tvar eventable = require(\"../utils/eventable\");\n\teventable(gantt);\n\n\tvar StateService = require(\"./common/state\");\n\tvar stateService = new StateService();\n\n\tstateService.registerProvider(\"global\", function () {\n\t\treturn {\n\t\t\tmin_date: gantt._min_date,\n\t\t\tmax_date: gantt._max_date,\n\t\t\tselected_task: gantt.$data.tasksStore.getSelectedId()\n\t\t};\n\t});\n\tgantt.getState = stateService.getState;\n\tgantt.$services.setService(\"state\", function () {\n\t\treturn stateService;\n\t});\n\n\tvar utils = require(\"../utils/utils\");\n\tutils.mixin(gantt, utils);\n\tgantt.env = require(\"../utils/env\");\n\n\tvar domEvents = require(\"../utils/dom_event_scope\")();\n\tgantt.event = domEvents.attach;\n\tgantt.eventRemove = domEvents.detach;\n\tgantt._eventRemoveAll = domEvents.detachAll;\n\tgantt._createDomEventScope = domEvents.extend;\n\n\tutils.mixin(gantt, require(\"./message\")(gantt));\n\tvar uiApi = require(\"./ui/index\").init(gantt);\n\tgantt.$ui = uiApi.factory;\n\tgantt.$ui.layers = uiApi.render;\n\tgantt.$mouseEvents = uiApi.mouseEvents;\n\tgantt.$services.setService(\"mouseEvents\", function () {\n\t\treturn gantt.$mouseEvents;\n\t});\n\tgantt.mixin(gantt, uiApi.layersApi);\n\n\trequire(\"./data_task_layers\")(gantt);\n\n\tgantt.$services.setService(\"layers\", function () {\n\t\treturn uiApi.layersService;\n\t});\n\n\tvar createLayoutFacade = require(\"./facades/layout\");\n\tgantt.mixin(gantt, createLayoutFacade());\n\n\trequire(\"./datastore/datastore_hooks\")(gantt);\n\n\trequire(\"./dataprocessor/hooks\")(gantt);\n\trequire(\"./plugins\")(gantt);\n\n\trequire(\"./dynamic_loading\")(gantt);\n\trequire(\"./grid_column_api\")(gantt);\n\trequire(\"./wai_aria\")(gantt);\n\trequire(\"./tasks\")(gantt);\n\trequire(\"./load\")(gantt);\n\trequire(\"./worktime/work_time\")(gantt);\n\trequire(\"./data\")(gantt);\n\trequire(\"./lightbox\")(gantt);\n\trequire(\"./lightbox_optional_time\")(gantt);\n\trequire(\"./data_task_types\")(gantt);\n\trequire(\"./cached_functions\")(gantt);\n\trequire(\"./skin\")(gantt);\n\trequire(\"../css/skins/skyblue\")(gantt);\n\trequire(\"../css/skins/meadow\")(gantt);\n\trequire(\"../css/skins/terrace\")(gantt);\n\trequire(\"../css/skins/broadway\")(gantt);\n\trequire(\"../css/skins/material\")(gantt);\n\trequire(\"../css/skins/contrast_black\")(gantt);\n\trequire(\"../css/skins/contrast_white\")(gantt);\n\trequire(\"./touch\")(gantt);\n\trequire(\"../locale/locale\")(gantt);\n\trequire(\"./gantt_core\")(gantt);\n\trequire(\"./destructor\")(gantt);\n\n\treturn gantt;\n};","module.exports = function(gantt){\n\n\t// no deprecated methods for now\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction deprecated(badCode, goodCode, versionDeprecated, versionDeleted) {\n\n\t\tvar formatting = gantt.env.isIE ? \"\" : \"%c\";\n\t\tversionDeprecated = versionDeprecated || \"v6.0\";\n\t\tversionDeleted = versionDeleted || \"v7.0\";\n\n\t\tvar message = [\n\t\t\tformatting, \"\\\"\", badCode, \"\\\"\",  formatting,\n\t\t\t\" has been deprecated in dhtmlxGantt \", versionDeprecated, \" and will stop working in \", versionDeleted,\". Use \",\n\t\t\tformatting, \"\\\"\", goodCode, \"\\\"\",  formatting,\n\t\t\t\" instead. \\nSee more details at http://docs.dhtmlx.com/gantt/migrating.html \"\n\t\t].join(\"\");\n\n\t\tvar log = window.console.warn || window.console.log;\n\n\t\tvar args = [message];\n\t\tif(!gantt.env.isIE){\n\t\t\targs = args.concat([\"font-weight:bold\", \"font-weight:normal\", \"font-weight:bold\", \"font-weight:normal\"]);\n\t\t}\n\n\t\tlog.apply(window.console, args);\n\t}\n\n\t// gantt.getSlack is defined inside an extension, leave it without message for now\n\n};","import * as warnings from \"./core/deprecated_warnings\";\nimport * as base from \"./core/gantt\";\n\n\nconst gantt = (window as any).gantt = base();\nwarnings(gantt);"],"sourceRoot":""}